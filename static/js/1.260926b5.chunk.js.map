{"version":3,"sources":["../../file-csv/dist/es/index-7878e3e0.js"],"names":["helper","getQuoteChar","q","dataType","toCsv","putData","allObjsOrArray","getHeaders","headerType","table","opt","keyMatchPattern","relativeMatchPattern","Object","keys","map","header","head","match","length","getLengthyItem","len","forEach","item","Array","isArray","addDataInSchema","schema","delimiter","quote","headerName","currentPoint","testMatch","indexOf","headParts","split","shift","join","replace","push","test","index","parseInt","pop","convertArray","Number","removeQuote","arrayToCsv","objectToCsv","csvToArray","arg","nodeType","type","prototype","toString","call","toLowerCase","isNaN","isFinite","data","parent","row","_typeof","String","array","every","str","trim","arrayDenote","objectDenote","output","val","trimmed","text","delimit","value","RegExp","a","m0","m1","m2","undefined","app","toObject","opts","content","headers","Error","hashData","hashItem","headerItem","toArray","arrayData","cItem","toColumnArray","toSchemaObject","schemaObject","toCSV","wrap","detailedOutput","csvJSON","csvData","JSON","parse","bigArrayLen","replaceNewLinePattern","i","j","stream","trans","transform","encoding","callback","_toColumnArray","this","_head","_opts","_toObject","_toSchemaObject","_toArray","stringify","space","chopLines","func","stream$1","Transform","readableObjectMode","writableObjectMode","lines","csvjson"],"mappings":"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","file":"static/js/1.260926b5.chunk.js","sourcesContent":["import { _ as _typeof } from './index-b1527056.js';\nimport '@inweso-dev/i18n-utils';\nimport stream$1 from 'stream';\n\nvar helper = {\n  getQuoteChar: getQuoteChar,\n  dataType: dataType,\n  toCsv: toCsv,\n  putData: putData,\n  allObjsOrArray: allObjsOrArray,\n  getHeaders: getHeaders,\n  getLengthyItem: getLengthyItem,\n  addDataInSchema: addDataInSchema,\n  removeQuote: removeQuote,\n  arrayToCsv: arrayToCsv,\n  objectToCsv: objectToCsv,\n  convertArray: convertArray,\n  csvToArray: csvToArray\n};\n\nfunction getQuoteChar(q) {\n  if (typeof q === \"string\") {\n    return q;\n  } else if (q === true) {\n    return '\"';\n  }\n\n  return null;\n}\n\nfunction dataType(arg) {\n  if (arg === null) {\n    return 'null';\n  } else if (arg && (arg.nodeType === 1 || arg.nodeType === 9)) {\n    return 'element';\n  }\n\n  var type = Object.prototype.toString.call(arg).match(/\\[object (.*?)\\]/)[1].toLowerCase();\n\n  if (type === 'number') {\n    if (isNaN(arg)) {\n      return 'nan';\n    }\n\n    if (!isFinite(arg)) {\n      return 'infinity';\n    }\n  }\n\n  return type;\n}\n\nfunction toCsv(data, table, parent, row, opt) {\n  if (dataType(data) === 'undefined') {\n    return putData('', table, parent, row);\n  } else if (dataType(data) === 'null') {\n    return putData('null', table, parent, row);\n  } else if (Array.isArray(data)) {\n    return arrayToCsv(data, table, parent, row, opt);\n  } else if (_typeof(data) === \"object\") {\n    return objectToCsv(data, table, parent, row, opt);\n  } else {\n    return putData(String(data), table, parent, row);\n  }\n}\n\nfunction putData(data, table, parent, row, opt) {\n  if (!table || !table[parent]) {\n    table[parent] = [];\n  }\n\n  if (row < table[parent].length) {\n    row = table[parent].length;\n  }\n\n  table[parent][row] = data;\n  return table;\n}\n\nfunction allObjsOrArray(array) {\n  return array.every(function (item) {\n    var datatype = dataType(item);\n\n    if (!datatype.match(/array|object/)) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nfunction getHeaders(headerType, table, opt) {\n  var keyMatchPattern = /([^\\[\\]\\.]+)$/;\n  var relativeMatchPattern = /\\[\\]\\.?([^\\[\\]]+)$/;\n\n  switch (headerType) {\n    case \"none\":\n      return null;\n\n    case \"full\":\n      return Object.keys(table);\n\n    case \"key\":\n      return Object.keys(table).map(function (header) {\n        var head = header.match(keyMatchPattern);\n\n        if (head && head.length === 2) {\n          return head[1];\n        }\n\n        return header;\n      });\n\n    case \"relative\":\n      return Object.keys(table).map(function (header) {\n        var head = header.match(relativeMatchPattern);\n\n        if (head && head.length === 2) {\n          return head[1];\n        }\n\n        return header;\n      });\n  }\n}\n\nfunction getLengthyItem(table) {\n  var len = 0;\n  Object.keys(table).forEach(function (item) {\n    if (Array.isArray(table[item]) && table[item].length > len) {\n      len = table[item].length;\n    }\n  });\n  return len;\n}\n\nfunction addDataInSchema(header, item, schema, delimiter, quote) {\n  var match = header.match(/\\[*[\\d]\\]\\.(\\w+)|\\.|\\[\\]|\\[(.)\\]|-|\\+/ig);\n  var headerName, currentPoint;\n\n  if (match) {\n    var testMatch = match[0];\n\n    if (match.indexOf('-') !== -1) {\n      return true;\n    } else if (match.indexOf('.') !== -1) {\n      var headParts = header.split('.');\n      currentPoint = headParts.shift();\n      schema[currentPoint] = schema[currentPoint] || {};\n      addDataInSchema(headParts.join('.'), item, schema[currentPoint], delimiter, quote);\n    } else if (match.indexOf('[]') !== -1) {\n      headerName = header.replace(/\\[\\]/ig, '');\n\n      if (!schema[headerName]) {\n        schema[headerName] = [];\n      }\n\n      schema[headerName].push(item);\n    } else if (/\\[*[\\d]\\]\\.(\\w+)/.test(testMatch)) {\n      headerName = header.split('[').shift();\n      var index = parseInt(testMatch.match(/\\[(.)\\]/).pop(), 10);\n      currentPoint = header.split('.').pop();\n      schema[headerName] = schema[headerName] || [];\n      schema[headerName][index] = schema[headerName][index] || {};\n      schema[headerName][index][currentPoint] = item;\n    } else if (/\\[(.)\\]/.test(testMatch)) {\n      var delimiter = testMatch.match(/\\[(.)\\]/).pop();\n      headerName = header.replace(/\\[(.)\\]/ig, '');\n      schema[headerName] = convertArray(item, delimiter, quote);\n    } else if (match.indexOf('+') !== -1) {\n      headerName = header.replace(/\\+/ig, \"\");\n      schema[headerName] = Number(item);\n    }\n  } else {\n    schema[header] = removeQuote(item);\n  }\n\n  return schema;\n}\n\nfunction removeQuote(str) {\n  if (str) {\n    return String(str).trim().replace(/^[\"|'](.*)[\"|']$/, '$1');\n  }\n\n  return \"\";\n}\n\nfunction arrayToCsv(data, table, parent, row, opt) {\n  if (allObjsOrArray(data)) {\n    return putData(data.join(';'), table, parent + opt.arrayDenote, row);\n  }\n\n  data.forEach(function (item, index) {\n    return toCsv(item, table, parent + opt.arrayDenote, index, opt);\n  });\n}\n\nfunction objectToCsv(data, table, parent, row, opt) {\n  Object.keys(data).forEach(function (item) {\n    return toCsv(data[item], table, parent + opt.objectDenote + item, row, opt);\n  });\n}\n\nfunction convertArray(str, delimiter, quote) {\n  if (quote && str.indexOf(quote) !== -1) {\n    return csvToArray(str, delimiter, quote);\n  }\n\n  var output = [];\n  var arr = str.split(delimiter);\n  arr.forEach(function (val) {\n    var trimmed = val.trim();\n    output.push(trimmed);\n  });\n  return output;\n}\n\nfunction csvToArray(text, delimit, quote) {\n  delimit = delimit || \",\";\n  quote = quote || '\"';\n  var value = new RegExp(\"(?!\\\\s*$)\\\\s*(?:\" + quote + \"([^\" + quote + \"\\\\\\\\]*(?:\\\\\\\\[\\\\S\\\\s][^\" + quote + \"\\\\\\\\]*)*)\" + quote + \"|([^\" + delimit + quote + \"\\\\s\\\\\\\\]*(?:\\\\s+[^\" + delimit + quote + \"\\\\s\\\\\\\\]+)*))\\\\s*(?:\" + delimit + \"|$)\", \"g\");\n  var a = [];\n  text.replace(value, function (m0, m1, m2) {\n    if (m1 !== undefined) {\n      a.push(m1.replace(/\\\\'/g, \"'\"));\n    } else if (m2 !== undefined) {\n      a.push(m2);\n    }\n\n    return '';\n  });\n\n  if (/,\\s*$/.test(text)) {\n    a.push('');\n  }\n\n  return a;\n}\n\nvar app = {\n  toObject: toObject,\n  toArray: toArray,\n  toColumnArray: toColumnArray,\n  toSchemaObject: toSchemaObject,\n  toCSV: toCSV\n};\n\nfunction toColumnArray(data, opts) {\n  opts = opts || {};\n  var delimiter = opts.delimiter || ',';\n  var quote = helper.getQuoteChar(opts.quote);\n  var content = data;\n  var headers = null;\n\n  if (typeof content !== \"string\") {\n    throw new Error(\"Invalid input, input data should be a string\");\n  }\n\n  content = content.split(/[\\n\\r]+/ig);\n\n  if (typeof opts.headers === \"string\") {\n    headers = opts.headers.split(/[\\n\\r]+/ig);\n    headers = quote ? helper.convertArray(headers.shift(), delimiter, quote) : headers.shift().split(delimiter);\n  } else {\n    headers = quote ? helper.convertArray(content.shift(), delimiter, quote) : content.shift().split(delimiter);\n  }\n\n  var hashData = {};\n  headers.forEach(function (item) {\n    hashData[item] = [];\n  });\n  content.forEach(function (item) {\n    if (item) {\n      item = quote ? helper.convertArray(item, delimiter, quote) : item.split(delimiter);\n      item.forEach(function (val, index) {\n        hashData[headers[index]].push(helper.removeQuote(val));\n      });\n    }\n  });\n  return hashData;\n}\n\nfunction toObject(data, opts) {\n  opts = opts || {};\n  var delimiter = opts.delimiter || ',';\n  var quote = helper.getQuoteChar(opts.quote);\n  var content = data;\n  var headers = null;\n\n  if (typeof content !== \"string\") {\n    throw new Error(\"Invalid input, input data should be a string\");\n  }\n\n  content = content.split(/[\\n\\r]+/ig);\n\n  if (typeof opts.headers === \"string\") {\n    headers = opts.headers.split(/[\\n\\r]+/ig);\n    headers = quote ? helper.convertArray(headers.shift(), delimiter, quote) : headers.shift().split(delimiter);\n  } else {\n    headers = quote ? helper.convertArray(content.shift(), delimiter, quote) : content.shift().split(delimiter);\n  }\n\n  var hashData = [];\n  content.forEach(function (item) {\n    if (item) {\n      item = quote ? helper.convertArray(item, delimiter, quote) : item.split(delimiter);\n      var hashItem = {};\n      headers.forEach(function (headerItem, index) {\n        hashItem[headerItem] = helper.removeQuote(item[index]);\n      });\n      hashData.push(hashItem);\n    }\n  });\n  return hashData;\n}\n\nfunction toSchemaObject(data, opts) {\n  opts = opts || {};\n  var delimiter = opts.delimiter || ',';\n  var quote = helper.getQuoteChar(opts.quote);\n  var content = data;\n  var headers = null;\n\n  if (typeof content !== \"string\") {\n    throw new Error(\"Invalid input, input should be a string\");\n  }\n\n  content = content.split(/[\\n\\r]+/ig);\n\n  if (typeof opts.headers === \"string\") {\n    headers = opts.headers.split(/[\\n\\r]+/ig);\n    headers = quote ? helper.convertArray(headers.shift(), delimiter, quote) : headers.shift().split(delimiter);\n  } else {\n    headers = quote ? helper.convertArray(content.shift(), delimiter, quote) : content.shift().split(delimiter);\n  }\n\n  var hashData = [];\n  content.forEach(function (item) {\n    if (item) {\n      item = quote ? helper.convertArray(item, delimiter, quote) : item.split(delimiter);\n      var schemaObject = {};\n      item.forEach(function (val, index) {\n        helper.addDataInSchema(headers[index], val, schemaObject, delimiter, quote);\n      });\n      hashData.push(schemaObject);\n    }\n  });\n  return hashData;\n}\n\nfunction toArray(data, opts) {\n  opts = opts || {};\n  var delimiter = opts.delimiter || ',';\n  var quote = helper.getQuoteChar(opts.quote);\n  var content = data;\n\n  if (typeof content !== \"string\") {\n    throw new Error(\"Invalid input, input data should be a string\");\n  }\n\n  content = content.split(/[\\n\\r]+/ig);\n  var arrayData = [];\n  content.forEach(function (item) {\n    if (item) {\n      item = quote ? helper.convertArray(item, delimiter, quote) : item.split(delimiter);\n      item = item.map(function (cItem) {\n        return helper.removeQuote(cItem);\n      });\n      arrayData.push(item);\n    }\n  });\n  return arrayData;\n}\n\nfunction toCSV(data, opts) {\n  opts = opts || {};\n  opts.delimiter = opts.delimiter || ',';\n  opts.wrap = opts.wrap || '';\n  opts.arrayDenote = opts.arrayDenote && String(opts.arrayDenote).trim() ? opts.arrayDenote : '[]';\n  opts.objectDenote = opts.objectDenote && String(opts.objectDenote).trim() ? opts.objectDenote : '.';\n  opts.detailedOutput = typeof opts.detailedOutput !== \"boolean\" ? true : opts.detailedOutput;\n  opts.headers = String(opts.headers).toLowerCase();\n  var csvJSON = {};\n  var csvData = \"\";\n\n  if (!opts.headers.match(/none|full|relative|key/)) {\n    opts.headers = 'full';\n  } else {\n    opts.headers = opts.headers.match(/none|full|relative|key/)[0];\n  }\n\n  if (opts.wrap === true) {\n    opts.wrap = '\"';\n  }\n\n  if (typeof data === \"string\") {\n    data = JSON.parse(data);\n  }\n\n  helper.toCsv(data, csvJSON, \"\", 0, opts);\n  var headers = helper.getHeaders(opts.headers, csvJSON, opts);\n\n  if (headers) {\n    if (opts.wrap) {\n      headers = headers.map(function (item) {\n        return opts.wrap + item + opts.wrap;\n      });\n    }\n\n    csvData = headers.join(opts.delimiter);\n  }\n\n  var bigArrayLen = helper.getLengthyItem(csvJSON);\n  var keys = Object.keys(csvJSON);\n  var row = [];\n  var replaceNewLinePattern = /\\n|\\r/g;\n\n  if (!opts.wrap) {\n    replaceNewLinePattern = new RegExp('\\n|\\r|' + opts.delimiter, 'g');\n  }\n\n  for (var i = 0; i < bigArrayLen; i++) {\n    row = [];\n\n    for (var j = 0; j < keys.length; j++) {\n      if (csvJSON[keys[j]][i]) {\n        csvJSON[keys[j]][i] = csvJSON[keys[j]][i].replace(replaceNewLinePattern, '\\t');\n\n        if (opts.wrap) {\n          csvJSON[keys[j]][i] = opts.wrap + csvJSON[keys[j]][i] + opts.wrap;\n        }\n\n        row[row.length] = csvJSON[keys[j]][i];\n      } else {\n        row[row.length] = \"\";\n      }\n    }\n\n    csvData += '\\n' + row.join(opts.delimiter);\n  }\n\n  return csvData;\n}\n\nvar stream = {\n  toColumnArray: toColumnArray$1,\n  toObject: toObject$1,\n  toSchemaObject: toSchemaObject$1,\n  toArray: toArray$1,\n  transform: transform,\n  stringify: stringify\n};\n\nfunction chopLines(str) {\n  return str.split(/[\\n\\r]/ig);\n}\n\nfunction transform(func) {\n  var stream = stream$1;\n  return new stream.Transform({\n    readableObjectMode: true,\n    writableObjectMode: true,\n    transform: func\n  });\n}\n\nfunction stringify(space) {\n  return transform(function (data, encoding, callback) {\n    this.push(JSON.stringify(data, null, space));\n    callback();\n  });\n}\n\nfunction _toColumnArray(data, encoding, callback, trans) {\n  var lines = chopLines(data.toString());\n\n  if (!trans._head) {\n    var head = lines.shift();\n    trans._head = head;\n    trans._opts.headers = head;\n  }\n\n  this.push(app.toColumnArray(lines.join('\\n'), trans._opts));\n  callback();\n}\n\nfunction toColumnArray$1(opts) {\n  opts = opts || {};\n  var trans = transform(function (data, encoding, callback) {\n    _toColumnArray.call(this, data, encoding, callback, trans);\n  });\n  trans._head = opts.headers ? opts.headers : null;\n  trans._opts = opts;\n  return trans;\n}\n\nfunction _toObject(data, encoding, callback, trans) {\n  var lines = chopLines(data.toString());\n\n  if (!trans._head) {\n    var head = lines.shift();\n    trans._head = head;\n    trans._opts.headers = head;\n  }\n\n  this.push(app.toObject(lines.join('\\n'), trans._opts));\n  callback();\n}\n\nfunction toObject$1(opts) {\n  opts = opts || {};\n  var trans = transform(function (data, encoding, callback) {\n    _toObject.call(this, data, encoding, callback, trans);\n  });\n  trans._head = opts.headers ? opts.headers : null;\n  trans._opts = opts;\n  return trans;\n}\n\nfunction _toSchemaObject(data, encoding, callback, trans) {\n  var lines = chopLines(data.toString());\n\n  if (!trans._head) {\n    var head = lines.shift();\n    trans._head = head;\n    trans._opts.headers = head;\n  }\n\n  this.push(app.toSchemaObject(lines.join('\\n'), trans._opts));\n  callback();\n}\n\nfunction toSchemaObject$1(opts) {\n  opts = opts || {};\n  var trans = transform(function (data, encoding, callback) {\n    _toSchemaObject.call(this, data, encoding, callback, trans);\n  });\n  trans._head = opts.headers ? opts.headers : null;\n  trans._opts = opts;\n  return trans;\n}\n\nfunction _toArray(data, encoding, callback, trans) {\n  var lines = chopLines(data.toString());\n  this.push(app.toArray(lines.join('\\n'), trans._opts));\n  callback();\n}\n\nfunction toArray$1(opts) {\n  opts = opts || {};\n  var trans = transform(function (data, encoding, callback) {\n    _toArray.call(this, data, encoding, callback, trans);\n  });\n  trans._opts = opts;\n  return trans;\n}\n\napp.stream = stream;\nvar csvjson = app;\n\nexport default csvjson;\nexport { csvjson as __moduleExports };\n"],"sourceRoot":""}