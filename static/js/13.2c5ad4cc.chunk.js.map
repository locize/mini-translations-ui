{"version":3,"sources":["../../file-fluent/dist/es/index-ba1bfa1a.js"],"names":["BaseNode","_classCallCheck","this","type","_createClass","key","value","other","ignoredFields","arguments","length","undefined","thisKeys","Set","Object","keys","otherKeys","_step","_iterator","_createForOfIteratorHelper","s","n","done","fieldName","err","e","f","size","_step2","_iterator2","_fieldName","has","thisVal","otherVal","_typeof","Array","i","scalarsEqual","visit","clone","isArray","map","create","constructor","prototype","_i","_Object$keys","prop","equals","SyntaxNode","_BaseNode","_inherits","_super","_createSuper","_this","apply","start","end","span","Span","Resource","_SyntaxNode","_super2","_this2","body","call","Entry","_SyntaxNode2","_super3","_this3","Message","_Entry","_super4","id","_this4","attributes","comment","Term","_Entry2","_super5","_this5","Pattern","_SyntaxNode3","_super6","elements","_this6","PatternElement","_SyntaxNode4","_super7","_this7","TextElement","_PatternElement","_super8","_this8","Placeable","_PatternElement2","_super9","expression","_this9","Expression","_SyntaxNode5","_super10","_this10","Literal","_Expression","_super11","_this11","StringLiteral","_Literal","_super12","_this12","replace","match","codepoint4","codepoint6","codepoint","parseInt","String","fromCodePoint","NumberLiteral","_Literal2","_super13","_this13","parseFloat","decimalPos","indexOf","precision","MessageReference","_Expression2","_super14","_this14","attribute","TermReference","_Expression3","_super15","_this15","args","VariableReference","_Expression4","_super16","_this16","FunctionReference","_Expression5","_super17","_this17","SelectExpression","_Expression6","_super18","selector","variants","_this18","CallArguments","_SyntaxNode6","_super19","_this19","positional","named","Attribute","_SyntaxNode7","_super20","_this20","Variant","_SyntaxNode8","_super21","def","_this21","NamedArgument","_SyntaxNode9","_super22","name","_this22","Identifier","_SyntaxNode10","_super23","_this23","BaseComment","_Entry3","_super24","content","_this24","Comment","_BaseComment","_super25","_this25","GroupComment","_BaseComment2","_super26","_this26","ResourceComment","_BaseComment3","_super27","_this27","Junk","_SyntaxNode11","_super28","_this28","annotations","annotation","push","_BaseNode2","_super29","_this29","Annotation","_SyntaxNode12","_super30","code","_this30","message","ParseError","_Error","_len","_key","getErrorMessage","_wrapNativeSuper","Error","token","_slicedToArray","concat","range","_id","_char","sequence","ParserStream","string","index","peekOffset","offset","charAt","EOL","EOF","SPECIAL_LINE_START_CHARS","FluentParserStream","_ParserStream","currentPeek","peek","slice","blank","peekBlankInline","skipToPeek","lineStart","resetPeek","peekBlankBlock","peekBlank","ch","currentChar","next","cc","charCodeAt","isCharIdStart","isDigit","includes","column1","isCharPatternContinuation","level","currentPeekOffset","junkStart","lastNewline","lastIndexOf","first","ret","takeChar","trailingWSRe","withSpan","fn","ps","withSpans","node","addSpan","FluentParser","_ref","_ref$withSpans","getComment","getMessage","getTerm","getAttribute","getIdentifier","getVariant","getNumber","getPattern","getTextElement","getPlaceable","getExpression","getInlineExpression","getCallArgument","getCallArguments","getString","getLiteral","source","skipBlankBlock","entries","lastComment","entry","getEntryOrJunk","blankLines","res","skipped","entryStartPos","getEntry","expectLineEnd","errorIndex","skipToNextEntryStart","nextEntryStart","substring","junk","annot","addAnnotation","isIdentifierStart","Comment$1","expectChar","x","isNextLineComment","skipBlankInline","maybeGetPattern","attrs","getAttributes","isAttributeStart","attr","takeIDStart","takeIDChar","hasDefault","defaultIndex","skipBlank","getVariantKey","isVariantStart","variant","num","takeDigit","getDigits","isValueStart","isValueContinuation","isBlock","commonIndentLength","blankStart","firstIndent","getIndent","Infinity","_blankStart","indent","Math","min","dedented","dedent","Indent","commonIndent","trimmed","element","prev","sum","textElement","lastElement","pop","buffer","getUnicodeEscapeSequence","u","digits","takeHexDigit","getVariants","isNumberStart","_attr","_id2","test","_args","exp","argumentNames","arg","add","getEscapeSequence","parse","opts","getTypeName","item","serializer","serialize","console","warn","getGroupComment","getResourceComment","getStringLiteral","placeable","log","join","getCallExpression","fcName","callee","positionals","nameds","getNamedArgument","getSelectExpression","getVariantExpression","ref","getVariableReference","plain","getTermReferences","getVariantName","getVariantList","isDefault","getFunctionReference","forEach","p","getTermReference","getJunk","parts","split","shift","trim","ftlToJs","str","cb","params","respectComments","parsed","result","reduce","mem","segment","inner","val","addValue","k","ftl","js2ftl","resources","addComment","innerK","innerValue","ftl2js"],"mappings":"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","file":"static/js/13.2c5ad4cc.chunk.js","sourcesContent":["import { _ as _inherits, b as _createSuper, c as _classCallCheck, d as _createClass, f as _createForOfIteratorHelper, g as _typeof, h as _slicedToArray, j as _wrapNativeSuper } from './index-247eabaf.js';\nimport '@inweso-dev/i18n-utils';\n\n/*\n * Base class for all Fluent AST nodes.\n *\n * All productions described in the ASDL subclass BaseNode, including Span and\n * Annotation.\n *\n */\nvar BaseNode = /*#__PURE__*/function () {\n  function BaseNode() {\n    _classCallCheck(this, BaseNode);\n\n    this.type = \"BaseNode\";\n  }\n\n  _createClass(BaseNode, [{\n    key: \"equals\",\n    value: function equals(other) {\n      var ignoredFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [\"span\"];\n      var thisKeys = new Set(Object.keys(this));\n      var otherKeys = new Set(Object.keys(other));\n\n      if (ignoredFields) {\n        var _iterator = _createForOfIteratorHelper(ignoredFields),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var fieldName = _step.value;\n            thisKeys[\"delete\"](fieldName);\n            otherKeys[\"delete\"](fieldName);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      if (thisKeys.size !== otherKeys.size) {\n        return false;\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(thisKeys),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _fieldName = _step2.value;\n\n          if (!otherKeys.has(_fieldName)) {\n            return false;\n          }\n\n          var thisVal = this[_fieldName];\n          var otherVal = other[_fieldName];\n\n          if (_typeof(thisVal) !== _typeof(otherVal)) {\n            return false;\n          }\n\n          if (thisVal instanceof Array && otherVal instanceof Array) {\n            if (thisVal.length !== otherVal.length) {\n              return false;\n            }\n\n            for (var i = 0; i < thisVal.length; ++i) {\n              if (!scalarsEqual(thisVal[i], otherVal[i], ignoredFields)) {\n                return false;\n              }\n            }\n          } else if (!scalarsEqual(thisVal, otherVal, ignoredFields)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      function visit(value) {\n        if (value instanceof BaseNode) {\n          return value.clone();\n        }\n\n        if (Array.isArray(value)) {\n          return value.map(visit);\n        }\n\n        return value;\n      }\n\n      var clone = Object.create(this.constructor.prototype);\n\n      for (var _i = 0, _Object$keys = Object.keys(this); _i < _Object$keys.length; _i++) {\n        var prop = _Object$keys[_i];\n        clone[prop] = visit(this[prop]);\n      }\n\n      return clone;\n    }\n  }]);\n\n  return BaseNode;\n}();\n\nfunction scalarsEqual(thisVal, otherVal, ignoredFields) {\n  if (thisVal instanceof BaseNode && otherVal instanceof BaseNode) {\n    return thisVal.equals(otherVal, ignoredFields);\n  }\n\n  return thisVal === otherVal;\n}\n/*\n * Base class for AST nodes which can have Spans.\n */\n\n\nvar SyntaxNode = /*#__PURE__*/function (_BaseNode) {\n  _inherits(SyntaxNode, _BaseNode);\n\n  var _super = _createSuper(SyntaxNode);\n\n  function SyntaxNode() {\n    var _this;\n\n    _classCallCheck(this, SyntaxNode);\n\n    _this = _super.apply(this, arguments);\n    _this.type = \"SyntaxNode\";\n    return _this;\n  }\n\n  _createClass(SyntaxNode, [{\n    key: \"addSpan\",\n    value: function addSpan(start, end) {\n      this.span = new Span(start, end);\n    }\n  }]);\n\n  return SyntaxNode;\n}(BaseNode);\nvar Resource = /*#__PURE__*/function (_SyntaxNode) {\n  _inherits(Resource, _SyntaxNode);\n\n  var _super2 = _createSuper(Resource);\n\n  function Resource() {\n    var _this2;\n\n    var body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, Resource);\n\n    _this2 = _super2.call(this);\n    _this2.type = \"Resource\";\n    _this2.body = body;\n    return _this2;\n  }\n\n  return Resource;\n}(SyntaxNode);\n/*\n * An abstract base class for useful elements of Resource.body.\n */\n\nvar Entry = /*#__PURE__*/function (_SyntaxNode2) {\n  _inherits(Entry, _SyntaxNode2);\n\n  var _super3 = _createSuper(Entry);\n\n  function Entry() {\n    var _this3;\n\n    _classCallCheck(this, Entry);\n\n    _this3 = _super3.apply(this, arguments);\n    _this3.type = \"Entry\";\n    return _this3;\n  }\n\n  return Entry;\n}(SyntaxNode);\nvar Message = /*#__PURE__*/function (_Entry) {\n  _inherits(Message, _Entry);\n\n  var _super4 = _createSuper(Message);\n\n  function Message(id) {\n    var _this4;\n\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var comment = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, Message);\n\n    _this4 = _super4.call(this);\n    _this4.type = \"Message\";\n    _this4.id = id;\n    _this4.value = value;\n    _this4.attributes = attributes;\n    _this4.comment = comment;\n    return _this4;\n  }\n\n  return Message;\n}(Entry);\nvar Term = /*#__PURE__*/function (_Entry2) {\n  _inherits(Term, _Entry2);\n\n  var _super5 = _createSuper(Term);\n\n  function Term(id, value) {\n    var _this5;\n\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var comment = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    _classCallCheck(this, Term);\n\n    _this5 = _super5.call(this);\n    _this5.type = \"Term\";\n    _this5.id = id;\n    _this5.value = value;\n    _this5.attributes = attributes;\n    _this5.comment = comment;\n    return _this5;\n  }\n\n  return Term;\n}(Entry);\nvar Pattern = /*#__PURE__*/function (_SyntaxNode3) {\n  _inherits(Pattern, _SyntaxNode3);\n\n  var _super6 = _createSuper(Pattern);\n\n  function Pattern(elements) {\n    var _this6;\n\n    _classCallCheck(this, Pattern);\n\n    _this6 = _super6.call(this);\n    _this6.type = \"Pattern\";\n    _this6.elements = elements;\n    return _this6;\n  }\n\n  return Pattern;\n}(SyntaxNode);\n/*\n * An abstract base class for elements of Patterns.\n */\n\nvar PatternElement = /*#__PURE__*/function (_SyntaxNode4) {\n  _inherits(PatternElement, _SyntaxNode4);\n\n  var _super7 = _createSuper(PatternElement);\n\n  function PatternElement() {\n    var _this7;\n\n    _classCallCheck(this, PatternElement);\n\n    _this7 = _super7.apply(this, arguments);\n    _this7.type = \"PatternElement\";\n    return _this7;\n  }\n\n  return PatternElement;\n}(SyntaxNode);\nvar TextElement = /*#__PURE__*/function (_PatternElement) {\n  _inherits(TextElement, _PatternElement);\n\n  var _super8 = _createSuper(TextElement);\n\n  function TextElement(value) {\n    var _this8;\n\n    _classCallCheck(this, TextElement);\n\n    _this8 = _super8.call(this);\n    _this8.type = \"TextElement\";\n    _this8.value = value;\n    return _this8;\n  }\n\n  return TextElement;\n}(PatternElement);\nvar Placeable = /*#__PURE__*/function (_PatternElement2) {\n  _inherits(Placeable, _PatternElement2);\n\n  var _super9 = _createSuper(Placeable);\n\n  function Placeable(expression) {\n    var _this9;\n\n    _classCallCheck(this, Placeable);\n\n    _this9 = _super9.call(this);\n    _this9.type = \"Placeable\";\n    _this9.expression = expression;\n    return _this9;\n  }\n\n  return Placeable;\n}(PatternElement);\n/*\n * An abstract base class for expressions.\n */\n\nvar Expression = /*#__PURE__*/function (_SyntaxNode5) {\n  _inherits(Expression, _SyntaxNode5);\n\n  var _super10 = _createSuper(Expression);\n\n  function Expression() {\n    var _this10;\n\n    _classCallCheck(this, Expression);\n\n    _this10 = _super10.apply(this, arguments);\n    _this10.type = \"Expression\";\n    return _this10;\n  }\n\n  return Expression;\n}(SyntaxNode); // An abstract base class for Literals.\n\nvar Literal = /*#__PURE__*/function (_Expression) {\n  _inherits(Literal, _Expression);\n\n  var _super11 = _createSuper(Literal);\n\n  function Literal(value) {\n    var _this11;\n\n    _classCallCheck(this, Literal);\n\n    _this11 = _super11.call(this);\n    _this11.type = \"Literal\"; // The \"value\" field contains the exact contents of the literal,\n    // character-for-character.\n\n    _this11.value = value;\n    return _this11;\n  }\n\n  return Literal;\n}(Expression);\nvar StringLiteral = /*#__PURE__*/function (_Literal) {\n  _inherits(StringLiteral, _Literal);\n\n  var _super12 = _createSuper(StringLiteral);\n\n  function StringLiteral() {\n    var _this12;\n\n    _classCallCheck(this, StringLiteral);\n\n    _this12 = _super12.apply(this, arguments);\n    _this12.type = \"StringLiteral\";\n    return _this12;\n  }\n\n  _createClass(StringLiteral, [{\n    key: \"parse\",\n    value: function parse() {\n      // Backslash backslash, backslash double quote, uHHHH, UHHHHHH.\n      var KNOWN_ESCAPES = /(?:\\\\\\\\|\\\\\"|\\\\u([0-9a-fA-F]{4})|\\\\U([0-9a-fA-F]{6}))/g;\n\n      function fromEscapeSequence(match, codepoint4, codepoint6) {\n        switch (match) {\n          case \"\\\\\\\\\":\n            return \"\\\\\";\n\n          case \"\\\\\\\"\":\n            return \"\\\"\";\n\n          default:\n            {\n              var codepoint = parseInt(codepoint4 || codepoint6, 16);\n\n              if (codepoint <= 0xD7FF || 0xE000 <= codepoint) {\n                // It's a Unicode scalar value.\n                return String.fromCodePoint(codepoint);\n              } // Escape sequences reresenting surrogate code points are\n              // well-formed but invalid in Fluent. Replace them with U+FFFD\n              // REPLACEMENT CHARACTER.\n\n\n              return \"�\";\n            }\n        }\n      }\n\n      var value = this.value.replace(KNOWN_ESCAPES, fromEscapeSequence);\n      return {\n        value: value\n      };\n    }\n  }]);\n\n  return StringLiteral;\n}(Literal);\nvar NumberLiteral = /*#__PURE__*/function (_Literal2) {\n  _inherits(NumberLiteral, _Literal2);\n\n  var _super13 = _createSuper(NumberLiteral);\n\n  function NumberLiteral() {\n    var _this13;\n\n    _classCallCheck(this, NumberLiteral);\n\n    _this13 = _super13.apply(this, arguments);\n    _this13.type = \"NumberLiteral\";\n    return _this13;\n  }\n\n  _createClass(NumberLiteral, [{\n    key: \"parse\",\n    value: function parse() {\n      var value = parseFloat(this.value);\n      var decimalPos = this.value.indexOf(\".\");\n      var precision = decimalPos > 0 ? this.value.length - decimalPos - 1 : 0;\n      return {\n        value: value,\n        precision: precision\n      };\n    }\n  }]);\n\n  return NumberLiteral;\n}(Literal);\nvar MessageReference = /*#__PURE__*/function (_Expression2) {\n  _inherits(MessageReference, _Expression2);\n\n  var _super14 = _createSuper(MessageReference);\n\n  function MessageReference(id) {\n    var _this14;\n\n    var attribute = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, MessageReference);\n\n    _this14 = _super14.call(this);\n    _this14.type = \"MessageReference\";\n    _this14.id = id;\n    _this14.attribute = attribute;\n    return _this14;\n  }\n\n  return MessageReference;\n}(Expression);\nvar TermReference = /*#__PURE__*/function (_Expression3) {\n  _inherits(TermReference, _Expression3);\n\n  var _super15 = _createSuper(TermReference);\n\n  function TermReference(id) {\n    var _this15;\n\n    var attribute = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    _classCallCheck(this, TermReference);\n\n    _this15 = _super15.call(this);\n    _this15.type = \"TermReference\";\n    _this15.id = id;\n    _this15.attribute = attribute;\n    _this15.arguments = args;\n    return _this15;\n  }\n\n  return TermReference;\n}(Expression);\nvar VariableReference = /*#__PURE__*/function (_Expression4) {\n  _inherits(VariableReference, _Expression4);\n\n  var _super16 = _createSuper(VariableReference);\n\n  function VariableReference(id) {\n    var _this16;\n\n    _classCallCheck(this, VariableReference);\n\n    _this16 = _super16.call(this);\n    _this16.type = \"VariableReference\";\n    _this16.id = id;\n    return _this16;\n  }\n\n  return VariableReference;\n}(Expression);\nvar FunctionReference = /*#__PURE__*/function (_Expression5) {\n  _inherits(FunctionReference, _Expression5);\n\n  var _super17 = _createSuper(FunctionReference);\n\n  function FunctionReference(id, args) {\n    var _this17;\n\n    _classCallCheck(this, FunctionReference);\n\n    _this17 = _super17.call(this);\n    _this17.type = \"FunctionReference\";\n    _this17.id = id;\n    _this17.arguments = args;\n    return _this17;\n  }\n\n  return FunctionReference;\n}(Expression);\nvar SelectExpression = /*#__PURE__*/function (_Expression6) {\n  _inherits(SelectExpression, _Expression6);\n\n  var _super18 = _createSuper(SelectExpression);\n\n  function SelectExpression(selector, variants) {\n    var _this18;\n\n    _classCallCheck(this, SelectExpression);\n\n    _this18 = _super18.call(this);\n    _this18.type = \"SelectExpression\";\n    _this18.selector = selector;\n    _this18.variants = variants;\n    return _this18;\n  }\n\n  return SelectExpression;\n}(Expression);\nvar CallArguments = /*#__PURE__*/function (_SyntaxNode6) {\n  _inherits(CallArguments, _SyntaxNode6);\n\n  var _super19 = _createSuper(CallArguments);\n\n  function CallArguments() {\n    var _this19;\n\n    var positional = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var named = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    _classCallCheck(this, CallArguments);\n\n    _this19 = _super19.call(this);\n    _this19.type = \"CallArguments\";\n    _this19.positional = positional;\n    _this19.named = named;\n    return _this19;\n  }\n\n  return CallArguments;\n}(SyntaxNode);\nvar Attribute = /*#__PURE__*/function (_SyntaxNode7) {\n  _inherits(Attribute, _SyntaxNode7);\n\n  var _super20 = _createSuper(Attribute);\n\n  function Attribute(id, value) {\n    var _this20;\n\n    _classCallCheck(this, Attribute);\n\n    _this20 = _super20.call(this);\n    _this20.type = \"Attribute\";\n    _this20.id = id;\n    _this20.value = value;\n    return _this20;\n  }\n\n  return Attribute;\n}(SyntaxNode);\nvar Variant = /*#__PURE__*/function (_SyntaxNode8) {\n  _inherits(Variant, _SyntaxNode8);\n\n  var _super21 = _createSuper(Variant);\n\n  function Variant(key, value, def) {\n    var _this21;\n\n    _classCallCheck(this, Variant);\n\n    _this21 = _super21.call(this);\n    _this21.type = \"Variant\";\n    _this21.key = key;\n    _this21.value = value;\n    _this21[\"default\"] = def;\n    return _this21;\n  }\n\n  return Variant;\n}(SyntaxNode);\nvar NamedArgument = /*#__PURE__*/function (_SyntaxNode9) {\n  _inherits(NamedArgument, _SyntaxNode9);\n\n  var _super22 = _createSuper(NamedArgument);\n\n  function NamedArgument(name, value) {\n    var _this22;\n\n    _classCallCheck(this, NamedArgument);\n\n    _this22 = _super22.call(this);\n    _this22.type = \"NamedArgument\";\n    _this22.name = name;\n    _this22.value = value;\n    return _this22;\n  }\n\n  return NamedArgument;\n}(SyntaxNode);\nvar Identifier = /*#__PURE__*/function (_SyntaxNode10) {\n  _inherits(Identifier, _SyntaxNode10);\n\n  var _super23 = _createSuper(Identifier);\n\n  function Identifier(name) {\n    var _this23;\n\n    _classCallCheck(this, Identifier);\n\n    _this23 = _super23.call(this);\n    _this23.type = \"Identifier\";\n    _this23.name = name;\n    return _this23;\n  }\n\n  return Identifier;\n}(SyntaxNode);\nvar BaseComment = /*#__PURE__*/function (_Entry3) {\n  _inherits(BaseComment, _Entry3);\n\n  var _super24 = _createSuper(BaseComment);\n\n  function BaseComment(content) {\n    var _this24;\n\n    _classCallCheck(this, BaseComment);\n\n    _this24 = _super24.call(this);\n    _this24.type = \"BaseComment\";\n    _this24.content = content;\n    return _this24;\n  }\n\n  return BaseComment;\n}(Entry);\nvar Comment = /*#__PURE__*/function (_BaseComment) {\n  _inherits(Comment, _BaseComment);\n\n  var _super25 = _createSuper(Comment);\n\n  function Comment() {\n    var _this25;\n\n    _classCallCheck(this, Comment);\n\n    _this25 = _super25.apply(this, arguments);\n    _this25.type = \"Comment\";\n    return _this25;\n  }\n\n  return Comment;\n}(BaseComment);\nvar GroupComment = /*#__PURE__*/function (_BaseComment2) {\n  _inherits(GroupComment, _BaseComment2);\n\n  var _super26 = _createSuper(GroupComment);\n\n  function GroupComment() {\n    var _this26;\n\n    _classCallCheck(this, GroupComment);\n\n    _this26 = _super26.apply(this, arguments);\n    _this26.type = \"GroupComment\";\n    return _this26;\n  }\n\n  return GroupComment;\n}(BaseComment);\nvar ResourceComment = /*#__PURE__*/function (_BaseComment3) {\n  _inherits(ResourceComment, _BaseComment3);\n\n  var _super27 = _createSuper(ResourceComment);\n\n  function ResourceComment() {\n    var _this27;\n\n    _classCallCheck(this, ResourceComment);\n\n    _this27 = _super27.apply(this, arguments);\n    _this27.type = \"ResourceComment\";\n    return _this27;\n  }\n\n  return ResourceComment;\n}(BaseComment);\nvar Junk = /*#__PURE__*/function (_SyntaxNode11) {\n  _inherits(Junk, _SyntaxNode11);\n\n  var _super28 = _createSuper(Junk);\n\n  function Junk(content) {\n    var _this28;\n\n    _classCallCheck(this, Junk);\n\n    _this28 = _super28.call(this);\n    _this28.type = \"Junk\";\n    _this28.annotations = [];\n    _this28.content = content;\n    return _this28;\n  }\n\n  _createClass(Junk, [{\n    key: \"addAnnotation\",\n    value: function addAnnotation(annotation) {\n      this.annotations.push(annotation);\n    }\n  }]);\n\n  return Junk;\n}(SyntaxNode);\nvar Span = /*#__PURE__*/function (_BaseNode2) {\n  _inherits(Span, _BaseNode2);\n\n  var _super29 = _createSuper(Span);\n\n  function Span(start, end) {\n    var _this29;\n\n    _classCallCheck(this, Span);\n\n    _this29 = _super29.call(this);\n    _this29.type = \"Span\";\n    _this29.start = start;\n    _this29.end = end;\n    return _this29;\n  }\n\n  return Span;\n}(BaseNode);\nvar Annotation = /*#__PURE__*/function (_SyntaxNode12) {\n  _inherits(Annotation, _SyntaxNode12);\n\n  var _super30 = _createSuper(Annotation);\n\n  function Annotation(code) {\n    var _this30;\n\n    var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var message = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, Annotation);\n\n    _this30 = _super30.call(this);\n    _this30.type = \"Annotation\";\n    _this30.code = code;\n    _this30.arguments = args;\n    _this30.message = message;\n    return _this30;\n  }\n\n  return Annotation;\n}(SyntaxNode);\n\nvar ParseError = /*#__PURE__*/function (_Error) {\n  _inherits(ParseError, _Error);\n\n  var _super = _createSuper(ParseError);\n\n  function ParseError(code) {\n    var _this;\n\n    _classCallCheck(this, ParseError);\n\n    _this = _super.call(this);\n    _this.code = code;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    _this.args = args;\n    _this.message = getErrorMessage(code, args);\n    return _this;\n  }\n\n  return ParseError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/* eslint-disable complexity */\n\nfunction getErrorMessage(code, args) {\n  switch (code) {\n    case \"E0001\":\n      return \"Generic error\";\n\n    case \"E0002\":\n      return \"Expected an entry start\";\n\n    case \"E0003\":\n      {\n        var _args = _slicedToArray(args, 1),\n            token = _args[0];\n\n        return \"Expected token: \\\"\".concat(token, \"\\\"\");\n      }\n\n    case \"E0004\":\n      {\n        var _args2 = _slicedToArray(args, 1),\n            range = _args2[0];\n\n        return \"Expected a character from range: \\\"\".concat(range, \"\\\"\");\n      }\n\n    case \"E0005\":\n      {\n        var _args3 = _slicedToArray(args, 1),\n            id = _args3[0];\n\n        return \"Expected message \\\"\".concat(id, \"\\\" to have a value or attributes\");\n      }\n\n    case \"E0006\":\n      {\n        var _args4 = _slicedToArray(args, 1),\n            _id = _args4[0];\n\n        return \"Expected term \\\"-\".concat(_id, \"\\\" to have a value\");\n      }\n\n    case \"E0007\":\n      return \"Keyword cannot end with a whitespace\";\n\n    case \"E0008\":\n      return \"The callee has to be an upper-case identifier or a term\";\n\n    case \"E0009\":\n      return \"The argument name has to be a simple identifier\";\n\n    case \"E0010\":\n      return \"Expected one of the variants to be marked as default (*)\";\n\n    case \"E0011\":\n      return 'Expected at least one variant after \"->\"';\n\n    case \"E0012\":\n      return \"Expected value\";\n\n    case \"E0013\":\n      return \"Expected variant key\";\n\n    case \"E0014\":\n      return \"Expected literal\";\n\n    case \"E0015\":\n      return \"Only one variant can be marked as default (*)\";\n\n    case \"E0016\":\n      return \"Message references cannot be used as selectors\";\n\n    case \"E0017\":\n      return \"Terms cannot be used as selectors\";\n\n    case \"E0018\":\n      return \"Attributes of messages cannot be used as selectors\";\n\n    case \"E0019\":\n      return \"Attributes of terms cannot be used as placeables\";\n\n    case \"E0020\":\n      return \"Unterminated string expression\";\n\n    case \"E0021\":\n      return \"Positional arguments must not follow named arguments\";\n\n    case \"E0022\":\n      return \"Named arguments must be unique\";\n\n    case \"E0024\":\n      return \"Cannot access variants of a message.\";\n\n    case \"E0025\":\n      {\n        var _args5 = _slicedToArray(args, 1),\n            _char = _args5[0];\n\n        return \"Unknown escape sequence: \\\\\".concat(_char, \".\");\n      }\n\n    case \"E0026\":\n      {\n        var _args6 = _slicedToArray(args, 1),\n            sequence = _args6[0];\n\n        return \"Invalid Unicode escape sequence: \".concat(sequence, \".\");\n      }\n\n    case \"E0027\":\n      return \"Unbalanced closing brace in TextElement.\";\n\n    case \"E0028\":\n      return \"Expected an inline expression\";\n\n    case \"E0029\":\n      return \"Expected simple expression as selector\";\n\n    default:\n      return code;\n  }\n}\n\nvar ParserStream = /*#__PURE__*/function () {\n  function ParserStream(string) {\n    _classCallCheck(this, ParserStream);\n\n    this.string = string;\n    this.index = 0;\n    this.peekOffset = 0;\n  }\n\n  _createClass(ParserStream, [{\n    key: \"charAt\",\n    value: function charAt(offset) {\n      // When the cursor is at CRLF, return LF but don't move the cursor.\n      // The cursor still points to the EOL position, which in this case is the\n      // beginning of the compound CRLF sequence. This ensures slices of\n      // [inclusive, exclusive) continue to work properly.\n      if (this.string[offset] === \"\\r\" && this.string[offset + 1] === \"\\n\") {\n        return \"\\n\";\n      }\n\n      return this.string[offset];\n    }\n  }, {\n    key: \"currentChar\",\n    value: function currentChar() {\n      return this.charAt(this.index);\n    }\n  }, {\n    key: \"currentPeek\",\n    value: function currentPeek() {\n      return this.charAt(this.index + this.peekOffset);\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.peekOffset = 0; // Skip over the CRLF as if it was a single character.\n\n      if (this.string[this.index] === \"\\r\" && this.string[this.index + 1] === \"\\n\") {\n        this.index++;\n      }\n\n      this.index++;\n      return this.string[this.index];\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      // Skip over the CRLF as if it was a single character.\n      if (this.string[this.index + this.peekOffset] === \"\\r\" && this.string[this.index + this.peekOffset + 1] === \"\\n\") {\n        this.peekOffset++;\n      }\n\n      this.peekOffset++;\n      return this.string[this.index + this.peekOffset];\n    }\n  }, {\n    key: \"resetPeek\",\n    value: function resetPeek() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.peekOffset = offset;\n    }\n  }, {\n    key: \"skipToPeek\",\n    value: function skipToPeek() {\n      this.index += this.peekOffset;\n      this.peekOffset = 0;\n    }\n  }]);\n\n  return ParserStream;\n}();\nvar EOL = \"\\n\";\nvar EOF = undefined;\nvar SPECIAL_LINE_START_CHARS = [\"}\", \".\", \"[\", \"*\"];\nvar FluentParserStream = /*#__PURE__*/function (_ParserStream) {\n  _inherits(FluentParserStream, _ParserStream);\n\n  var _super = _createSuper(FluentParserStream);\n\n  function FluentParserStream() {\n    _classCallCheck(this, FluentParserStream);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(FluentParserStream, [{\n    key: \"peekBlankInline\",\n    value: function peekBlankInline() {\n      var start = this.index + this.peekOffset;\n\n      while (this.currentPeek() === \" \") {\n        this.peek();\n      }\n\n      return this.string.slice(start, this.index + this.peekOffset);\n    }\n  }, {\n    key: \"skipBlankInline\",\n    value: function skipBlankInline() {\n      var blank = this.peekBlankInline();\n      this.skipToPeek();\n      return blank;\n    }\n  }, {\n    key: \"peekBlankBlock\",\n    value: function peekBlankBlock() {\n      var blank = \"\";\n\n      while (true) {\n        var lineStart = this.peekOffset;\n        this.peekBlankInline();\n\n        if (this.currentPeek() === EOL) {\n          blank += EOL;\n          this.peek();\n          continue;\n        }\n\n        if (this.currentPeek() === EOF) {\n          // Treat the blank line at EOF as a blank block.\n          return blank;\n        } // Any other char; reset to column 1 on this line.\n\n\n        this.resetPeek(lineStart);\n        return blank;\n      }\n    }\n  }, {\n    key: \"skipBlankBlock\",\n    value: function skipBlankBlock() {\n      var blank = this.peekBlankBlock();\n      this.skipToPeek();\n      return blank;\n    }\n  }, {\n    key: \"peekBlank\",\n    value: function peekBlank() {\n      while (this.currentPeek() === \" \" || this.currentPeek() === EOL) {\n        this.peek();\n      }\n    }\n  }, {\n    key: \"skipBlank\",\n    value: function skipBlank() {\n      this.peekBlank();\n      this.skipToPeek();\n    }\n  }, {\n    key: \"expectChar\",\n    value: function expectChar(ch) {\n      if (this.currentChar() === ch) {\n        this.next();\n        return;\n      }\n\n      throw new ParseError(\"E0003\", ch);\n    }\n  }, {\n    key: \"expectLineEnd\",\n    value: function expectLineEnd() {\n      if (this.currentChar() === EOF) {\n        // EOF is a valid line end in Fluent.\n        return;\n      }\n\n      if (this.currentChar() === EOL) {\n        this.next();\n        return;\n      } // Unicode Character 'SYMBOL FOR NEWLINE' (U+2424)\n\n\n      throw new ParseError(\"E0003\", \"\\u2424\");\n    }\n  }, {\n    key: \"takeChar\",\n    value: function takeChar(f) {\n      var ch = this.currentChar();\n\n      if (ch === EOF) {\n        return EOF;\n      }\n\n      if (f(ch)) {\n        this.next();\n        return ch;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"isCharIdStart\",\n    value: function isCharIdStart(ch) {\n      if (ch === EOF) {\n        return false;\n      }\n\n      var cc = ch.charCodeAt(0);\n      return cc >= 97 && cc <= 122 || // a-z\n      cc >= 65 && cc <= 90; // A-Z\n    }\n  }, {\n    key: \"isIdentifierStart\",\n    value: function isIdentifierStart() {\n      return this.isCharIdStart(this.currentPeek());\n    }\n  }, {\n    key: \"isNumberStart\",\n    value: function isNumberStart() {\n      var ch = this.currentChar() === \"-\" ? this.peek() : this.currentChar();\n\n      if (ch === EOF) {\n        this.resetPeek();\n        return false;\n      }\n\n      var cc = ch.charCodeAt(0);\n      var isDigit = cc >= 48 && cc <= 57; // 0-9\n\n      this.resetPeek();\n      return isDigit;\n    }\n  }, {\n    key: \"isCharPatternContinuation\",\n    value: function isCharPatternContinuation(ch) {\n      if (ch === EOF) {\n        return false;\n      }\n\n      return !SPECIAL_LINE_START_CHARS.includes(ch);\n    }\n  }, {\n    key: \"isValueStart\",\n    value: function isValueStart() {\n      // Inline Patterns may start with any char.\n      var ch = this.currentPeek();\n      return ch !== EOL && ch !== EOF;\n    }\n  }, {\n    key: \"isValueContinuation\",\n    value: function isValueContinuation() {\n      var column1 = this.peekOffset;\n      this.peekBlankInline();\n\n      if (this.currentPeek() === \"{\") {\n        this.resetPeek(column1);\n        return true;\n      }\n\n      if (this.peekOffset - column1 === 0) {\n        return false;\n      }\n\n      if (this.isCharPatternContinuation(this.currentPeek())) {\n        this.resetPeek(column1);\n        return true;\n      }\n\n      return false;\n    } // -1 - any\n    //  0 - comment\n    //  1 - group comment\n    //  2 - resource comment\n\n  }, {\n    key: \"isNextLineComment\",\n    value: function isNextLineComment() {\n      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n\n      if (this.currentChar() !== EOL) {\n        return false;\n      }\n\n      var i = 0;\n\n      while (i <= level || level === -1 && i < 3) {\n        if (this.peek() !== \"#\") {\n          if (i <= level && level !== -1) {\n            this.resetPeek();\n            return false;\n          }\n\n          break;\n        }\n\n        i++;\n      } // The first char after #, ## or ###.\n\n\n      var ch = this.peek();\n\n      if (ch === \" \" || ch === EOL) {\n        this.resetPeek();\n        return true;\n      }\n\n      this.resetPeek();\n      return false;\n    }\n  }, {\n    key: \"isVariantStart\",\n    value: function isVariantStart() {\n      var currentPeekOffset = this.peekOffset;\n\n      if (this.currentPeek() === \"*\") {\n        this.peek();\n      }\n\n      if (this.currentPeek() === \"[\") {\n        this.resetPeek(currentPeekOffset);\n        return true;\n      }\n\n      this.resetPeek(currentPeekOffset);\n      return false;\n    }\n  }, {\n    key: \"isAttributeStart\",\n    value: function isAttributeStart() {\n      return this.currentPeek() === \".\";\n    }\n  }, {\n    key: \"skipToNextEntryStart\",\n    value: function skipToNextEntryStart(junkStart) {\n      var lastNewline = this.string.lastIndexOf(EOL, this.index);\n\n      if (junkStart < lastNewline) {\n        // Last seen newline is _after_ the junk start. It's safe to rewind\n        // without the risk of resuming at the same broken entry.\n        this.index = lastNewline;\n      }\n\n      while (this.currentChar()) {\n        // We're only interested in beginnings of line.\n        if (this.currentChar() !== EOL) {\n          this.next();\n          continue;\n        } // Break if the first char in this line looks like an entry start.\n\n\n        var first = this.next();\n\n        if (this.isCharIdStart(first) || first === \"-\" || first === \"#\") {\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"takeIDStart\",\n    value: function takeIDStart() {\n      if (this.isCharIdStart(this.currentChar())) {\n        var ret = this.currentChar();\n        this.next();\n        return ret;\n      }\n\n      throw new ParseError(\"E0004\", \"a-zA-Z\");\n    }\n  }, {\n    key: \"takeIDChar\",\n    value: function takeIDChar() {\n      var closure = function closure(ch) {\n        var cc = ch.charCodeAt(0);\n        return cc >= 97 && cc <= 122 || // a-z\n        cc >= 65 && cc <= 90 || // A-Z\n        cc >= 48 && cc <= 57 || // 0-9\n        cc === 95 || cc === 45; // _-\n      };\n\n      return this.takeChar(closure);\n    }\n  }, {\n    key: \"takeDigit\",\n    value: function takeDigit() {\n      var closure = function closure(ch) {\n        var cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57; // 0-9\n      };\n\n      return this.takeChar(closure);\n    }\n  }, {\n    key: \"takeHexDigit\",\n    value: function takeHexDigit() {\n      var closure = function closure(ch) {\n        var cc = ch.charCodeAt(0);\n        return cc >= 48 && cc <= 57 || // 0-9\n        cc >= 65 && cc <= 70 // A-F\n        || cc >= 97 && cc <= 102; // a-f\n      };\n\n      return this.takeChar(closure);\n    }\n  }]);\n\n  return FluentParserStream;\n}(ParserStream);\n\nvar trailingWSRe = /[ \\t\\n\\r]+$/;\n\nfunction withSpan(fn) {\n  return function (ps) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (!this.withSpans) {\n      return fn.call.apply(fn, [this, ps].concat(args));\n    }\n\n    var start = ps.index;\n    var node = fn.call.apply(fn, [this, ps].concat(args)); // Don't re-add the span if the node already has it. This may happen when\n    // one decorated function calls another decorated function.\n\n    if (node.span) {\n      return node;\n    }\n\n    var end = ps.index;\n    node.addSpan(start, end);\n    return node;\n  };\n}\n\nvar FluentParser = /*#__PURE__*/function () {\n  function FluentParser() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$withSpans = _ref.withSpans,\n        withSpans = _ref$withSpans === void 0 ? true : _ref$withSpans;\n\n    _classCallCheck(this, FluentParser);\n\n    this.withSpans = withSpans; // Poor man's decorators.\n\n    /* eslint-disable @typescript-eslint/unbound-method */\n\n    this.getComment = withSpan(this.getComment);\n    this.getMessage = withSpan(this.getMessage);\n    this.getTerm = withSpan(this.getTerm);\n    this.getAttribute = withSpan(this.getAttribute);\n    this.getIdentifier = withSpan(this.getIdentifier);\n    this.getVariant = withSpan(this.getVariant);\n    this.getNumber = withSpan(this.getNumber);\n    this.getPattern = withSpan(this.getPattern);\n    this.getTextElement = withSpan(this.getTextElement);\n    this.getPlaceable = withSpan(this.getPlaceable);\n    this.getExpression = withSpan(this.getExpression);\n    this.getInlineExpression = withSpan(this.getInlineExpression);\n    this.getCallArgument = withSpan(this.getCallArgument);\n    this.getCallArguments = withSpan(this.getCallArguments);\n    this.getString = withSpan(this.getString);\n    this.getLiteral = withSpan(this.getLiteral);\n    this.getComment = withSpan(this.getComment);\n    /* eslint-enable @typescript-eslint/unbound-method */\n  }\n\n  _createClass(FluentParser, [{\n    key: \"parse\",\n    value: function parse(source) {\n      var ps = new FluentParserStream(source);\n      ps.skipBlankBlock();\n      var entries = [];\n      var lastComment = null;\n\n      while (ps.currentChar()) {\n        var entry = this.getEntryOrJunk(ps);\n        var blankLines = ps.skipBlankBlock(); // Regular Comments require special logic. Comments may be attached to\n        // Messages or Terms if they are followed immediately by them. However\n        // they should parse as standalone when they're followed by Junk.\n        // Consequently, we only attach Comments once we know that the Message\n        // or the Term parsed successfully.\n\n        if (entry instanceof Comment && blankLines.length === 0 && ps.currentChar()) {\n          // Stash the comment and decide what to do with it in the next pass.\n          lastComment = entry;\n          continue;\n        }\n\n        if (lastComment) {\n          if (entry instanceof Message || entry instanceof Term) {\n            entry.comment = lastComment;\n\n            if (this.withSpans) {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              entry.span.start = entry.comment.span.start;\n            }\n          } else {\n            entries.push(lastComment);\n          } // In either case, the stashed comment has been dealt with; clear it.\n\n\n          lastComment = null;\n        } // No special logic for other types of entries.\n\n\n        entries.push(entry);\n      }\n\n      var res = new Resource(entries);\n\n      if (this.withSpans) {\n        res.addSpan(0, ps.index);\n      }\n\n      return res;\n    }\n    /*\n     * Parse the first Message or Term in `source`.\n     *\n     * Skip all encountered comments and start parsing at the first Message or\n     * Term start. Return Junk if the parsing is not successful.\n     *\n     * Preceding comments are ignored unless they contain syntax errors\n     * themselves, in which case Junk for the invalid comment is returned.\n     */\n\n  }, {\n    key: \"parseEntry\",\n    value: function parseEntry(source) {\n      var ps = new FluentParserStream(source);\n      ps.skipBlankBlock();\n\n      while (ps.currentChar() === \"#\") {\n        var skipped = this.getEntryOrJunk(ps);\n\n        if (skipped instanceof Junk) {\n          // Don't skip Junk comments.\n          return skipped;\n        }\n\n        ps.skipBlankBlock();\n      }\n\n      return this.getEntryOrJunk(ps);\n    }\n  }, {\n    key: \"getEntryOrJunk\",\n    value: function getEntryOrJunk(ps) {\n      var entryStartPos = ps.index;\n\n      try {\n        var entry = this.getEntry(ps);\n        ps.expectLineEnd();\n        return entry;\n      } catch (err) {\n        if (!(err instanceof ParseError)) {\n          throw err;\n        }\n\n        var errorIndex = ps.index;\n        ps.skipToNextEntryStart(entryStartPos);\n        var nextEntryStart = ps.index;\n\n        if (nextEntryStart < errorIndex) {\n          // The position of the error must be inside of the Junk's span.\n          errorIndex = nextEntryStart;\n        } // Create a Junk instance\n\n\n        var slice = ps.string.substring(entryStartPos, nextEntryStart);\n        var junk = new Junk(slice);\n\n        if (this.withSpans) {\n          junk.addSpan(entryStartPos, nextEntryStart);\n        }\n\n        var annot = new Annotation(err.code, err.args, err.message);\n        annot.addSpan(errorIndex, errorIndex);\n        junk.addAnnotation(annot);\n        return junk;\n      }\n    }\n  }, {\n    key: \"getEntry\",\n    value: function getEntry(ps) {\n      if (ps.currentChar() === \"#\") {\n        return this.getComment(ps);\n      }\n\n      if (ps.currentChar() === \"-\") {\n        return this.getTerm(ps);\n      }\n\n      if (ps.isIdentifierStart()) {\n        return this.getMessage(ps);\n      }\n\n      throw new ParseError(\"E0002\");\n    }\n  }, {\n    key: \"getComment\",\n    value: function getComment(ps) {\n      // 0 - comment\n      // 1 - group comment\n      // 2 - resource comment\n      var level = -1;\n      var content = \"\";\n\n      while (true) {\n        var i = -1;\n\n        while (ps.currentChar() === \"#\" && i < (level === -1 ? 2 : level)) {\n          ps.next();\n          i++;\n        }\n\n        if (level === -1) {\n          level = i;\n        }\n\n        if (ps.currentChar() !== EOL) {\n          ps.expectChar(\" \");\n          var ch = void 0;\n\n          while (ch = ps.takeChar(function (x) {\n            return x !== EOL;\n          })) {\n            content += ch;\n          }\n        }\n\n        if (ps.isNextLineComment(level)) {\n          content += ps.currentChar();\n          ps.next();\n        } else {\n          break;\n        }\n      }\n\n      var Comment$1;\n\n      switch (level) {\n        case 0:\n          Comment$1 = Comment;\n          break;\n\n        case 1:\n          Comment$1 = GroupComment;\n          break;\n\n        default:\n          Comment$1 = ResourceComment;\n      }\n\n      return new Comment$1(content);\n    }\n  }, {\n    key: \"getMessage\",\n    value: function getMessage(ps) {\n      var id = this.getIdentifier(ps);\n      ps.skipBlankInline();\n      ps.expectChar(\"=\");\n      var value = this.maybeGetPattern(ps);\n      var attrs = this.getAttributes(ps);\n\n      if (value === null && attrs.length === 0) {\n        throw new ParseError(\"E0005\", id.name);\n      }\n\n      return new Message(id, value, attrs);\n    }\n  }, {\n    key: \"getTerm\",\n    value: function getTerm(ps) {\n      ps.expectChar(\"-\");\n      var id = this.getIdentifier(ps);\n      ps.skipBlankInline();\n      ps.expectChar(\"=\");\n      var value = this.maybeGetPattern(ps);\n\n      if (value === null) {\n        throw new ParseError(\"E0006\", id.name);\n      }\n\n      var attrs = this.getAttributes(ps);\n      return new Term(id, value, attrs);\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(ps) {\n      ps.expectChar(\".\");\n      var key = this.getIdentifier(ps);\n      ps.skipBlankInline();\n      ps.expectChar(\"=\");\n      var value = this.maybeGetPattern(ps);\n\n      if (value === null) {\n        throw new ParseError(\"E0012\");\n      }\n\n      return new Attribute(key, value);\n    }\n  }, {\n    key: \"getAttributes\",\n    value: function getAttributes(ps) {\n      var attrs = [];\n      ps.peekBlank();\n\n      while (ps.isAttributeStart()) {\n        ps.skipToPeek();\n        var attr = this.getAttribute(ps);\n        attrs.push(attr);\n        ps.peekBlank();\n      }\n\n      return attrs;\n    }\n  }, {\n    key: \"getIdentifier\",\n    value: function getIdentifier(ps) {\n      var name = ps.takeIDStart();\n      var ch;\n\n      while (ch = ps.takeIDChar()) {\n        name += ch;\n      }\n\n      return new Identifier(name);\n    }\n  }, {\n    key: \"getVariantKey\",\n    value: function getVariantKey(ps) {\n      var ch = ps.currentChar();\n\n      if (ch === EOF) {\n        throw new ParseError(\"E0013\");\n      }\n\n      var cc = ch.charCodeAt(0);\n\n      if (cc >= 48 && cc <= 57 || cc === 45) {\n        // 0-9, -\n        return this.getNumber(ps);\n      }\n\n      return this.getIdentifier(ps);\n    }\n  }, {\n    key: \"getVariant\",\n    value: function getVariant(ps) {\n      var hasDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var defaultIndex = false;\n\n      if (ps.currentChar() === \"*\") {\n        if (hasDefault) {\n          throw new ParseError(\"E0015\");\n        }\n\n        ps.next();\n        defaultIndex = true;\n      }\n\n      ps.expectChar(\"[\");\n      ps.skipBlank();\n      var key = this.getVariantKey(ps);\n      ps.skipBlank();\n      ps.expectChar(\"]\");\n      var value = this.maybeGetPattern(ps);\n\n      if (value === null) {\n        throw new ParseError(\"E0012\");\n      }\n\n      return new Variant(key, value, defaultIndex);\n    }\n  }, {\n    key: \"getVariants\",\n    value: function getVariants(ps) {\n      var variants = [];\n      var hasDefault = false;\n      ps.skipBlank();\n\n      while (ps.isVariantStart()) {\n        var variant = this.getVariant(ps, hasDefault);\n\n        if (variant[\"default\"]) {\n          hasDefault = true;\n        }\n\n        variants.push(variant);\n        ps.expectLineEnd();\n        ps.skipBlank();\n      }\n\n      if (variants.length === 0) {\n        throw new ParseError(\"E0011\");\n      }\n\n      if (!hasDefault) {\n        throw new ParseError(\"E0010\");\n      }\n\n      return variants;\n    }\n  }, {\n    key: \"getDigits\",\n    value: function getDigits(ps) {\n      var num = \"\";\n      var ch;\n\n      while (ch = ps.takeDigit()) {\n        num += ch;\n      }\n\n      if (num.length === 0) {\n        throw new ParseError(\"E0004\", \"0-9\");\n      }\n\n      return num;\n    }\n  }, {\n    key: \"getNumber\",\n    value: function getNumber(ps) {\n      var value = \"\";\n\n      if (ps.currentChar() === \"-\") {\n        ps.next();\n        value += \"-\".concat(this.getDigits(ps));\n      } else {\n        value += this.getDigits(ps);\n      }\n\n      if (ps.currentChar() === \".\") {\n        ps.next();\n        value += \".\".concat(this.getDigits(ps));\n      }\n\n      return new NumberLiteral(value);\n    } // maybeGetPattern distinguishes between patterns which start on the same line\n    // as the identifier (a.k.a. inline signleline patterns and inline multiline\n    // patterns) and patterns which start on a new line (a.k.a. block multiline\n    // patterns). The distinction is important for the dedentation logic: the\n    // indent of the first line of a block pattern must be taken into account when\n    // calculating the maximum common indent.\n\n  }, {\n    key: \"maybeGetPattern\",\n    value: function maybeGetPattern(ps) {\n      ps.peekBlankInline();\n\n      if (ps.isValueStart()) {\n        ps.skipToPeek();\n        return this.getPattern(ps, false);\n      }\n\n      ps.peekBlankBlock();\n\n      if (ps.isValueContinuation()) {\n        ps.skipToPeek();\n        return this.getPattern(ps, true);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getPattern\",\n    value: function getPattern(ps, isBlock) {\n      var elements = [];\n      var commonIndentLength;\n\n      if (isBlock) {\n        // A block pattern is a pattern which starts on a new line. Store and\n        // measure the indent of this first line for the dedentation logic.\n        var blankStart = ps.index;\n        var firstIndent = ps.skipBlankInline();\n        elements.push(this.getIndent(ps, firstIndent, blankStart));\n        commonIndentLength = firstIndent.length;\n      } else {\n        commonIndentLength = Infinity;\n      }\n\n      var ch;\n\n      elements: while (ch = ps.currentChar()) {\n        switch (ch) {\n          case EOL:\n            {\n              var _blankStart = ps.index;\n              var blankLines = ps.peekBlankBlock();\n\n              if (ps.isValueContinuation()) {\n                ps.skipToPeek();\n                var indent = ps.skipBlankInline();\n                commonIndentLength = Math.min(commonIndentLength, indent.length);\n                elements.push(this.getIndent(ps, blankLines + indent, _blankStart));\n                continue elements;\n              } // The end condition for getPattern's while loop is a newline\n              // which is not followed by a valid pattern continuation.\n\n\n              ps.resetPeek();\n              break elements;\n            }\n\n          case \"{\":\n            elements.push(this.getPlaceable(ps));\n            continue elements;\n\n          case \"}\":\n            throw new ParseError(\"E0027\");\n\n          default:\n            elements.push(this.getTextElement(ps));\n        }\n      }\n\n      var dedented = this.dedent(elements, commonIndentLength);\n      return new Pattern(dedented);\n    } // Create a token representing an indent. It's not part of the AST and it will\n    // be trimmed and merged into adjacent TextElements, or turned into a new\n    // TextElement, if it's surrounded by two Placeables.\n\n  }, {\n    key: \"getIndent\",\n    value: function getIndent(ps, value, start) {\n      return new Indent(value, start, ps.index);\n    } // Dedent a list of elements by removing the maximum common indent from the\n    // beginning of text lines. The common indent is calculated in getPattern.\n\n  }, {\n    key: \"dedent\",\n    value: function dedent(elements, commonIndent) {\n      var trimmed = [];\n\n      var _iterator = _createForOfIteratorHelper(elements),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var element = _step.value;\n\n          if (element instanceof Placeable) {\n            trimmed.push(element);\n            continue;\n          }\n\n          if (element instanceof Indent) {\n            // Strip common indent.\n            element.value = element.value.slice(0, element.value.length - commonIndent);\n\n            if (element.value.length === 0) {\n              continue;\n            }\n          }\n\n          var prev = trimmed[trimmed.length - 1];\n\n          if (prev && prev instanceof TextElement) {\n            // Join adjacent TextElements by replacing them with their sum.\n            var sum = new TextElement(prev.value + element.value);\n\n            if (this.withSpans) {\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              sum.addSpan(prev.span.start, element.span.end);\n            }\n\n            trimmed[trimmed.length - 1] = sum;\n            continue;\n          }\n\n          if (element instanceof Indent) {\n            // If the indent hasn't been merged into a preceding TextElement,\n            // convert it into a new TextElement.\n            var textElement = new TextElement(element.value);\n\n            if (this.withSpans) {\n              textElement.addSpan(element.span.start, element.span.end);\n            }\n\n            element = textElement;\n          }\n\n          trimmed.push(element);\n        } // Trim trailing whitespace from the Pattern.\n\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var lastElement = trimmed[trimmed.length - 1];\n\n      if (lastElement instanceof TextElement) {\n        lastElement.value = lastElement.value.replace(trailingWSRe, \"\");\n\n        if (lastElement.value.length === 0) {\n          trimmed.pop();\n        }\n      }\n\n      return trimmed;\n    }\n  }, {\n    key: \"getTextElement\",\n    value: function getTextElement(ps) {\n      var buffer = \"\";\n      var ch;\n\n      while (ch = ps.currentChar()) {\n        if (ch === \"{\" || ch === \"}\") {\n          return new TextElement(buffer);\n        }\n\n        if (ch === EOL) {\n          return new TextElement(buffer);\n        }\n\n        buffer += ch;\n        ps.next();\n      }\n\n      return new TextElement(buffer);\n    }\n  }, {\n    key: \"getEscapeSequence\",\n    value: function getEscapeSequence(ps) {\n      var next = ps.currentChar();\n\n      switch (next) {\n        case \"\\\\\":\n        case \"\\\"\":\n          ps.next();\n          return \"\\\\\".concat(next);\n\n        case \"u\":\n          return this.getUnicodeEscapeSequence(ps, next, 4);\n\n        case \"U\":\n          return this.getUnicodeEscapeSequence(ps, next, 6);\n\n        default:\n          throw new ParseError(\"E0025\", next);\n      }\n    }\n  }, {\n    key: \"getUnicodeEscapeSequence\",\n    value: function getUnicodeEscapeSequence(ps, u, digits) {\n      ps.expectChar(u);\n      var sequence = \"\";\n\n      for (var i = 0; i < digits; i++) {\n        var ch = ps.takeHexDigit();\n\n        if (!ch) {\n          throw new ParseError(\"E0026\", \"\\\\\".concat(u).concat(sequence).concat(ps.currentChar()));\n        }\n\n        sequence += ch;\n      }\n\n      return \"\\\\\".concat(u).concat(sequence);\n    }\n  }, {\n    key: \"getPlaceable\",\n    value: function getPlaceable(ps) {\n      ps.expectChar(\"{\");\n      ps.skipBlank();\n      var expression = this.getExpression(ps);\n      ps.expectChar(\"}\");\n      return new Placeable(expression);\n    }\n  }, {\n    key: \"getExpression\",\n    value: function getExpression(ps) {\n      var selector = this.getInlineExpression(ps);\n      ps.skipBlank();\n\n      if (ps.currentChar() === \"-\") {\n        if (ps.peek() !== \">\") {\n          ps.resetPeek();\n          return selector;\n        } // Validate selector expression according to\n        // abstract.js in the Fluent specification\n\n\n        if (selector instanceof MessageReference) {\n          if (selector.attribute === null) {\n            throw new ParseError(\"E0016\");\n          } else {\n            throw new ParseError(\"E0018\");\n          }\n        } else if (selector instanceof TermReference) {\n          if (selector.attribute === null) {\n            throw new ParseError(\"E0017\");\n          }\n        } else if (selector instanceof Placeable) {\n          throw new ParseError(\"E0029\");\n        }\n\n        ps.next();\n        ps.next();\n        ps.skipBlankInline();\n        ps.expectLineEnd();\n        var variants = this.getVariants(ps);\n        return new SelectExpression(selector, variants);\n      }\n\n      if (selector instanceof TermReference && selector.attribute !== null) {\n        throw new ParseError(\"E0019\");\n      }\n\n      return selector;\n    }\n  }, {\n    key: \"getInlineExpression\",\n    value: function getInlineExpression(ps) {\n      if (ps.currentChar() === \"{\") {\n        return this.getPlaceable(ps);\n      }\n\n      if (ps.isNumberStart()) {\n        return this.getNumber(ps);\n      }\n\n      if (ps.currentChar() === '\"') {\n        return this.getString(ps);\n      }\n\n      if (ps.currentChar() === \"$\") {\n        ps.next();\n        var id = this.getIdentifier(ps);\n        return new VariableReference(id);\n      }\n\n      if (ps.currentChar() === \"-\") {\n        ps.next();\n\n        var _id = this.getIdentifier(ps);\n\n        var attr;\n\n        if (ps.currentChar() === \".\") {\n          ps.next();\n          attr = this.getIdentifier(ps);\n        }\n\n        var args;\n        ps.peekBlank();\n\n        if (ps.currentPeek() === \"(\") {\n          ps.skipToPeek();\n          args = this.getCallArguments(ps);\n        }\n\n        return new TermReference(_id, attr, args);\n      }\n\n      if (ps.isIdentifierStart()) {\n        var _id2 = this.getIdentifier(ps);\n\n        ps.peekBlank();\n\n        if (ps.currentPeek() === \"(\") {\n          // It's a Function. Ensure it's all upper-case.\n          if (!/^[A-Z][A-Z0-9_-]*$/.test(_id2.name)) {\n            throw new ParseError(\"E0008\");\n          }\n\n          ps.skipToPeek();\n\n          var _args = this.getCallArguments(ps);\n\n          return new FunctionReference(_id2, _args);\n        }\n\n        var _attr;\n\n        if (ps.currentChar() === \".\") {\n          ps.next();\n          _attr = this.getIdentifier(ps);\n        }\n\n        return new MessageReference(_id2, _attr);\n      }\n\n      throw new ParseError(\"E0028\");\n    }\n  }, {\n    key: \"getCallArgument\",\n    value: function getCallArgument(ps) {\n      var exp = this.getInlineExpression(ps);\n      ps.skipBlank();\n\n      if (ps.currentChar() !== \":\") {\n        return exp;\n      }\n\n      if (exp instanceof MessageReference && exp.attribute === null) {\n        ps.next();\n        ps.skipBlank();\n        var value = this.getLiteral(ps);\n        return new NamedArgument(exp.id, value);\n      }\n\n      throw new ParseError(\"E0009\");\n    }\n  }, {\n    key: \"getCallArguments\",\n    value: function getCallArguments(ps) {\n      var positional = [];\n      var named = [];\n      var argumentNames = new Set();\n      ps.expectChar(\"(\");\n      ps.skipBlank();\n\n      while (true) {\n        if (ps.currentChar() === \")\") {\n          break;\n        }\n\n        var arg = this.getCallArgument(ps);\n\n        if (arg instanceof NamedArgument) {\n          if (argumentNames.has(arg.name.name)) {\n            throw new ParseError(\"E0022\");\n          }\n\n          named.push(arg);\n          argumentNames.add(arg.name.name);\n        } else if (argumentNames.size > 0) {\n          throw new ParseError(\"E0021\");\n        } else {\n          positional.push(arg);\n        }\n\n        ps.skipBlank();\n\n        if (ps.currentChar() === \",\") {\n          ps.next();\n          ps.skipBlank();\n          continue;\n        }\n\n        break;\n      }\n\n      ps.expectChar(\")\");\n      return new CallArguments(positional, named);\n    }\n  }, {\n    key: \"getString\",\n    value: function getString(ps) {\n      ps.expectChar(\"\\\"\");\n      var value = \"\";\n      var ch;\n\n      while (ch = ps.takeChar(function (x) {\n        return x !== '\"' && x !== EOL;\n      })) {\n        if (ch === \"\\\\\") {\n          value += this.getEscapeSequence(ps);\n        } else {\n          value += ch;\n        }\n      }\n\n      if (ps.currentChar() === EOL) {\n        throw new ParseError(\"E0020\");\n      }\n\n      ps.expectChar(\"\\\"\");\n      return new StringLiteral(value);\n    }\n  }, {\n    key: \"getLiteral\",\n    value: function getLiteral(ps) {\n      if (ps.isNumberStart()) {\n        return this.getNumber(ps);\n      }\n\n      if (ps.currentChar() === '\"') {\n        return this.getString(ps);\n      }\n\n      throw new ParseError(\"E0014\");\n    }\n  }]);\n\n  return FluentParser;\n}();\n\nvar Indent = function Indent(value, start, end) {\n  _classCallCheck(this, Indent);\n\n  this.type = \"Indent\";\n  this.value = value;\n  this.span = new Span(start, end);\n};\n\nfunction parse(source, opts) {\n  var parser = new FluentParser(opts);\n  return parser.parse(source);\n}\n\nvar getTypeName = function getTypeName(item) {\n  return 'get' + item.type;\n};\n\nvar serializer = {\n  serialize: function serialize(item) {\n    if (this[getTypeName(item)]) {\n      return this[getTypeName(item)](item);\n    } else {\n      console.warn('unknown type:', item.type, item);\n    }\n  },\n  getComment: function getComment(item) {\n    return {\n      key: 'comment',\n      value: item.content\n    };\n  },\n  getGroupComment: function getGroupComment() {\n    return null;\n  },\n  getResourceComment: function getResourceComment() {\n    return null;\n  },\n  getMessage: function getMessage(item) {\n    var _this = this;\n\n    return {\n      key: this[getTypeName(item.id)](item.id),\n      value: this[getTypeName(item.value)](item.value),\n      comment: item.comment && this[getTypeName(item.comment)](item.comment),\n      attributes: item.attributes && item.attributes.map(function (attr) {\n        return _this.serialize(attr);\n      })\n    };\n  },\n  getAttribute: function getAttribute(item) {\n    return {\n      key: this[getTypeName(item.id)](item.id),\n      value: this[getTypeName(item.value)](item.value)\n    };\n  },\n  getTerm: function getTerm(item) {\n    var _this2 = this;\n\n    return {\n      key: \"-\".concat(this[getTypeName(item.id)](item.id)),\n      value: this[getTypeName(item.value)](item.value),\n      comment: item.comment && this[getTypeName(item.comment)](item.comment),\n      attributes: item.attributes && item.attributes.map(function (attr) {\n        return _this2.serialize(attr);\n      })\n    };\n  },\n  getIdentifier: function getIdentifier(item) {\n    return item.name;\n  },\n  getStringLiteral: function getStringLiteral(item) {\n    return item.value;\n  },\n  getPattern: function getPattern(item) {\n    var _this3 = this;\n\n    var items = item.elements.map(function (placeable) {\n      if (placeable.expression) {\n        if (!_this3[getTypeName(placeable.expression)]) {\n          return console.log('unknown1', getTypeName(placeable.expression), placeable.expression);\n        }\n\n        return _this3[getTypeName(placeable.expression)](placeable.expression);\n      } else {\n        if (!_this3[getTypeName(placeable)]) {\n          return console.log('unknown2', getTypeName(placeable), placeable);\n        }\n\n        return _this3[getTypeName(placeable)](placeable);\n      }\n    });\n    return items.join('');\n  },\n  getCallExpression: function getCallExpression(item) {\n    var _this4 = this;\n\n    var fcName = item.callee.name;\n    var positionals = item.positional.map(function (positional) {\n      return _this4[getTypeName(positional)](positional, true);\n    });\n    var nameds = item.named.map(function (named) {\n      return _this4[getTypeName(named)](named);\n    });\n    return '{ ' + fcName + '($' + positionals.join(' ') + (nameds.length ? ', ' + nameds.join(', ') : '') + ') }';\n  },\n  getNamedArgument: function getNamedArgument(item) {\n    return this[getTypeName(item.name)](item.name) + ': \"' + this[getTypeName(item.value)](item.value) + '\"';\n  },\n  getTextElement: function getTextElement(item) {\n    return item.value;\n  },\n  getSelectExpression: function getSelectExpression(item) {\n    var _this5 = this;\n\n    var id = this[getTypeName(item.selector)](item.selector, true);\n    var variants = item.variants.map(function (variant) {\n      return _this5[getTypeName(variant)](variant);\n    });\n    return '{ $' + id + ' ->\\n' + variants.join('\\n') + '\\n}';\n  },\n  getVariantExpression: function getVariantExpression(item) {\n    var ref = this[getTypeName(item.ref)](item.ref, true);\n    var key = this[getTypeName(item.key)](item.key);\n    if (key) return '{ ' + ref + '[' + key + '] }';\n    return ' { ' + ref + ' } ';\n  },\n  getVariableReference: function getVariableReference(item, plain) {\n    if (plain) return this[getTypeName(item.id)](item.id);\n    return '{ $' + this[getTypeName(item.id)](item.id) + ' }';\n  },\n  getTermReferences: function getTermReferences(item, plain) {\n    if (plain) return this[getTypeName(item.id)](item.id);\n    return '{ ' + this[getTypeName(item.id)](item.id) + ' }';\n  },\n  getVariantName: function getVariantName(item) {\n    return item.name;\n  },\n  getVariantList: function getVariantList(item) {\n    var _this6 = this;\n\n    var variants = item.variants.map(function (variant) {\n      return _this6[getTypeName(variant)](variant);\n    });\n    return '{\\n' + variants.join('\\n') + '\\n}';\n  },\n  getVariant: function getVariant(item) {\n    var name = item.key.name ? item.key.name : item.key.value;\n    var isDefault = item[\"default\"];\n    var pattern = this[getTypeName(item.value)](item.value);\n    var ret = '[' + name + '] ' + pattern;\n    if (isDefault) return ' *' + ret;\n    return '  ' + ret;\n  },\n  getFunctionReference: function getFunctionReference(item) {\n    var args = '';\n    item.arguments.positional.forEach(function (p, i) {\n      if (i > 0) args += ', ';\n      args += \"$\".concat(p.id.name);\n    });\n    item.arguments.named.forEach(function (n, i) {\n      if (i > 0 || args !== '') args += ', ';\n      args += \"\".concat(n.name.name, \": \\\"\").concat(n.value.value, \"\\\"\");\n    });\n    return \"{ \".concat(item.id.name, \"(\").concat(args, \") }\");\n  },\n  getTermReference: function getTermReference(item) {\n    return \"{ -\".concat(item.id.name, \" }\");\n  },\n  getJunk: function getJunk(item) {\n    var parts = item.content.split('=');\n    var key = parts.shift().trim();\n    var value = parts.join('=').trim().replace(/\\n {3}/g, '\\n ').replace(/\\n {2}}/g, '\\n}');\n    return {\n      key: key,\n      value: value\n    };\n  }\n};\n\nfunction ftlToJs(str, cb) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    respectComments: true\n  };\n\n  if (typeof str !== 'string') {\n    if (!cb) throw new Error('The first parameter was not a string');\n    return cb(new Error('The first parameter was not a string'));\n  }\n\n  var parsed = parse(str, {\n    withSpans: false\n  });\n  var result = parsed.body.reduce(function (mem, segment) {\n    var item = serializer.serialize(segment);\n    if (!item) return mem;\n\n    if (item.attributes && item.attributes.length || item.comment && params.respectComments) {\n      var inner = {};\n      if (item.comment) inner[item.comment.key] = item.comment.value;\n\n      if (item.attributes && item.attributes.length) {\n        item.attributes.forEach(function (attr) {\n          inner[attr.key] = attr.value;\n        });\n      }\n\n      inner.val = item.value;\n      mem[item.key] = inner;\n    } else {\n      mem[item.key] = item.value;\n    }\n\n    return mem;\n  }, {});\n  if (cb) cb(null, result);\n  return result;\n}\n\nfunction addValue(k, value) {\n  var ftl = '';\n  ftl = ftl + k + ' =';\n\n  if (value && value.indexOf('\\n') > -1) {\n    ftl = ftl + '\\n  ';\n    ftl = ftl + value.split('\\n').join('\\n  ');\n  } else {\n    ftl = ftl + ' ' + value;\n  }\n\n  return ftl;\n}\n\nfunction addComment(comment) {\n  var ftl = '';\n  ftl = ftl + '# ' + comment.split('\\n').join('\\n# ');\n  ftl = ftl + '\\n';\n  return ftl;\n}\n\nfunction js2ftl(resources, cb) {\n  var ftl = '';\n  Object.keys(resources).forEach(function (k) {\n    var value = resources[k];\n\n    if (typeof value === 'string') {\n      ftl = ftl + addValue(k, value);\n      ftl = ftl + '\\n\\n';\n    } else {\n      if (value.comment) ftl = ftl + addComment(value.comment);\n      ftl = ftl + addValue(k, value.val);\n      Object.keys(value).forEach(function (innerK) {\n        if (innerK === 'comment' || innerK === 'val') return;\n        var innerValue = value[innerK];\n        ftl = ftl + addValue('\\n  .' + innerK, innerValue);\n      });\n      ftl = ftl + '\\n\\n';\n    }\n  });\n  if (cb) cb(null, ftl);\n  return ftl;\n}\n\nvar index = {\n  ftl2js: ftlToJs,\n  js2ftl: js2ftl\n};\n\nexport default index;\nexport { ftlToJs as ftl2js, js2ftl };\n"],"sourceRoot":""}