{"version":3,"sources":["../../../../inweso-cat-new/node_modules/xml-js/lib/options-helper.js","../../../../inweso-cat-new/node_modules/xml-js/lib/array-helper.js","../../../../inweso-cat-new/node_modules/xml-js/lib/index.js","../../../../inweso-cat-new/node_modules/xml-js/lib/xml2js.js","../../../../inweso-cat-new/node_modules/xml-js/lib/js2xml.js","../../../../inweso-cat-new/node_modules/sax/lib/sax.js","../../../../inweso-cat-new/node_modules/xml-js/lib/xml2json.js","../../../../inweso-cat-new/node_modules/xml-js/lib/json2xml.js"],"names":["isArray","require","module","exports","copyOptions","options","key","copy","hasOwnProperty","ensureFlagExists","item","ensureSpacesExists","spaces","ensureAlwaysArrayExists","alwaysArray","ensureKeyExists","compact","checkFnExists","value","Array","Object","prototype","toString","call","xml2js","xml2json","js2xml","json2xml","currentElement","sax","helper","nativeType","nValue","Number","isNaN","bValue","toLowerCase","addField","type","indexOf","instructionFn","temp","instructionNameFn","push","elementsKey","element","typeKey","nameKey","instructionHasAttributes","attributesKey","instructionKey","addParent","parentKey","manipulateAttributes","attributes","attributesFn","trim","nativeTypeAttributes","attributeValueFn","attributeNameFn","onInstruction","instruction","body","name","match","attrsRegExp","exec","ignoreDeclaration","declarationKey","keys","length","ignoreInstruction","onStartElement","elementNameFn","ignoreAttributes","alwaysChildren","onText","text","ignoreText","captureSpacesBetweenElements","sanitize","replace","onComment","comment","ignoreComment","onEndElement","parentElement","onCdata","cdata","ignoreCdata","onDoctype","doctype","ignoreDoctype","onError","error","note","xml","userOptions","parser","result","validateOptions","opt","strictEntities","onopentag","ontext","oncomment","onclosetag","onerror","oncdata","ondoctype","onprocessinginstruction","write","close","currentElementName","writeIndentation","depth","firstLine","join","writeAttributes","attr","attrName","quote","undefined","noQuotesForNativeAttributes","indentAttributes","writeDeclaration","declaration","writeInstruction","instructionName","instructionValue","writeComment","commentFn","writeCdata","cdataFn","writeDoctype","doctypeFn","writeText","textFn","writeElements","elements","reduce","indent","elementName","withClosingTag","fullTagEmptyElementFn","fullTagEmptyElement","i","indentText","indentCdata","indentInstruction","hasContent","writeElement","commentKey","doctypeKey","cdataKey","textKey","hasContentCompact","anyContent","writeElementCompact","writeElementsCompact","nodes","js","strict","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","Stream","buffers","this","l","clearBuffers","q","c","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","tag","noscript","state","S","BEGIN","ENTITIES","create","XML_ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","position","line","column","emit","EVENTS","o","F","a","end","chunk","charAt","BEGIN_WHITESPACE","beginWhiteSpace","TEXT","starti","textNode","substring","isWhitespace","strictFail","TEXT_ENTITY","OPEN_WAKA","startTagPosition","SCRIPT","SCRIPT_ENDING","script","CLOSE_TAG","SGML_DECL","sgmlDecl","isMatch","nameStart","OPEN_TAG","tagName","PROC_INST","procInstName","procInstBody","pad","toUpperCase","emitNode","CDATA","COMMENT","DOCTYPE","isQuote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","textopts","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","nameBody","newTag","openTag","OPEN_TAG_SLASH","ATTRIB","closeTag","attribName","attribValue","ATTRIB_NAME","ATTRIB_VALUE","attrib","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","isAttribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","notMatch","returnState","buffer","parseEntity","entity","entityBody","entityStart","Error","maxAllowed","Math","max","maxActual","len","closeText","m","checkBufferLength","resume","flush","ex","streamWraps","filter","ev","apply","_parser","writable","readable","me","onend","er","_decoder","forEach","defineProperty","get","set","h","removeAllListeners","on","enumerable","configurable","constructor","data","Buffer","isBuffer","SD","StringDecoder","handler","args","arguments","splice","XML_NAMESPACE","XMLNS_NAMESPACE","regex","test","s","STATE","COMMENT_STARTING","e","String","fromCharCode","event","nodeType","normalize","message","parent","qname","attribute","qualName","split","prefix","local","qn","selfClosing","uri","JSON","stringify","p","nv","isSelfClosing","t","closeTo","pop","x","n","num","entityLC","numStr","slice","parseInt","fromCodePoint","stringFromCharCode","floor","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","index","codePoint","isFinite","RangeError","k","v","json","parse"],"mappings":"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","file":"static/js/6.d9c65a83.chunk.js","sourcesContent":["var isArray = require('./array-helper').isArray;\r\n\r\nmodule.exports = {\r\n\r\n  copyOptions: function (options) {\r\n    var key, copy = {};\r\n    for (key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        copy[key] = options[key];\r\n      }\r\n    }\r\n    return copy;\r\n  },\r\n\r\n  ensureFlagExists: function (item, options) {\r\n    if (!(item in options) || typeof options[item] !== 'boolean') {\r\n      options[item] = false;\r\n    }\r\n  },\r\n\r\n  ensureSpacesExists: function (options) {\r\n    if (!('spaces' in options) || (typeof options.spaces !== 'number' && typeof options.spaces !== 'string')) {\r\n      options.spaces = 0;\r\n    }\r\n  },\r\n\r\n  ensureAlwaysArrayExists: function (options) {\r\n    if (!('alwaysArray' in options) || (typeof options.alwaysArray !== 'boolean' && !isArray(options.alwaysArray))) {\r\n      options.alwaysArray = false;\r\n    }\r\n  },\r\n\r\n  ensureKeyExists: function (key, options) {\r\n    if (!(key + 'Key' in options) || typeof options[key + 'Key'] !== 'string') {\r\n      options[key + 'Key'] = options.compact ? '_' + key : key;\r\n    }\r\n  },\r\n\r\n  checkFnExists: function (key, options) {\r\n    return key + 'Fn' in options;\r\n  }\r\n\r\n};\r\n","module.exports = {\r\n\r\n  isArray: function(value) {\r\n    if (Array.isArray) {\r\n      return Array.isArray(value);\r\n    }\r\n    // fallback for older browsers like  IE 8\r\n    return Object.prototype.toString.call( value ) === '[object Array]';\r\n  }\r\n\r\n};\r\n","/*jslint node:true */\r\n\r\nvar xml2js = require('./xml2js');\r\nvar xml2json = require('./xml2json');\r\nvar js2xml = require('./js2xml');\r\nvar json2xml = require('./json2xml');\r\n\r\nmodule.exports = {\r\n  xml2js: xml2js,\r\n  xml2json: xml2json,\r\n  js2xml: js2xml,\r\n  json2xml: json2xml\r\n};\r\n","var sax = require('sax');\r\nvar expat /*= require('node-expat');*/ = { on: function () { }, parse: function () { } };\r\nvar helper = require('./options-helper');\r\nvar isArray = require('./array-helper').isArray;\r\n\r\nvar options;\r\nvar pureJsParser = true;\r\nvar currentElement;\r\n\r\nfunction validateOptions(userOptions) {\r\n  options = helper.copyOptions(userOptions);\r\n  helper.ensureFlagExists('ignoreDeclaration', options);\r\n  helper.ensureFlagExists('ignoreInstruction', options);\r\n  helper.ensureFlagExists('ignoreAttributes', options);\r\n  helper.ensureFlagExists('ignoreText', options);\r\n  helper.ensureFlagExists('ignoreComment', options);\r\n  helper.ensureFlagExists('ignoreCdata', options);\r\n  helper.ensureFlagExists('ignoreDoctype', options);\r\n  helper.ensureFlagExists('compact', options);\r\n  helper.ensureFlagExists('alwaysChildren', options);\r\n  helper.ensureFlagExists('addParent', options);\r\n  helper.ensureFlagExists('trim', options);\r\n  helper.ensureFlagExists('nativeType', options);\r\n  helper.ensureFlagExists('nativeTypeAttributes', options);\r\n  helper.ensureFlagExists('sanitize', options);\r\n  helper.ensureFlagExists('instructionHasAttributes', options);\r\n  helper.ensureFlagExists('captureSpacesBetweenElements', options);\r\n  helper.ensureAlwaysArrayExists(options);\r\n  helper.ensureKeyExists('declaration', options);\r\n  helper.ensureKeyExists('instruction', options);\r\n  helper.ensureKeyExists('attributes', options);\r\n  helper.ensureKeyExists('text', options);\r\n  helper.ensureKeyExists('comment', options);\r\n  helper.ensureKeyExists('cdata', options);\r\n  helper.ensureKeyExists('doctype', options);\r\n  helper.ensureKeyExists('type', options);\r\n  helper.ensureKeyExists('name', options);\r\n  helper.ensureKeyExists('elements', options);\r\n  helper.ensureKeyExists('parent', options);\r\n  helper.checkFnExists('doctype', options);\r\n  helper.checkFnExists('instruction', options);\r\n  helper.checkFnExists('cdata', options);\r\n  helper.checkFnExists('comment', options);\r\n  helper.checkFnExists('text', options);\r\n  helper.checkFnExists('instructionName', options);\r\n  helper.checkFnExists('elementName', options);\r\n  helper.checkFnExists('attributeName', options);\r\n  helper.checkFnExists('attributeValue', options);\r\n  helper.checkFnExists('attributes', options);\r\n  return options;\r\n}\r\n\r\nfunction nativeType(value) {\r\n  var nValue = Number(value);\r\n  if (!isNaN(nValue)) {\r\n    return nValue;\r\n  }\r\n  var bValue = value.toLowerCase();\r\n  if (bValue === 'true') {\r\n    return true;\r\n  } else if (bValue === 'false') {\r\n    return false;\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction addField(type, value) {\r\n  var key;\r\n  if (options.compact) {\r\n    if (\r\n      !currentElement[options[type + 'Key']] &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(options[type + 'Key']) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[options[type + 'Key']] = [];\r\n    }\r\n    if (currentElement[options[type + 'Key']] && !isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']] = [currentElement[options[type + 'Key']]];\r\n    }\r\n    if (type + 'Fn' in options && typeof value === 'string') {\r\n      value = options[type + 'Fn'](value, currentElement);\r\n    }\r\n    if (type === 'instruction' && ('instructionFn' in options || 'instructionNameFn' in options)) {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          if ('instructionFn' in options) {\r\n            value[key] = options.instructionFn(value[key], key, currentElement);\r\n          } else {\r\n            var temp = value[key];\r\n            delete value[key];\r\n            value[options.instructionNameFn(key, temp, currentElement)] = temp;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (isArray(currentElement[options[type + 'Key']])) {\r\n      currentElement[options[type + 'Key']].push(value);\r\n    } else {\r\n      currentElement[options[type + 'Key']] = value;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    var element = {};\r\n    element[options.typeKey] = type;\r\n    if (type === 'instruction') {\r\n      for (key in value) {\r\n        if (value.hasOwnProperty(key)) {\r\n          break;\r\n        }\r\n      }\r\n      element[options.nameKey] = 'instructionNameFn' in options ? options.instructionNameFn(key, value, currentElement) : key;\r\n      if (options.instructionHasAttributes) {\r\n        element[options.attributesKey] = value[key][options.attributesKey];\r\n        if ('instructionFn' in options) {\r\n          element[options.attributesKey] = options.instructionFn(element[options.attributesKey], key, currentElement);\r\n        }\r\n      } else {\r\n        if ('instructionFn' in options) {\r\n          value[key] = options.instructionFn(value[key], key, currentElement);\r\n        }\r\n        element[options.instructionKey] = value[key];\r\n      }\r\n    } else {\r\n      if (type + 'Fn' in options) {\r\n        value = options[type + 'Fn'](value, currentElement);\r\n      }\r\n      element[options[type + 'Key']] = value;\r\n    }\r\n    if (options.addParent) {\r\n      element[options.parentKey] = currentElement;\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n}\r\n\r\nfunction manipulateAttributes(attributes) {\r\n  if ('attributesFn' in options && attributes) {\r\n    attributes = options.attributesFn(attributes, currentElement);\r\n  }\r\n  if ((options.trim || 'attributeValueFn' in options || 'attributeNameFn' in options || options.nativeTypeAttributes) && attributes) {\r\n    var key;\r\n    for (key in attributes) {\r\n      if (attributes.hasOwnProperty(key)) {\r\n        if (options.trim) attributes[key] = attributes[key].trim();\r\n        if (options.nativeTypeAttributes) {\r\n          attributes[key] = nativeType(attributes[key]);\r\n        }\r\n        if ('attributeValueFn' in options) attributes[key] = options.attributeValueFn(attributes[key], key, currentElement);\r\n        if ('attributeNameFn' in options) {\r\n          var temp = attributes[key];\r\n          delete attributes[key];\r\n          attributes[options.attributeNameFn(key, attributes[key], currentElement)] = temp;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return attributes;\r\n}\r\n\r\nfunction onInstruction(instruction) {\r\n  var attributes = {};\r\n  if (instruction.body && (instruction.name.toLowerCase() === 'xml' || options.instructionHasAttributes)) {\r\n    var attrsRegExp = /([\\w:-]+)\\s*=\\s*(?:\"([^\"]*)\"|'([^']*)'|(\\w+))\\s*/g;\r\n    var match;\r\n    while ((match = attrsRegExp.exec(instruction.body)) !== null) {\r\n      attributes[match[1]] = match[2] || match[3] || match[4];\r\n    }\r\n    attributes = manipulateAttributes(attributes);\r\n  }\r\n  if (instruction.name.toLowerCase() === 'xml') {\r\n    if (options.ignoreDeclaration) {\r\n      return;\r\n    }\r\n    currentElement[options.declarationKey] = {};\r\n    if (Object.keys(attributes).length) {\r\n      currentElement[options.declarationKey][options.attributesKey] = attributes;\r\n    }\r\n    if (options.addParent) {\r\n      currentElement[options.declarationKey][options.parentKey] = currentElement;\r\n    }\r\n  } else {\r\n    if (options.ignoreInstruction) {\r\n      return;\r\n    }\r\n    if (options.trim) {\r\n      instruction.body = instruction.body.trim();\r\n    }\r\n    var value = {};\r\n    if (options.instructionHasAttributes && Object.keys(attributes).length) {\r\n      value[instruction.name] = {};\r\n      value[instruction.name][options.attributesKey] = attributes;\r\n    } else {\r\n      value[instruction.name] = instruction.body;\r\n    }\r\n    addField('instruction', value);\r\n  }\r\n}\r\n\r\nfunction onStartElement(name, attributes) {\r\n  var element;\r\n  if (typeof name === 'object') {\r\n    attributes = name.attributes;\r\n    name = name.name;\r\n  }\r\n  attributes = manipulateAttributes(attributes);\r\n  if ('elementNameFn' in options) {\r\n    name = options.elementNameFn(name, currentElement);\r\n  }\r\n  if (options.compact) {\r\n    element = {};\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = {};\r\n      var key;\r\n      for (key in attributes) {\r\n        if (attributes.hasOwnProperty(key)) {\r\n          element[options.attributesKey][key] = attributes[key];\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      !(name in currentElement) &&\r\n      (isArray(options.alwaysArray) ? options.alwaysArray.indexOf(name) !== -1 : options.alwaysArray)\r\n    ) {\r\n      currentElement[name] = [];\r\n    }\r\n    if (currentElement[name] && !isArray(currentElement[name])) {\r\n      currentElement[name] = [currentElement[name]];\r\n    }\r\n    if (isArray(currentElement[name])) {\r\n      currentElement[name].push(element);\r\n    } else {\r\n      currentElement[name] = element;\r\n    }\r\n  } else {\r\n    if (!currentElement[options.elementsKey]) {\r\n      currentElement[options.elementsKey] = [];\r\n    }\r\n    element = {};\r\n    element[options.typeKey] = 'element';\r\n    element[options.nameKey] = name;\r\n    if (!options.ignoreAttributes && attributes && Object.keys(attributes).length) {\r\n      element[options.attributesKey] = attributes;\r\n    }\r\n    if (options.alwaysChildren) {\r\n      element[options.elementsKey] = [];\r\n    }\r\n    currentElement[options.elementsKey].push(element);\r\n  }\r\n  element[options.parentKey] = currentElement; // will be deleted in onEndElement() if !options.addParent\r\n  currentElement = element;\r\n}\r\n\r\nfunction onText(text) {\r\n  if (options.ignoreText) {\r\n    return;\r\n  }\r\n  if (!text.trim() && !options.captureSpacesBetweenElements) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    text = text.trim();\r\n  }\r\n  if (options.nativeType) {\r\n    text = nativeType(text);\r\n  }\r\n  if (options.sanitize) {\r\n    text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n  addField('text', text);\r\n}\r\n\r\nfunction onComment(comment) {\r\n  if (options.ignoreComment) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    comment = comment.trim();\r\n  }\r\n  addField('comment', comment);\r\n}\r\n\r\nfunction onEndElement(name) {\r\n  var parentElement = currentElement[options.parentKey];\r\n  if (!options.addParent) {\r\n    delete currentElement[options.parentKey];\r\n  }\r\n  currentElement = parentElement;\r\n}\r\n\r\nfunction onCdata(cdata) {\r\n  if (options.ignoreCdata) {\r\n    return;\r\n  }\r\n  if (options.trim) {\r\n    cdata = cdata.trim();\r\n  }\r\n  addField('cdata', cdata);\r\n}\r\n\r\nfunction onDoctype(doctype) {\r\n  if (options.ignoreDoctype) {\r\n    return;\r\n  }\r\n  doctype = doctype.replace(/^ /, '');\r\n  if (options.trim) {\r\n    doctype = doctype.trim();\r\n  }\r\n  addField('doctype', doctype);\r\n}\r\n\r\nfunction onError(error) {\r\n  error.note = error; //console.error(error);\r\n}\r\n\r\nmodule.exports = function (xml, userOptions) {\r\n\r\n  var parser = pureJsParser ? sax.parser(true, {}) : parser = new expat.Parser('UTF-8');\r\n  var result = {};\r\n  currentElement = result;\r\n\r\n  options = validateOptions(userOptions);\r\n\r\n  if (pureJsParser) {\r\n    parser.opt = {strictEntities: true};\r\n    parser.onopentag = onStartElement;\r\n    parser.ontext = onText;\r\n    parser.oncomment = onComment;\r\n    parser.onclosetag = onEndElement;\r\n    parser.onerror = onError;\r\n    parser.oncdata = onCdata;\r\n    parser.ondoctype = onDoctype;\r\n    parser.onprocessinginstruction = onInstruction;\r\n  } else {\r\n    parser.on('startElement', onStartElement);\r\n    parser.on('text', onText);\r\n    parser.on('comment', onComment);\r\n    parser.on('endElement', onEndElement);\r\n    parser.on('error', onError);\r\n    //parser.on('startCdata', onStartCdata);\r\n    //parser.on('endCdata', onEndCdata);\r\n    //parser.on('entityDecl', onEntityDecl);\r\n  }\r\n\r\n  if (pureJsParser) {\r\n    parser.write(xml).close();\r\n  } else {\r\n    if (!parser.parse(xml)) {\r\n      throw new Error('XML parsing error: ' + parser.getError());\r\n    }\r\n  }\r\n\r\n  if (result[options.elementsKey]) {\r\n    var temp = result[options.elementsKey];\r\n    delete result[options.elementsKey];\r\n    result[options.elementsKey] = temp;\r\n    delete result.text;\r\n  }\r\n\r\n  return result;\r\n\r\n};\r\n","var helper = require('./options-helper');\nvar isArray = require('./array-helper').isArray;\n\nvar currentElement, currentElementName;\n\nfunction validateOptions(userOptions) {\n  var options = helper.copyOptions(userOptions);\n  helper.ensureFlagExists('ignoreDeclaration', options);\n  helper.ensureFlagExists('ignoreInstruction', options);\n  helper.ensureFlagExists('ignoreAttributes', options);\n  helper.ensureFlagExists('ignoreText', options);\n  helper.ensureFlagExists('ignoreComment', options);\n  helper.ensureFlagExists('ignoreCdata', options);\n  helper.ensureFlagExists('ignoreDoctype', options);\n  helper.ensureFlagExists('compact', options);\n  helper.ensureFlagExists('indentText', options);\n  helper.ensureFlagExists('indentCdata', options);\n  helper.ensureFlagExists('indentAttributes', options);\n  helper.ensureFlagExists('indentInstruction', options);\n  helper.ensureFlagExists('fullTagEmptyElement', options);\n  helper.ensureFlagExists('noQuotesForNativeAttributes', options);\n  helper.ensureSpacesExists(options);\n  if (typeof options.spaces === 'number') {\n    options.spaces = Array(options.spaces + 1).join(' ');\n  }\n  helper.ensureKeyExists('declaration', options);\n  helper.ensureKeyExists('instruction', options);\n  helper.ensureKeyExists('attributes', options);\n  helper.ensureKeyExists('text', options);\n  helper.ensureKeyExists('comment', options);\n  helper.ensureKeyExists('cdata', options);\n  helper.ensureKeyExists('doctype', options);\n  helper.ensureKeyExists('type', options);\n  helper.ensureKeyExists('name', options);\n  helper.ensureKeyExists('elements', options);\n  helper.checkFnExists('doctype', options);\n  helper.checkFnExists('instruction', options);\n  helper.checkFnExists('cdata', options);\n  helper.checkFnExists('comment', options);\n  helper.checkFnExists('text', options);\n  helper.checkFnExists('instructionName', options);\n  helper.checkFnExists('elementName', options);\n  helper.checkFnExists('attributeName', options);\n  helper.checkFnExists('attributeValue', options);\n  helper.checkFnExists('attributes', options);\n  helper.checkFnExists('fullTagEmptyElement', options);\n  return options;\n}\n\nfunction writeIndentation(options, depth, firstLine) {\n  return (!firstLine && options.spaces ? '\\n' : '') + Array(depth + 1).join(options.spaces);\n}\n\nfunction writeAttributes(attributes, options, depth) {\n  if (options.ignoreAttributes) {\n    return '';\n  }\n  if ('attributesFn' in options) {\n    attributes = options.attributesFn(attributes, currentElementName, currentElement);\n  }\n  var key, attr, attrName, quote, result = [];\n  for (key in attributes) {\n    if (attributes.hasOwnProperty(key) && attributes[key] !== null && attributes[key] !== undefined) {\n      quote = options.noQuotesForNativeAttributes && typeof attributes[key] !== 'string' ? '' : '\"';\n      attr = '' + attributes[key]; // ensure number and boolean are converted to String\n      attr = attr.replace(/\"/g, '&quot;');\n      attrName = 'attributeNameFn' in options ? options.attributeNameFn(key, attr, currentElementName, currentElement) : key;\n      result.push((options.spaces && options.indentAttributes? writeIndentation(options, depth+1, false) : ' '));\n      result.push(attrName + '=' + quote + ('attributeValueFn' in options ? options.attributeValueFn(attr, key, currentElementName, currentElement) : attr) + quote);\n    }\n  }\n  if (attributes && Object.keys(attributes).length && options.spaces && options.indentAttributes) {\n    result.push(writeIndentation(options, depth, false));\n  }\n  return result.join('');\n}\n\nfunction writeDeclaration(declaration, options, depth) {\n  currentElement = declaration;\n  currentElementName = 'xml';\n  return options.ignoreDeclaration ? '' :  '<?' + 'xml' + writeAttributes(declaration[options.attributesKey], options, depth) + '?>';\n}\n\nfunction writeInstruction(instruction, options, depth) {\n  if (options.ignoreInstruction) {\n    return '';\n  }\n  var key;\n  for (key in instruction) {\n    if (instruction.hasOwnProperty(key)) {\n      break;\n    }\n  }\n  var instructionName = 'instructionNameFn' in options ? options.instructionNameFn(key, instruction[key], currentElementName, currentElement) : key;\n  if (typeof instruction[key] === 'object') {\n    currentElement = instruction;\n    currentElementName = instructionName;\n    return '<?' + instructionName + writeAttributes(instruction[key][options.attributesKey], options, depth) + '?>';\n  } else {\n    var instructionValue = instruction[key] ? instruction[key] : '';\n    if ('instructionFn' in options) instructionValue = options.instructionFn(instructionValue, key, currentElementName, currentElement);\n    return '<?' + instructionName + (instructionValue ? ' ' + instructionValue : '') + '?>';\n  }\n}\n\nfunction writeComment(comment, options) {\n  return options.ignoreComment ? '' : '<!--' + ('commentFn' in options ? options.commentFn(comment, currentElementName, currentElement) : comment) + '-->';\n}\n\nfunction writeCdata(cdata, options) {\n  return options.ignoreCdata ? '' : '<![CDATA[' + ('cdataFn' in options ? options.cdataFn(cdata, currentElementName, currentElement) : cdata.replace(']]>', ']]]]><![CDATA[>')) + ']]>';\n}\n\nfunction writeDoctype(doctype, options) {\n  return options.ignoreDoctype ? '' : '<!DOCTYPE ' + ('doctypeFn' in options ? options.doctypeFn(doctype, currentElementName, currentElement) : doctype) + '>';\n}\n\nfunction writeText(text, options) {\n  if (options.ignoreText) return '';\n  text = '' + text; // ensure Number and Boolean are converted to String\n  text = text.replace(/&amp;/g, '&'); // desanitize to avoid double sanitization\n  text = text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return 'textFn' in options ? options.textFn(text, currentElementName, currentElement) : text;\n}\n\nfunction hasContent(element, options) {\n  var i;\n  if (element.elements && element.elements.length) {\n    for (i = 0; i < element.elements.length; ++i) {\n      switch (element.elements[i][options.typeKey]) {\n      case 'text':\n        if (options.indentText) {\n          return true;\n        }\n        break; // skip to next key\n      case 'cdata':\n        if (options.indentCdata) {\n          return true;\n        }\n        break; // skip to next key\n      case 'instruction':\n        if (options.indentInstruction) {\n          return true;\n        }\n        break; // skip to next key\n      case 'doctype':\n      case 'comment':\n      case 'element':\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElement(element, options, depth) {\n  currentElement = element;\n  currentElementName = element.name;\n  var xml = [], elementName = 'elementNameFn' in options ? options.elementNameFn(element.name, element) : element.name;\n  xml.push('<' + elementName);\n  if (element[options.attributesKey]) {\n    xml.push(writeAttributes(element[options.attributesKey], options, depth));\n  }\n  var withClosingTag = element[options.elementsKey] && element[options.elementsKey].length || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n  if (!withClosingTag) {\n    if ('fullTagEmptyElementFn' in options) {\n      withClosingTag = options.fullTagEmptyElementFn(element.name, element);\n    } else {\n      withClosingTag = options.fullTagEmptyElement;\n    }\n  }\n  if (withClosingTag) {\n    xml.push('>');\n    if (element[options.elementsKey] && element[options.elementsKey].length) {\n      xml.push(writeElements(element[options.elementsKey], options, depth + 1));\n      currentElement = element;\n      currentElementName = element.name;\n    }\n    xml.push(options.spaces && hasContent(element, options) ? '\\n' + Array(depth + 1).join(options.spaces) : '');\n    xml.push('</' + elementName + '>');\n  } else {\n    xml.push('/>');\n  }\n  return xml.join('');\n}\n\nfunction writeElements(elements, options, depth, firstLine) {\n  return elements.reduce(function (xml, element) {\n    var indent = writeIndentation(options, depth, firstLine && !xml);\n    switch (element.type) {\n    case 'element': return xml + indent + writeElement(element, options, depth);\n    case 'comment': return xml + indent + writeComment(element[options.commentKey], options);\n    case 'doctype': return xml + indent + writeDoctype(element[options.doctypeKey], options);\n    case 'cdata': return xml + (options.indentCdata ? indent : '') + writeCdata(element[options.cdataKey], options);\n    case 'text': return xml + (options.indentText ? indent : '') + writeText(element[options.textKey], options);\n    case 'instruction':\n      var instruction = {};\n      instruction[element[options.nameKey]] = element[options.attributesKey] ? element : element[options.instructionKey];\n      return xml + (options.indentInstruction ? indent : '') + writeInstruction(instruction, options, depth);\n    }\n  }, '');\n}\n\nfunction hasContentCompact(element, options, anyContent) {\n  var key;\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      switch (key) {\n      case options.parentKey:\n      case options.attributesKey:\n        break; // skip to next key\n      case options.textKey:\n        if (options.indentText || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.cdataKey:\n        if (options.indentCdata || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.instructionKey:\n        if (options.indentInstruction || anyContent) {\n          return true;\n        }\n        break; // skip to next key\n      case options.doctypeKey:\n      case options.commentKey:\n        return true;\n      default:\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction writeElementCompact(element, name, options, depth, indent) {\n  currentElement = element;\n  currentElementName = name;\n  var elementName = 'elementNameFn' in options ? options.elementNameFn(name, element) : name;\n  if (typeof element === 'undefined' || element === null || element === '') {\n    return 'fullTagEmptyElementFn' in options && options.fullTagEmptyElementFn(name, element) || options.fullTagEmptyElement ? '<' + elementName + '></' + elementName + '>' : '<' + elementName + '/>';\n  }\n  var xml = [];\n  if (name) {\n    xml.push('<' + elementName);\n    if (typeof element !== 'object') {\n      xml.push('>' + writeText(element,options) + '</' + elementName + '>');\n      return xml.join('');\n    }\n    if (element[options.attributesKey]) {\n      xml.push(writeAttributes(element[options.attributesKey], options, depth));\n    }\n    var withClosingTag = hasContentCompact(element, options, true) || element[options.attributesKey] && element[options.attributesKey]['xml:space'] === 'preserve';\n    if (!withClosingTag) {\n      if ('fullTagEmptyElementFn' in options) {\n        withClosingTag = options.fullTagEmptyElementFn(name, element);\n      } else {\n        withClosingTag = options.fullTagEmptyElement;\n      }\n    }\n    if (withClosingTag) {\n      xml.push('>');\n    } else {\n      xml.push('/>');\n      return xml.join('');\n    }\n  }\n  xml.push(writeElementsCompact(element, options, depth + 1, false));\n  currentElement = element;\n  currentElementName = name;\n  if (name) {\n    xml.push((indent ? writeIndentation(options, depth, false) : '') + '</' + elementName + '>');\n  }\n  return xml.join('');\n}\n\nfunction writeElementsCompact(element, options, depth, firstLine) {\n  var i, key, nodes, xml = [];\n  for (key in element) {\n    if (element.hasOwnProperty(key)) {\n      nodes = isArray(element[key]) ? element[key] : [element[key]];\n      for (i = 0; i < nodes.length; ++i) {\n        switch (key) {\n        case options.declarationKey: xml.push(writeDeclaration(nodes[i], options, depth)); break;\n        case options.instructionKey: xml.push((options.indentInstruction ? writeIndentation(options, depth, firstLine) : '') + writeInstruction(nodes[i], options, depth)); break;\n        case options.attributesKey: case options.parentKey: break; // skip\n        case options.textKey: xml.push((options.indentText ? writeIndentation(options, depth, firstLine) : '') + writeText(nodes[i], options)); break;\n        case options.cdataKey: xml.push((options.indentCdata ? writeIndentation(options, depth, firstLine) : '') + writeCdata(nodes[i], options)); break;\n        case options.doctypeKey: xml.push(writeIndentation(options, depth, firstLine) + writeDoctype(nodes[i], options)); break;\n        case options.commentKey: xml.push(writeIndentation(options, depth, firstLine) + writeComment(nodes[i], options)); break;\n        default: xml.push(writeIndentation(options, depth, firstLine) + writeElementCompact(nodes[i], key, options, depth, hasContentCompact(nodes[i], options)));\n        }\n        firstLine = firstLine && !xml.length;\n      }\n    }\n  }\n  return xml.join('');\n}\n\nmodule.exports = function (js, options) {\n  options = validateOptions(options);\n  var xml = [];\n  currentElement = js;\n  currentElementName = '_root_';\n  if (options.compact) {\n    xml.push(writeElementsCompact(js, options, 0, true));\n  } else {\n    if (js[options.declarationKey]) {\n      xml.push(writeDeclaration(js[options.declarationKey], options, 0));\n    }\n    if (js[options.elementsKey] && js[options.elementsKey].length) {\n      xml.push(writeElements(js[options.elementsKey], options, 0, !xml.length));\n    }\n  }\n  return xml.join('');\n};\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","var helper = require('./options-helper');\r\nvar xml2js = require('./xml2js');\r\n\r\nfunction validateOptions (userOptions) {\r\n  var options = helper.copyOptions(userOptions);\r\n  helper.ensureSpacesExists(options);\r\n  return options;\r\n}\r\n\r\nmodule.exports = function(xml, userOptions) {\r\n  var options, js, json, parentKey;\r\n  options = validateOptions(userOptions);\r\n  js = xml2js(xml, options);\r\n  parentKey = 'compact' in options && options.compact ? '_parent' : 'parent';\r\n  // parentKey = ptions.compact ? '_parent' : 'parent'; // consider this\r\n  if ('addParent' in options && options.addParent) {\r\n    json = JSON.stringify(js, function (k, v) { return k === parentKey? '_' : v; }, options.spaces);\r\n  } else {\r\n    json = JSON.stringify(js, null, options.spaces);\r\n  }\r\n  return json.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\r\n};\r\n","var js2xml = require('./js2xml.js');\r\n\r\nmodule.exports = function (json, options) {\r\n  if (json instanceof Buffer) {\r\n    json = json.toString();\r\n  }\r\n  var js = null;\r\n  if (typeof (json) === 'string') {\r\n    try {\r\n      js = JSON.parse(json);\r\n    } catch (e) {\r\n      throw new Error('The JSON structure is invalid');\r\n    }\r\n  } else {\r\n    js = json;\r\n  }\r\n  return js2xml(js, options);\r\n};\r\n"],"sourceRoot":""}