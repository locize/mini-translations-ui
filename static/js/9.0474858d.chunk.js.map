{"version":3,"sources":["../../file-resx/dist/es/index-be23e9e0.js"],"names":["commonjsGlobal","globalThis","window","global","self","createCommonjsModule","fn","module","exports","defaults","explicitCharkey","trim","normalize","normalizeTags","attrkey","charkey","explicitArray","ignoreAttrs","mergeAttrs","explicitRoot","validator","xmlns","explicitChildren","childkey","charsAsChildren","includeWhiteChars","async","strict","attrNameProcessors","attrValueProcessors","tagNameProcessors","valueProcessors","emptyTag","preserveChildrenOrder","rootName","xmldec","doctype","renderOpts","headless","chunkSize","cdata","call","builder","defaults$1","escapeCDATA","requiresCDATA","wrapCDATA","hasProp","hasOwnProperty","xmlbuilder","entry","indexOf","replace","Builder","opts","key","ref","value","this","options","prototype","buildObject","rootObj","render","rootElement","_this","Object","keys","length","element","obj","attr","child","index","_typeof$1","raw","txt","Array","isArray","ele","up","att","toString","create","allowSurrogateChars","end","sax","parser","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","Stream","buffers","i","l","clearBuffers","q","c","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","tag","error","noscript","state","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","ns","rootNS","trackPosition","position","line","column","emit","EVENTS","o","F","a","push","_end","write","chunk","charAt","BEGIN_WHITESPACE","beginWhiteSpace","TEXT","starti","textNode","substring","isWhitespace","strictFail","TEXT_ENTITY","OPEN_WAKA","startTagPosition","SCRIPT","SCRIPT_ENDING","script","CLOSE_TAG","SGML_DECL","sgmlDecl","isMatch","nameStart","OPEN_TAG","tagName","PROC_INST","procInstName","procInstBody","pad","join","toUpperCase","emitNode","CDATA","COMMENT","comment","DOCTYPE","isQuote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","textopts","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","name","body","nameBody","newTag","openTag","OPEN_TAG_SLASH","ATTRIB","closeTag","attribName","attribValue","ATTRIB_NAME","ATTRIB_VALUE","attrib","ATTRIB_NAME_SAW_WHITE","attributes","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","isAttribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","notMatch","returnState","buffer","parseEntity","entity","entityBody","entityStart","Error","maxAllowed","Math","max","maxActual","len","closeText","m","checkBufferLength","resume","close","flush","flushBuffers","stream","ex","streamWraps","filter","ev","apply","_parser","writable","readable","me","onend","onerror","er","_decoder","forEach","defineProperty","get","set","h","removeAllListeners","on","enumerable","configurable","constructor","data","Buffer","isBuffer","SD","string_decoder","StringDecoder","handler","args","arguments","splice","XML_NAMESPACE","XMLNS_NAMESPACE","xml","regex","test","s","STATE","COMMENT_STARTING","e","String","fromCharCode","event","nodeType","text","message","parent","qname","attribute","qualName","split","prefix","local","qn","selfClosing","uri","JSON","stringify","p","nv","isSelfClosing","toLowerCase","t","closeTo","pop","x","n","num","entityLC","numStr","slice","parseInt","isNaN","fromCodePoint","result","stringFromCharCode","floor","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","codePoint","Number","isFinite","RangeError","bom","stripBOM","str","processors","prefixMatch","RegExp","firstCharLowerCase","stripPrefix","parseNumbers","parseFloat","parseBooleans","bom$1","events$1","isEmpty","processItem","processors$1","sax$1","setImmediate","bind","events","timers","thing","item","process","Parser","superClass","parseStringPromise","parseString","reset","assignOrPush","processAsync","xmlnskey","unshift","ctor","__super__","extend","err","remaining","saxParser","substr","error1","errThrown","newValue","ontext","stack","ended","resultObject","EXPLICIT_CHARKEY","onopentag","node","processedKey","onclosetag","emptyStr","nodeName","objClone","old","xpath","match","results","concat","getOwnPropertyNames","charChild","oncdata","cb","Promise","resolve","reject","b","xml2js","builder$1","parser$1","ValidationError","resx2jsClb","withComments","root","d","$","resx2js","undefined","ret","_typeof","Symbol","iterator","js2resxClb","resources","pretty","indent","newline","version","encoding","resxJs","id","namespace","maxOccurs","type","minOccurs","use","resheader","js2resx"],"mappings":"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","file":"static/js/9.0474858d.chunk.js","sourcesContent":["import { _ as _typeof$1 } from './index-8266dc67.js';\nimport '@inweso-dev/i18n-utils';\nimport xmlbuilder from 'xmlbuilder';\nimport stream from 'stream';\nimport string_decoder from 'string_decoder';\nimport events from 'events';\nimport timers from 'timers';\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar defaults = createCommonjsModule(function (module, exports) {\n  // Generated by CoffeeScript 1.12.7\n  (function () {\n    exports.defaults = {\n      \"0.1\": {\n        explicitCharkey: false,\n        trim: true,\n        normalize: true,\n        normalizeTags: false,\n        attrkey: \"@\",\n        charkey: \"#\",\n        explicitArray: false,\n        ignoreAttrs: false,\n        mergeAttrs: false,\n        explicitRoot: false,\n        validator: null,\n        xmlns: false,\n        explicitChildren: false,\n        childkey: '@@',\n        charsAsChildren: false,\n        includeWhiteChars: false,\n        async: false,\n        strict: true,\n        attrNameProcessors: null,\n        attrValueProcessors: null,\n        tagNameProcessors: null,\n        valueProcessors: null,\n        emptyTag: ''\n      },\n      \"0.2\": {\n        explicitCharkey: false,\n        trim: false,\n        normalize: false,\n        normalizeTags: false,\n        attrkey: \"$\",\n        charkey: \"_\",\n        explicitArray: true,\n        ignoreAttrs: false,\n        mergeAttrs: false,\n        explicitRoot: true,\n        validator: null,\n        xmlns: false,\n        explicitChildren: false,\n        preserveChildrenOrder: false,\n        childkey: '$$',\n        charsAsChildren: false,\n        includeWhiteChars: false,\n        async: false,\n        strict: true,\n        attrNameProcessors: null,\n        attrValueProcessors: null,\n        tagNameProcessors: null,\n        valueProcessors: null,\n        rootName: 'root',\n        xmldec: {\n          'version': '1.0',\n          'encoding': 'UTF-8',\n          'standalone': true\n        },\n        doctype: null,\n        renderOpts: {\n          'pretty': true,\n          'indent': '  ',\n          'newline': '\\n'\n        },\n        headless: false,\n        chunkSize: 10000,\n        emptyTag: '',\n        cdata: false\n      }\n    };\n  }).call(commonjsGlobal);\n});\nvar defaults_1 = defaults.defaults;\n\nvar builder = createCommonjsModule(function (module, exports) {\n  // Generated by CoffeeScript 1.12.7\n  (function () {\n\n    var builder,\n        defaults$1,\n        escapeCDATA,\n        requiresCDATA,\n        wrapCDATA,\n        hasProp = {}.hasOwnProperty;\n    builder = xmlbuilder;\n    defaults$1 = defaults.defaults;\n\n    requiresCDATA = function requiresCDATA(entry) {\n      return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n    };\n\n    wrapCDATA = function wrapCDATA(entry) {\n      return \"<![CDATA[\" + escapeCDATA(entry) + \"]]>\";\n    };\n\n    escapeCDATA = function escapeCDATA(entry) {\n      return entry.replace(']]>', ']]]]><![CDATA[>');\n    };\n\n    exports.Builder = function () {\n      function Builder(opts) {\n        var key, ref, value;\n        this.options = {};\n        ref = defaults$1[\"0.2\"];\n\n        for (key in ref) {\n          if (!hasProp.call(ref, key)) continue;\n          value = ref[key];\n          this.options[key] = value;\n        }\n\n        for (key in opts) {\n          if (!hasProp.call(opts, key)) continue;\n          value = opts[key];\n          this.options[key] = value;\n        }\n      }\n\n      Builder.prototype.buildObject = function (rootObj) {\n        var attrkey, charkey, render, rootElement, rootName;\n        attrkey = this.options.attrkey;\n        charkey = this.options.charkey;\n\n        if (Object.keys(rootObj).length === 1 && this.options.rootName === defaults$1['0.2'].rootName) {\n          rootName = Object.keys(rootObj)[0];\n          rootObj = rootObj[rootName];\n        } else {\n          rootName = this.options.rootName;\n        }\n\n        render = function (_this) {\n          return function (element, obj) {\n            var attr, child, entry, index, key, value;\n\n            if (_typeof$1(obj) !== 'object') {\n              if (_this.options.cdata && requiresCDATA(obj)) {\n                element.raw(wrapCDATA(obj));\n              } else {\n                element.txt(obj);\n              }\n            } else if (Array.isArray(obj)) {\n              for (index in obj) {\n                if (!hasProp.call(obj, index)) continue;\n                child = obj[index];\n\n                for (key in child) {\n                  entry = child[key];\n                  element = render(element.ele(key), entry).up();\n                }\n              }\n            } else {\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                child = obj[key];\n\n                if (key === attrkey) {\n                  if (_typeof$1(child) === \"object\") {\n                    for (attr in child) {\n                      value = child[attr];\n                      element = element.att(attr, value);\n                    }\n                  }\n                } else if (key === charkey) {\n                  if (_this.options.cdata && requiresCDATA(child)) {\n                    element = element.raw(wrapCDATA(child));\n                  } else {\n                    element = element.txt(child);\n                  }\n                } else if (Array.isArray(child)) {\n                  for (index in child) {\n                    if (!hasProp.call(child, index)) continue;\n                    entry = child[index];\n\n                    if (typeof entry === 'string') {\n                      if (_this.options.cdata && requiresCDATA(entry)) {\n                        element = element.ele(key).raw(wrapCDATA(entry)).up();\n                      } else {\n                        element = element.ele(key, entry).up();\n                      }\n                    } else {\n                      element = render(element.ele(key), entry).up();\n                    }\n                  }\n                } else if (_typeof$1(child) === \"object\") {\n                  element = render(element.ele(key), child).up();\n                } else {\n                  if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                    element = element.ele(key).raw(wrapCDATA(child)).up();\n                  } else {\n                    if (child == null) {\n                      child = '';\n                    }\n\n                    element = element.ele(key, child.toString()).up();\n                  }\n                }\n              }\n            }\n\n            return element;\n          };\n        }(this);\n\n        rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n          headless: this.options.headless,\n          allowSurrogateChars: this.options.allowSurrogateChars\n        });\n        return render(rootElement, rootObj).end(this.options.renderOpts);\n      };\n\n      return Builder;\n    }();\n  }).call(commonjsGlobal);\n});\nvar builder_1 = builder.Builder;\n\nvar sax = createCommonjsModule(function (module, exports) {\n\n  (function (sax) {\n    // wrapper for non-node envs\n    sax.parser = function (strict, opt) {\n      return new SAXParser(strict, opt);\n    };\n\n    sax.SAXParser = SAXParser;\n    sax.SAXStream = SAXStream;\n    sax.createStream = createStream; // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n    // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n    // since that's the earliest that a buffer overrun could occur.  This way, checks are\n    // as rare as required, but as often as necessary to ensure never crossing this bound.\n    // Furthermore, buffers are only tested at most once per write(), so passing a very\n    // large string into write() might have undesirable effects, but this is manageable by\n    // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n    // edge case, result in creating at most one complete copy of the string passed in.\n    // Set to Infinity to have unlimited buffers.\n\n    sax.MAX_BUFFER_LENGTH = 64 * 1024;\n    var buffers = ['comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype', 'procInstName', 'procInstBody', 'entity', 'attribName', 'attribValue', 'cdata', 'script'];\n    sax.EVENTS = ['text', 'processinginstruction', 'sgmldeclaration', 'doctype', 'comment', 'opentagstart', 'attribute', 'opentag', 'closetag', 'opencdata', 'cdata', 'closecdata', 'error', 'end', 'ready', 'script', 'opennamespace', 'closenamespace'];\n\n    function SAXParser(strict, opt) {\n      if (!(this instanceof SAXParser)) {\n        return new SAXParser(strict, opt);\n      }\n\n      var parser = this;\n      clearBuffers(parser);\n      parser.q = parser.c = '';\n      parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH;\n      parser.opt = opt || {};\n      parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags;\n      parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase';\n      parser.tags = [];\n      parser.closed = parser.closedRoot = parser.sawRoot = false;\n      parser.tag = parser.error = null;\n      parser.strict = !!strict;\n      parser.noscript = !!(strict || parser.opt.noscript);\n      parser.state = S.BEGIN;\n      parser.strictEntities = parser.opt.strictEntities;\n      parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES);\n      parser.attribList = []; // namespaces form a prototype chain.\n      // it always points at the current tag,\n      // which protos to its parent tag.\n\n      if (parser.opt.xmlns) {\n        parser.ns = Object.create(rootNS);\n      } // mostly just for error reporting\n\n\n      parser.trackPosition = parser.opt.position !== false;\n\n      if (parser.trackPosition) {\n        parser.position = parser.line = parser.column = 0;\n      }\n\n      emit(parser, 'onready');\n    }\n\n    if (!Object.create) {\n      Object.create = function (o) {\n        function F() {}\n\n        F.prototype = o;\n        var newf = new F();\n        return newf;\n      };\n    }\n\n    if (!Object.keys) {\n      Object.keys = function (o) {\n        var a = [];\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) a.push(i);\n        }\n\n        return a;\n      };\n    }\n\n    function checkBufferLength(parser) {\n      var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10);\n      var maxActual = 0;\n\n      for (var i = 0, l = buffers.length; i < l; i++) {\n        var len = parser[buffers[i]].length;\n\n        if (len > maxAllowed) {\n          // Text/cdata nodes can get big, and since they're buffered,\n          // we can get here under normal conditions.\n          // Avoid issues by emitting the text node now,\n          // so at least it won't get any bigger.\n          switch (buffers[i]) {\n            case 'textNode':\n              closeText(parser);\n              break;\n\n            case 'cdata':\n              emitNode(parser, 'oncdata', parser.cdata);\n              parser.cdata = '';\n              break;\n\n            case 'script':\n              emitNode(parser, 'onscript', parser.script);\n              parser.script = '';\n              break;\n\n            default:\n              error(parser, 'Max buffer length exceeded: ' + buffers[i]);\n          }\n        }\n\n        maxActual = Math.max(maxActual, len);\n      } // schedule the next check for the earliest possible buffer overrun.\n\n\n      var m = sax.MAX_BUFFER_LENGTH - maxActual;\n      parser.bufferCheckPosition = m + parser.position;\n    }\n\n    function clearBuffers(parser) {\n      for (var i = 0, l = buffers.length; i < l; i++) {\n        parser[buffers[i]] = '';\n      }\n    }\n\n    function flushBuffers(parser) {\n      closeText(parser);\n\n      if (parser.cdata !== '') {\n        emitNode(parser, 'oncdata', parser.cdata);\n        parser.cdata = '';\n      }\n\n      if (parser.script !== '') {\n        emitNode(parser, 'onscript', parser.script);\n        parser.script = '';\n      }\n    }\n\n    SAXParser.prototype = {\n      end: function end() {\n        _end(this);\n      },\n      write: write,\n      resume: function resume() {\n        this.error = null;\n        return this;\n      },\n      close: function close() {\n        return this.write(null);\n      },\n      flush: function flush() {\n        flushBuffers(this);\n      }\n    };\n    var Stream;\n\n    try {\n      Stream = stream.Stream;\n    } catch (ex) {\n      Stream = function Stream() {};\n    }\n\n    var streamWraps = sax.EVENTS.filter(function (ev) {\n      return ev !== 'error' && ev !== 'end';\n    });\n\n    function createStream(strict, opt) {\n      return new SAXStream(strict, opt);\n    }\n\n    function SAXStream(strict, opt) {\n      if (!(this instanceof SAXStream)) {\n        return new SAXStream(strict, opt);\n      }\n\n      Stream.apply(this);\n      this._parser = new SAXParser(strict, opt);\n      this.writable = true;\n      this.readable = true;\n      var me = this;\n\n      this._parser.onend = function () {\n        me.emit('end');\n      };\n\n      this._parser.onerror = function (er) {\n        me.emit('error', er); // if didn't throw, then means error was handled.\n        // go ahead and clear error, so we can write again.\n\n        me._parser.error = null;\n      };\n\n      this._decoder = null;\n      streamWraps.forEach(function (ev) {\n        Object.defineProperty(me, 'on' + ev, {\n          get: function get() {\n            return me._parser['on' + ev];\n          },\n          set: function set(h) {\n            if (!h) {\n              me.removeAllListeners(ev);\n              me._parser['on' + ev] = h;\n              return h;\n            }\n\n            me.on(ev, h);\n          },\n          enumerable: true,\n          configurable: false\n        });\n      });\n    }\n\n    SAXStream.prototype = Object.create(Stream.prototype, {\n      constructor: {\n        value: SAXStream\n      }\n    });\n\n    SAXStream.prototype.write = function (data) {\n      if (typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function' && Buffer.isBuffer(data)) {\n        if (!this._decoder) {\n          var SD = string_decoder.StringDecoder;\n          this._decoder = new SD('utf8');\n        }\n\n        data = this._decoder.write(data);\n      }\n\n      this._parser.write(data.toString());\n\n      this.emit('data', data);\n      return true;\n    };\n\n    SAXStream.prototype.end = function (chunk) {\n      if (chunk && chunk.length) {\n        this.write(chunk);\n      }\n\n      this._parser.end();\n\n      return true;\n    };\n\n    SAXStream.prototype.on = function (ev, handler) {\n      var me = this;\n\n      if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n        me._parser['on' + ev] = function () {\n          var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n          args.splice(0, 0, ev);\n          me.emit.apply(me, args);\n        };\n      }\n\n      return Stream.prototype.on.call(me, ev, handler);\n    }; // this really needs to be replaced with character classes.\n    // XML allows all manner of ridiculous numbers and digits.\n\n\n    var CDATA = '[CDATA[';\n    var DOCTYPE = 'DOCTYPE';\n    var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace';\n    var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/';\n    var rootNS = {\n      xml: XML_NAMESPACE,\n      xmlns: XMLNS_NAMESPACE\n    }; // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n    // This implementation works on strings, a single character at a time\n    // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n    // without a significant breaking change to either this  parser, or the\n    // JavaScript language.  Implementation of an emoji-capable xml parser\n    // is left as an exercise for the reader.\n\n    var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\n    var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n    var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;\n    var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/;\n\n    function isWhitespace(c) {\n      return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t';\n    }\n\n    function isQuote(c) {\n      return c === '\"' || c === '\\'';\n    }\n\n    function isAttribEnd(c) {\n      return c === '>' || isWhitespace(c);\n    }\n\n    function isMatch(regex, c) {\n      return regex.test(c);\n    }\n\n    function notMatch(regex, c) {\n      return !isMatch(regex, c);\n    }\n\n    var S = 0;\n    sax.STATE = {\n      BEGIN: S++,\n      // leading byte order mark or whitespace\n      BEGIN_WHITESPACE: S++,\n      // leading whitespace\n      TEXT: S++,\n      // general stuff\n      TEXT_ENTITY: S++,\n      // &amp and such.\n      OPEN_WAKA: S++,\n      // <\n      SGML_DECL: S++,\n      // <!BLARG\n      SGML_DECL_QUOTED: S++,\n      // <!BLARG foo \"bar\n      DOCTYPE: S++,\n      // <!DOCTYPE\n      DOCTYPE_QUOTED: S++,\n      // <!DOCTYPE \"//blah\n      DOCTYPE_DTD: S++,\n      // <!DOCTYPE \"//blah\" [ ...\n      DOCTYPE_DTD_QUOTED: S++,\n      // <!DOCTYPE \"//blah\" [ \"foo\n      COMMENT_STARTING: S++,\n      // <!-\n      COMMENT: S++,\n      // <!--\n      COMMENT_ENDING: S++,\n      // <!-- blah -\n      COMMENT_ENDED: S++,\n      // <!-- blah --\n      CDATA: S++,\n      // <![CDATA[ something\n      CDATA_ENDING: S++,\n      // ]\n      CDATA_ENDING_2: S++,\n      // ]]\n      PROC_INST: S++,\n      // <?hi\n      PROC_INST_BODY: S++,\n      // <?hi there\n      PROC_INST_ENDING: S++,\n      // <?hi \"there\" ?\n      OPEN_TAG: S++,\n      // <strong\n      OPEN_TAG_SLASH: S++,\n      // <strong /\n      ATTRIB: S++,\n      // <a\n      ATTRIB_NAME: S++,\n      // <a foo\n      ATTRIB_NAME_SAW_WHITE: S++,\n      // <a foo _\n      ATTRIB_VALUE: S++,\n      // <a foo=\n      ATTRIB_VALUE_QUOTED: S++,\n      // <a foo=\"bar\n      ATTRIB_VALUE_CLOSED: S++,\n      // <a foo=\"bar\"\n      ATTRIB_VALUE_UNQUOTED: S++,\n      // <a foo=bar\n      ATTRIB_VALUE_ENTITY_Q: S++,\n      // <foo bar=\"&quot;\"\n      ATTRIB_VALUE_ENTITY_U: S++,\n      // <foo bar=&quot\n      CLOSE_TAG: S++,\n      // </a\n      CLOSE_TAG_SAW_WHITE: S++,\n      // </a   >\n      SCRIPT: S++,\n      // <script> ...\n      SCRIPT_ENDING: S++ // <script> ... <\n\n    };\n    sax.XML_ENTITIES = {\n      'amp': '&',\n      'gt': '>',\n      'lt': '<',\n      'quot': '\"',\n      'apos': \"'\"\n    };\n    sax.ENTITIES = {\n      'amp': '&',\n      'gt': '>',\n      'lt': '<',\n      'quot': '\"',\n      'apos': \"'\",\n      'AElig': 198,\n      'Aacute': 193,\n      'Acirc': 194,\n      'Agrave': 192,\n      'Aring': 197,\n      'Atilde': 195,\n      'Auml': 196,\n      'Ccedil': 199,\n      'ETH': 208,\n      'Eacute': 201,\n      'Ecirc': 202,\n      'Egrave': 200,\n      'Euml': 203,\n      'Iacute': 205,\n      'Icirc': 206,\n      'Igrave': 204,\n      'Iuml': 207,\n      'Ntilde': 209,\n      'Oacute': 211,\n      'Ocirc': 212,\n      'Ograve': 210,\n      'Oslash': 216,\n      'Otilde': 213,\n      'Ouml': 214,\n      'THORN': 222,\n      'Uacute': 218,\n      'Ucirc': 219,\n      'Ugrave': 217,\n      'Uuml': 220,\n      'Yacute': 221,\n      'aacute': 225,\n      'acirc': 226,\n      'aelig': 230,\n      'agrave': 224,\n      'aring': 229,\n      'atilde': 227,\n      'auml': 228,\n      'ccedil': 231,\n      'eacute': 233,\n      'ecirc': 234,\n      'egrave': 232,\n      'eth': 240,\n      'euml': 235,\n      'iacute': 237,\n      'icirc': 238,\n      'igrave': 236,\n      'iuml': 239,\n      'ntilde': 241,\n      'oacute': 243,\n      'ocirc': 244,\n      'ograve': 242,\n      'oslash': 248,\n      'otilde': 245,\n      'ouml': 246,\n      'szlig': 223,\n      'thorn': 254,\n      'uacute': 250,\n      'ucirc': 251,\n      'ugrave': 249,\n      'uuml': 252,\n      'yacute': 253,\n      'yuml': 255,\n      'copy': 169,\n      'reg': 174,\n      'nbsp': 160,\n      'iexcl': 161,\n      'cent': 162,\n      'pound': 163,\n      'curren': 164,\n      'yen': 165,\n      'brvbar': 166,\n      'sect': 167,\n      'uml': 168,\n      'ordf': 170,\n      'laquo': 171,\n      'not': 172,\n      'shy': 173,\n      'macr': 175,\n      'deg': 176,\n      'plusmn': 177,\n      'sup1': 185,\n      'sup2': 178,\n      'sup3': 179,\n      'acute': 180,\n      'micro': 181,\n      'para': 182,\n      'middot': 183,\n      'cedil': 184,\n      'ordm': 186,\n      'raquo': 187,\n      'frac14': 188,\n      'frac12': 189,\n      'frac34': 190,\n      'iquest': 191,\n      'times': 215,\n      'divide': 247,\n      'OElig': 338,\n      'oelig': 339,\n      'Scaron': 352,\n      'scaron': 353,\n      'Yuml': 376,\n      'fnof': 402,\n      'circ': 710,\n      'tilde': 732,\n      'Alpha': 913,\n      'Beta': 914,\n      'Gamma': 915,\n      'Delta': 916,\n      'Epsilon': 917,\n      'Zeta': 918,\n      'Eta': 919,\n      'Theta': 920,\n      'Iota': 921,\n      'Kappa': 922,\n      'Lambda': 923,\n      'Mu': 924,\n      'Nu': 925,\n      'Xi': 926,\n      'Omicron': 927,\n      'Pi': 928,\n      'Rho': 929,\n      'Sigma': 931,\n      'Tau': 932,\n      'Upsilon': 933,\n      'Phi': 934,\n      'Chi': 935,\n      'Psi': 936,\n      'Omega': 937,\n      'alpha': 945,\n      'beta': 946,\n      'gamma': 947,\n      'delta': 948,\n      'epsilon': 949,\n      'zeta': 950,\n      'eta': 951,\n      'theta': 952,\n      'iota': 953,\n      'kappa': 954,\n      'lambda': 955,\n      'mu': 956,\n      'nu': 957,\n      'xi': 958,\n      'omicron': 959,\n      'pi': 960,\n      'rho': 961,\n      'sigmaf': 962,\n      'sigma': 963,\n      'tau': 964,\n      'upsilon': 965,\n      'phi': 966,\n      'chi': 967,\n      'psi': 968,\n      'omega': 969,\n      'thetasym': 977,\n      'upsih': 978,\n      'piv': 982,\n      'ensp': 8194,\n      'emsp': 8195,\n      'thinsp': 8201,\n      'zwnj': 8204,\n      'zwj': 8205,\n      'lrm': 8206,\n      'rlm': 8207,\n      'ndash': 8211,\n      'mdash': 8212,\n      'lsquo': 8216,\n      'rsquo': 8217,\n      'sbquo': 8218,\n      'ldquo': 8220,\n      'rdquo': 8221,\n      'bdquo': 8222,\n      'dagger': 8224,\n      'Dagger': 8225,\n      'bull': 8226,\n      'hellip': 8230,\n      'permil': 8240,\n      'prime': 8242,\n      'Prime': 8243,\n      'lsaquo': 8249,\n      'rsaquo': 8250,\n      'oline': 8254,\n      'frasl': 8260,\n      'euro': 8364,\n      'image': 8465,\n      'weierp': 8472,\n      'real': 8476,\n      'trade': 8482,\n      'alefsym': 8501,\n      'larr': 8592,\n      'uarr': 8593,\n      'rarr': 8594,\n      'darr': 8595,\n      'harr': 8596,\n      'crarr': 8629,\n      'lArr': 8656,\n      'uArr': 8657,\n      'rArr': 8658,\n      'dArr': 8659,\n      'hArr': 8660,\n      'forall': 8704,\n      'part': 8706,\n      'exist': 8707,\n      'empty': 8709,\n      'nabla': 8711,\n      'isin': 8712,\n      'notin': 8713,\n      'ni': 8715,\n      'prod': 8719,\n      'sum': 8721,\n      'minus': 8722,\n      'lowast': 8727,\n      'radic': 8730,\n      'prop': 8733,\n      'infin': 8734,\n      'ang': 8736,\n      'and': 8743,\n      'or': 8744,\n      'cap': 8745,\n      'cup': 8746,\n      'int': 8747,\n      'there4': 8756,\n      'sim': 8764,\n      'cong': 8773,\n      'asymp': 8776,\n      'ne': 8800,\n      'equiv': 8801,\n      'le': 8804,\n      'ge': 8805,\n      'sub': 8834,\n      'sup': 8835,\n      'nsub': 8836,\n      'sube': 8838,\n      'supe': 8839,\n      'oplus': 8853,\n      'otimes': 8855,\n      'perp': 8869,\n      'sdot': 8901,\n      'lceil': 8968,\n      'rceil': 8969,\n      'lfloor': 8970,\n      'rfloor': 8971,\n      'lang': 9001,\n      'rang': 9002,\n      'loz': 9674,\n      'spades': 9824,\n      'clubs': 9827,\n      'hearts': 9829,\n      'diams': 9830\n    };\n    Object.keys(sax.ENTITIES).forEach(function (key) {\n      var e = sax.ENTITIES[key];\n      var s = typeof e === 'number' ? String.fromCharCode(e) : e;\n      sax.ENTITIES[key] = s;\n    });\n\n    for (var s in sax.STATE) {\n      sax.STATE[sax.STATE[s]] = s;\n    } // shorthand\n\n\n    S = sax.STATE;\n\n    function emit(parser, event, data) {\n      parser[event] && parser[event](data);\n    }\n\n    function emitNode(parser, nodeType, data) {\n      if (parser.textNode) closeText(parser);\n      emit(parser, nodeType, data);\n    }\n\n    function closeText(parser) {\n      parser.textNode = textopts(parser.opt, parser.textNode);\n      if (parser.textNode) emit(parser, 'ontext', parser.textNode);\n      parser.textNode = '';\n    }\n\n    function textopts(opt, text) {\n      if (opt.trim) text = text.trim();\n      if (opt.normalize) text = text.replace(/\\s+/g, ' ');\n      return text;\n    }\n\n    function error(parser, er) {\n      closeText(parser);\n\n      if (parser.trackPosition) {\n        er += '\\nLine: ' + parser.line + '\\nColumn: ' + parser.column + '\\nChar: ' + parser.c;\n      }\n\n      er = new Error(er);\n      parser.error = er;\n      emit(parser, 'onerror', er);\n      return parser;\n    }\n\n    function _end(parser) {\n      if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag');\n\n      if (parser.state !== S.BEGIN && parser.state !== S.BEGIN_WHITESPACE && parser.state !== S.TEXT) {\n        error(parser, 'Unexpected end');\n      }\n\n      closeText(parser);\n      parser.c = '';\n      parser.closed = true;\n      emit(parser, 'onend');\n      SAXParser.call(parser, parser.strict, parser.opt);\n      return parser;\n    }\n\n    function strictFail(parser, message) {\n      if (_typeof$1(parser) !== 'object' || !(parser instanceof SAXParser)) {\n        throw new Error('bad call to strictFail');\n      }\n\n      if (parser.strict) {\n        error(parser, message);\n      }\n    }\n\n    function newTag(parser) {\n      if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]();\n      var parent = parser.tags[parser.tags.length - 1] || parser;\n      var tag = parser.tag = {\n        name: parser.tagName,\n        attributes: {}\n      }; // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n\n      if (parser.opt.xmlns) {\n        tag.ns = parent.ns;\n      }\n\n      parser.attribList.length = 0;\n      emitNode(parser, 'onopentagstart', tag);\n    }\n\n    function qname(name, attribute) {\n      var i = name.indexOf(':');\n      var qualName = i < 0 ? ['', name] : name.split(':');\n      var prefix = qualName[0];\n      var local = qualName[1]; // <x \"xmlns\"=\"http://foo\">\n\n      if (attribute && name === 'xmlns') {\n        prefix = 'xmlns';\n        local = '';\n      }\n\n      return {\n        prefix: prefix,\n        local: local\n      };\n    }\n\n    function attrib(parser) {\n      if (!parser.strict) {\n        parser.attribName = parser.attribName[parser.looseCase]();\n      }\n\n      if (parser.attribList.indexOf(parser.attribName) !== -1 || parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n        parser.attribName = parser.attribValue = '';\n        return;\n      }\n\n      if (parser.opt.xmlns) {\n        var qn = qname(parser.attribName, true);\n        var prefix = qn.prefix;\n        var local = qn.local;\n\n        if (prefix === 'xmlns') {\n          // namespace binding attribute. push the binding into scope\n          if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n            strictFail(parser, 'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' + 'Actual: ' + parser.attribValue);\n          } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n            strictFail(parser, 'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' + 'Actual: ' + parser.attribValue);\n          } else {\n            var tag = parser.tag;\n            var parent = parser.tags[parser.tags.length - 1] || parser;\n\n            if (tag.ns === parent.ns) {\n              tag.ns = Object.create(parent.ns);\n            }\n\n            tag.ns[local] = parser.attribValue;\n          }\n        } // defer onattribute events until all attributes have been seen\n        // so any new bindings can take effect. preserve attribute order\n        // so deferred events can be emitted in document order\n\n\n        parser.attribList.push([parser.attribName, parser.attribValue]);\n      } else {\n        // in non-xmlns mode, we can emit the event right away\n        parser.tag.attributes[parser.attribName] = parser.attribValue;\n        emitNode(parser, 'onattribute', {\n          name: parser.attribName,\n          value: parser.attribValue\n        });\n      }\n\n      parser.attribName = parser.attribValue = '';\n    }\n\n    function openTag(parser, selfClosing) {\n      if (parser.opt.xmlns) {\n        // emit namespace binding events\n        var tag = parser.tag; // add namespace info to tag\n\n        var qn = qname(parser.tagName);\n        tag.prefix = qn.prefix;\n        tag.local = qn.local;\n        tag.uri = tag.ns[qn.prefix] || '';\n\n        if (tag.prefix && !tag.uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' + JSON.stringify(parser.tagName));\n          tag.uri = qn.prefix;\n        }\n\n        var parent = parser.tags[parser.tags.length - 1] || parser;\n\n        if (tag.ns && parent.ns !== tag.ns) {\n          Object.keys(tag.ns).forEach(function (p) {\n            emitNode(parser, 'onopennamespace', {\n              prefix: p,\n              uri: tag.ns[p]\n            });\n          });\n        } // handle deferred onattribute events\n        // Note: do not apply default ns to attributes:\n        //   http://www.w3.org/TR/REC-xml-names/#defaulting\n\n\n        for (var i = 0, l = parser.attribList.length; i < l; i++) {\n          var nv = parser.attribList[i];\n          var name = nv[0];\n          var value = nv[1];\n          var qualName = qname(name, true);\n          var prefix = qualName.prefix;\n          var local = qualName.local;\n          var uri = prefix === '' ? '' : tag.ns[prefix] || '';\n          var a = {\n            name: name,\n            value: value,\n            prefix: prefix,\n            local: local,\n            uri: uri\n          }; // if there's any attributes with an undefined namespace,\n          // then fail on them now.\n\n          if (prefix && prefix !== 'xmlns' && !uri) {\n            strictFail(parser, 'Unbound namespace prefix: ' + JSON.stringify(prefix));\n            a.uri = prefix;\n          }\n\n          parser.tag.attributes[name] = a;\n          emitNode(parser, 'onattribute', a);\n        }\n\n        parser.attribList.length = 0;\n      }\n\n      parser.tag.isSelfClosing = !!selfClosing; // process the tag\n\n      parser.sawRoot = true;\n      parser.tags.push(parser.tag);\n      emitNode(parser, 'onopentag', parser.tag);\n\n      if (!selfClosing) {\n        // special case for <script> in non-strict mode.\n        if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n          parser.state = S.SCRIPT;\n        } else {\n          parser.state = S.TEXT;\n        }\n\n        parser.tag = null;\n        parser.tagName = '';\n      }\n\n      parser.attribName = parser.attribValue = '';\n      parser.attribList.length = 0;\n    }\n\n    function closeTag(parser) {\n      if (!parser.tagName) {\n        strictFail(parser, 'Weird empty close tag.');\n        parser.textNode += '</>';\n        parser.state = S.TEXT;\n        return;\n      }\n\n      if (parser.script) {\n        if (parser.tagName !== 'script') {\n          parser.script += '</' + parser.tagName + '>';\n          parser.tagName = '';\n          parser.state = S.SCRIPT;\n          return;\n        }\n\n        emitNode(parser, 'onscript', parser.script);\n        parser.script = '';\n      } // first make sure that the closing tag actually exists.\n      // <a><b></c></b></a> will close everything, otherwise.\n\n\n      var t = parser.tags.length;\n      var tagName = parser.tagName;\n\n      if (!parser.strict) {\n        tagName = tagName[parser.looseCase]();\n      }\n\n      var closeTo = tagName;\n\n      while (t--) {\n        var close = parser.tags[t];\n\n        if (close.name !== closeTo) {\n          // fail the first time in strict mode\n          strictFail(parser, 'Unexpected close tag');\n        } else {\n          break;\n        }\n      } // didn't find it.  we already failed for strict, so just abort.\n\n\n      if (t < 0) {\n        strictFail(parser, 'Unmatched closing tag: ' + parser.tagName);\n        parser.textNode += '</' + parser.tagName + '>';\n        parser.state = S.TEXT;\n        return;\n      }\n\n      parser.tagName = tagName;\n      var s = parser.tags.length;\n\n      while (s-- > t) {\n        var tag = parser.tag = parser.tags.pop();\n        parser.tagName = parser.tag.name;\n        emitNode(parser, 'onclosetag', parser.tagName);\n        var x = {};\n\n        for (var i in tag.ns) {\n          x[i] = tag.ns[i];\n        }\n\n        var parent = parser.tags[parser.tags.length - 1] || parser;\n\n        if (parser.opt.xmlns && tag.ns !== parent.ns) {\n          // remove namespace bindings introduced by tag\n          Object.keys(tag.ns).forEach(function (p) {\n            var n = tag.ns[p];\n            emitNode(parser, 'onclosenamespace', {\n              prefix: p,\n              uri: n\n            });\n          });\n        }\n      }\n\n      if (t === 0) parser.closedRoot = true;\n      parser.tagName = parser.attribValue = parser.attribName = '';\n      parser.attribList.length = 0;\n      parser.state = S.TEXT;\n    }\n\n    function parseEntity(parser) {\n      var entity = parser.entity;\n      var entityLC = entity.toLowerCase();\n      var num;\n      var numStr = '';\n\n      if (parser.ENTITIES[entity]) {\n        return parser.ENTITIES[entity];\n      }\n\n      if (parser.ENTITIES[entityLC]) {\n        return parser.ENTITIES[entityLC];\n      }\n\n      entity = entityLC;\n\n      if (entity.charAt(0) === '#') {\n        if (entity.charAt(1) === 'x') {\n          entity = entity.slice(2);\n          num = parseInt(entity, 16);\n          numStr = num.toString(16);\n        } else {\n          entity = entity.slice(1);\n          num = parseInt(entity, 10);\n          numStr = num.toString(10);\n        }\n      }\n\n      entity = entity.replace(/^0+/, '');\n\n      if (isNaN(num) || numStr.toLowerCase() !== entity) {\n        strictFail(parser, 'Invalid character entity');\n        return '&' + parser.entity + ';';\n      }\n\n      return String.fromCodePoint(num);\n    }\n\n    function beginWhiteSpace(parser, c) {\n      if (c === '<') {\n        parser.state = S.OPEN_WAKA;\n        parser.startTagPosition = parser.position;\n      } else if (!isWhitespace(c)) {\n        // have to process this as a text node.\n        // weird, but happens.\n        strictFail(parser, 'Non-whitespace before first tag.');\n        parser.textNode = c;\n        parser.state = S.TEXT;\n      }\n    }\n\n    function charAt(chunk, i) {\n      var result = '';\n\n      if (i < chunk.length) {\n        result = chunk.charAt(i);\n      }\n\n      return result;\n    }\n\n    function write(chunk) {\n      var parser = this;\n\n      if (this.error) {\n        throw this.error;\n      }\n\n      if (parser.closed) {\n        return error(parser, 'Cannot write after close. Assign an onready handler.');\n      }\n\n      if (chunk === null) {\n        return _end(parser);\n      }\n\n      if (_typeof$1(chunk) === 'object') {\n        chunk = chunk.toString();\n      }\n\n      var i = 0;\n      var c = '';\n\n      while (true) {\n        c = charAt(chunk, i++);\n        parser.c = c;\n\n        if (!c) {\n          break;\n        }\n\n        if (parser.trackPosition) {\n          parser.position++;\n\n          if (c === '\\n') {\n            parser.line++;\n            parser.column = 0;\n          } else {\n            parser.column++;\n          }\n        }\n\n        switch (parser.state) {\n          case S.BEGIN:\n            parser.state = S.BEGIN_WHITESPACE;\n\n            if (c === \"\\uFEFF\") {\n              continue;\n            }\n\n            beginWhiteSpace(parser, c);\n            continue;\n\n          case S.BEGIN_WHITESPACE:\n            beginWhiteSpace(parser, c);\n            continue;\n\n          case S.TEXT:\n            if (parser.sawRoot && !parser.closedRoot) {\n              var starti = i - 1;\n\n              while (c && c !== '<' && c !== '&') {\n                c = charAt(chunk, i++);\n\n                if (c && parser.trackPosition) {\n                  parser.position++;\n\n                  if (c === '\\n') {\n                    parser.line++;\n                    parser.column = 0;\n                  } else {\n                    parser.column++;\n                  }\n                }\n              }\n\n              parser.textNode += chunk.substring(starti, i - 1);\n            }\n\n            if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n              parser.state = S.OPEN_WAKA;\n              parser.startTagPosition = parser.position;\n            } else {\n              if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n                strictFail(parser, 'Text data outside of root node.');\n              }\n\n              if (c === '&') {\n                parser.state = S.TEXT_ENTITY;\n              } else {\n                parser.textNode += c;\n              }\n            }\n\n            continue;\n\n          case S.SCRIPT:\n            // only non-strict\n            if (c === '<') {\n              parser.state = S.SCRIPT_ENDING;\n            } else {\n              parser.script += c;\n            }\n\n            continue;\n\n          case S.SCRIPT_ENDING:\n            if (c === '/') {\n              parser.state = S.CLOSE_TAG;\n            } else {\n              parser.script += '<' + c;\n              parser.state = S.SCRIPT;\n            }\n\n            continue;\n\n          case S.OPEN_WAKA:\n            // either a /, ?, !, or text is coming next.\n            if (c === '!') {\n              parser.state = S.SGML_DECL;\n              parser.sgmlDecl = '';\n            } else if (isWhitespace(c)) ; else if (isMatch(nameStart, c)) {\n              parser.state = S.OPEN_TAG;\n              parser.tagName = c;\n            } else if (c === '/') {\n              parser.state = S.CLOSE_TAG;\n              parser.tagName = '';\n            } else if (c === '?') {\n              parser.state = S.PROC_INST;\n              parser.procInstName = parser.procInstBody = '';\n            } else {\n              strictFail(parser, 'Unencoded <'); // if there was some whitespace, then add that in.\n\n              if (parser.startTagPosition + 1 < parser.position) {\n                var pad = parser.position - parser.startTagPosition;\n                c = new Array(pad).join(' ') + c;\n              }\n\n              parser.textNode += '<' + c;\n              parser.state = S.TEXT;\n            }\n\n            continue;\n\n          case S.SGML_DECL:\n            if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n              emitNode(parser, 'onopencdata');\n              parser.state = S.CDATA;\n              parser.sgmlDecl = '';\n              parser.cdata = '';\n            } else if (parser.sgmlDecl + c === '--') {\n              parser.state = S.COMMENT;\n              parser.comment = '';\n              parser.sgmlDecl = '';\n            } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n              parser.state = S.DOCTYPE;\n\n              if (parser.doctype || parser.sawRoot) {\n                strictFail(parser, 'Inappropriately located doctype declaration');\n              }\n\n              parser.doctype = '';\n              parser.sgmlDecl = '';\n            } else if (c === '>') {\n              emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl);\n              parser.sgmlDecl = '';\n              parser.state = S.TEXT;\n            } else if (isQuote(c)) {\n              parser.state = S.SGML_DECL_QUOTED;\n              parser.sgmlDecl += c;\n            } else {\n              parser.sgmlDecl += c;\n            }\n\n            continue;\n\n          case S.SGML_DECL_QUOTED:\n            if (c === parser.q) {\n              parser.state = S.SGML_DECL;\n              parser.q = '';\n            }\n\n            parser.sgmlDecl += c;\n            continue;\n\n          case S.DOCTYPE:\n            if (c === '>') {\n              parser.state = S.TEXT;\n              emitNode(parser, 'ondoctype', parser.doctype);\n              parser.doctype = true; // just remember that we saw it.\n            } else {\n              parser.doctype += c;\n\n              if (c === '[') {\n                parser.state = S.DOCTYPE_DTD;\n              } else if (isQuote(c)) {\n                parser.state = S.DOCTYPE_QUOTED;\n                parser.q = c;\n              }\n            }\n\n            continue;\n\n          case S.DOCTYPE_QUOTED:\n            parser.doctype += c;\n\n            if (c === parser.q) {\n              parser.q = '';\n              parser.state = S.DOCTYPE;\n            }\n\n            continue;\n\n          case S.DOCTYPE_DTD:\n            parser.doctype += c;\n\n            if (c === ']') {\n              parser.state = S.DOCTYPE;\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_DTD_QUOTED;\n              parser.q = c;\n            }\n\n            continue;\n\n          case S.DOCTYPE_DTD_QUOTED:\n            parser.doctype += c;\n\n            if (c === parser.q) {\n              parser.state = S.DOCTYPE_DTD;\n              parser.q = '';\n            }\n\n            continue;\n\n          case S.COMMENT:\n            if (c === '-') {\n              parser.state = S.COMMENT_ENDING;\n            } else {\n              parser.comment += c;\n            }\n\n            continue;\n\n          case S.COMMENT_ENDING:\n            if (c === '-') {\n              parser.state = S.COMMENT_ENDED;\n              parser.comment = textopts(parser.opt, parser.comment);\n\n              if (parser.comment) {\n                emitNode(parser, 'oncomment', parser.comment);\n              }\n\n              parser.comment = '';\n            } else {\n              parser.comment += '-' + c;\n              parser.state = S.COMMENT;\n            }\n\n            continue;\n\n          case S.COMMENT_ENDED:\n            if (c !== '>') {\n              strictFail(parser, 'Malformed comment'); // allow <!-- blah -- bloo --> in non-strict mode,\n              // which is a comment of \" blah -- bloo \"\n\n              parser.comment += '--' + c;\n              parser.state = S.COMMENT;\n            } else {\n              parser.state = S.TEXT;\n            }\n\n            continue;\n\n          case S.CDATA:\n            if (c === ']') {\n              parser.state = S.CDATA_ENDING;\n            } else {\n              parser.cdata += c;\n            }\n\n            continue;\n\n          case S.CDATA_ENDING:\n            if (c === ']') {\n              parser.state = S.CDATA_ENDING_2;\n            } else {\n              parser.cdata += ']' + c;\n              parser.state = S.CDATA;\n            }\n\n            continue;\n\n          case S.CDATA_ENDING_2:\n            if (c === '>') {\n              if (parser.cdata) {\n                emitNode(parser, 'oncdata', parser.cdata);\n              }\n\n              emitNode(parser, 'onclosecdata');\n              parser.cdata = '';\n              parser.state = S.TEXT;\n            } else if (c === ']') {\n              parser.cdata += ']';\n            } else {\n              parser.cdata += ']]' + c;\n              parser.state = S.CDATA;\n            }\n\n            continue;\n\n          case S.PROC_INST:\n            if (c === '?') {\n              parser.state = S.PROC_INST_ENDING;\n            } else if (isWhitespace(c)) {\n              parser.state = S.PROC_INST_BODY;\n            } else {\n              parser.procInstName += c;\n            }\n\n            continue;\n\n          case S.PROC_INST_BODY:\n            if (!parser.procInstBody && isWhitespace(c)) {\n              continue;\n            } else if (c === '?') {\n              parser.state = S.PROC_INST_ENDING;\n            } else {\n              parser.procInstBody += c;\n            }\n\n            continue;\n\n          case S.PROC_INST_ENDING:\n            if (c === '>') {\n              emitNode(parser, 'onprocessinginstruction', {\n                name: parser.procInstName,\n                body: parser.procInstBody\n              });\n              parser.procInstName = parser.procInstBody = '';\n              parser.state = S.TEXT;\n            } else {\n              parser.procInstBody += '?' + c;\n              parser.state = S.PROC_INST_BODY;\n            }\n\n            continue;\n\n          case S.OPEN_TAG:\n            if (isMatch(nameBody, c)) {\n              parser.tagName += c;\n            } else {\n              newTag(parser);\n\n              if (c === '>') {\n                openTag(parser);\n              } else if (c === '/') {\n                parser.state = S.OPEN_TAG_SLASH;\n              } else {\n                if (!isWhitespace(c)) {\n                  strictFail(parser, 'Invalid character in tag name');\n                }\n\n                parser.state = S.ATTRIB;\n              }\n            }\n\n            continue;\n\n          case S.OPEN_TAG_SLASH:\n            if (c === '>') {\n              openTag(parser, true);\n              closeTag(parser);\n            } else {\n              strictFail(parser, 'Forward-slash in opening tag not followed by >');\n              parser.state = S.ATTRIB;\n            }\n\n            continue;\n\n          case S.ATTRIB:\n            // haven't read the attribute name yet.\n            if (isWhitespace(c)) {\n              continue;\n            } else if (c === '>') {\n              openTag(parser);\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH;\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c;\n              parser.attribValue = '';\n              parser.state = S.ATTRIB_NAME;\n            } else {\n              strictFail(parser, 'Invalid attribute name');\n            }\n\n            continue;\n\n          case S.ATTRIB_NAME:\n            if (c === '=') {\n              parser.state = S.ATTRIB_VALUE;\n            } else if (c === '>') {\n              strictFail(parser, 'Attribute without value');\n              parser.attribValue = parser.attribName;\n              attrib(parser);\n              openTag(parser);\n            } else if (isWhitespace(c)) {\n              parser.state = S.ATTRIB_NAME_SAW_WHITE;\n            } else if (isMatch(nameBody, c)) {\n              parser.attribName += c;\n            } else {\n              strictFail(parser, 'Invalid attribute name');\n            }\n\n            continue;\n\n          case S.ATTRIB_NAME_SAW_WHITE:\n            if (c === '=') {\n              parser.state = S.ATTRIB_VALUE;\n            } else if (isWhitespace(c)) {\n              continue;\n            } else {\n              strictFail(parser, 'Attribute without value');\n              parser.tag.attributes[parser.attribName] = '';\n              parser.attribValue = '';\n              emitNode(parser, 'onattribute', {\n                name: parser.attribName,\n                value: ''\n              });\n              parser.attribName = '';\n\n              if (c === '>') {\n                openTag(parser);\n              } else if (isMatch(nameStart, c)) {\n                parser.attribName = c;\n                parser.state = S.ATTRIB_NAME;\n              } else {\n                strictFail(parser, 'Invalid attribute name');\n                parser.state = S.ATTRIB;\n              }\n            }\n\n            continue;\n\n          case S.ATTRIB_VALUE:\n            if (isWhitespace(c)) {\n              continue;\n            } else if (isQuote(c)) {\n              parser.q = c;\n              parser.state = S.ATTRIB_VALUE_QUOTED;\n            } else {\n              strictFail(parser, 'Unquoted attribute value');\n              parser.state = S.ATTRIB_VALUE_UNQUOTED;\n              parser.attribValue = c;\n            }\n\n            continue;\n\n          case S.ATTRIB_VALUE_QUOTED:\n            if (c !== parser.q) {\n              if (c === '&') {\n                parser.state = S.ATTRIB_VALUE_ENTITY_Q;\n              } else {\n                parser.attribValue += c;\n              }\n\n              continue;\n            }\n\n            attrib(parser);\n            parser.q = '';\n            parser.state = S.ATTRIB_VALUE_CLOSED;\n            continue;\n\n          case S.ATTRIB_VALUE_CLOSED:\n            if (isWhitespace(c)) {\n              parser.state = S.ATTRIB;\n            } else if (c === '>') {\n              openTag(parser);\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH;\n            } else if (isMatch(nameStart, c)) {\n              strictFail(parser, 'No whitespace between attributes');\n              parser.attribName = c;\n              parser.attribValue = '';\n              parser.state = S.ATTRIB_NAME;\n            } else {\n              strictFail(parser, 'Invalid attribute name');\n            }\n\n            continue;\n\n          case S.ATTRIB_VALUE_UNQUOTED:\n            if (!isAttribEnd(c)) {\n              if (c === '&') {\n                parser.state = S.ATTRIB_VALUE_ENTITY_U;\n              } else {\n                parser.attribValue += c;\n              }\n\n              continue;\n            }\n\n            attrib(parser);\n\n            if (c === '>') {\n              openTag(parser);\n            } else {\n              parser.state = S.ATTRIB;\n            }\n\n            continue;\n\n          case S.CLOSE_TAG:\n            if (!parser.tagName) {\n              if (isWhitespace(c)) {\n                continue;\n              } else if (notMatch(nameStart, c)) {\n                if (parser.script) {\n                  parser.script += '</' + c;\n                  parser.state = S.SCRIPT;\n                } else {\n                  strictFail(parser, 'Invalid tagname in closing tag.');\n                }\n              } else {\n                parser.tagName = c;\n              }\n            } else if (c === '>') {\n              closeTag(parser);\n            } else if (isMatch(nameBody, c)) {\n              parser.tagName += c;\n            } else if (parser.script) {\n              parser.script += '</' + parser.tagName;\n              parser.tagName = '';\n              parser.state = S.SCRIPT;\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid tagname in closing tag');\n              }\n\n              parser.state = S.CLOSE_TAG_SAW_WHITE;\n            }\n\n            continue;\n\n          case S.CLOSE_TAG_SAW_WHITE:\n            if (isWhitespace(c)) {\n              continue;\n            }\n\n            if (c === '>') {\n              closeTag(parser);\n            } else {\n              strictFail(parser, 'Invalid characters in closing tag');\n            }\n\n            continue;\n\n          case S.TEXT_ENTITY:\n          case S.ATTRIB_VALUE_ENTITY_Q:\n          case S.ATTRIB_VALUE_ENTITY_U:\n            var returnState;\n            var buffer;\n\n            switch (parser.state) {\n              case S.TEXT_ENTITY:\n                returnState = S.TEXT;\n                buffer = 'textNode';\n                break;\n\n              case S.ATTRIB_VALUE_ENTITY_Q:\n                returnState = S.ATTRIB_VALUE_QUOTED;\n                buffer = 'attribValue';\n                break;\n\n              case S.ATTRIB_VALUE_ENTITY_U:\n                returnState = S.ATTRIB_VALUE_UNQUOTED;\n                buffer = 'attribValue';\n                break;\n            }\n\n            if (c === ';') {\n              parser[buffer] += parseEntity(parser);\n              parser.entity = '';\n              parser.state = returnState;\n            } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n              parser.entity += c;\n            } else {\n              strictFail(parser, 'Invalid character in entity name');\n              parser[buffer] += '&' + parser.entity + c;\n              parser.entity = '';\n              parser.state = returnState;\n            }\n\n            continue;\n\n          default:\n            throw new Error(parser, 'Unknown state: ' + parser.state);\n        }\n      } // while\n\n\n      if (parser.position >= parser.bufferCheckPosition) {\n        checkBufferLength(parser);\n      }\n\n      return parser;\n    }\n    /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n\n    /* istanbul ignore next */\n\n\n    if (!String.fromCodePoint) {\n      (function () {\n        var stringFromCharCode = String.fromCharCode;\n        var floor = Math.floor;\n\n        var fromCodePoint = function fromCodePoint() {\n          var MAX_SIZE = 0x4000;\n          var codeUnits = [];\n          var highSurrogate;\n          var lowSurrogate;\n          var index = -1;\n          var length = arguments.length;\n\n          if (!length) {\n            return '';\n          }\n\n          var result = '';\n\n          while (++index < length) {\n            var codePoint = Number(arguments[index]);\n\n            if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n            ) {\n                throw RangeError('Invalid code point: ' + codePoint);\n              }\n\n            if (codePoint <= 0xFFFF) {\n              // BMP code point\n              codeUnits.push(codePoint);\n            } else {\n              // Astral code point; split in surrogate halves\n              // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n              codePoint -= 0x10000;\n              highSurrogate = (codePoint >> 10) + 0xD800;\n              lowSurrogate = codePoint % 0x400 + 0xDC00;\n              codeUnits.push(highSurrogate, lowSurrogate);\n            }\n\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n              result += stringFromCharCode.apply(null, codeUnits);\n              codeUnits.length = 0;\n            }\n          }\n\n          return result;\n        };\n        /* istanbul ignore next */\n\n\n        if (Object.defineProperty) {\n          Object.defineProperty(String, 'fromCodePoint', {\n            value: fromCodePoint,\n            configurable: true,\n            writable: true\n          });\n        } else {\n          String.fromCodePoint = fromCodePoint;\n        }\n      })();\n    }\n  })( exports);\n});\n\nvar bom = createCommonjsModule(function (module, exports) {\n  // Generated by CoffeeScript 1.12.7\n  (function () {\n\n    exports.stripBOM = function (str) {\n      if (str[0] === \"\\uFEFF\") {\n        return str.substring(1);\n      } else {\n        return str;\n      }\n    };\n  }).call(commonjsGlobal);\n});\nvar bom_1 = bom.stripBOM;\n\nvar processors = createCommonjsModule(function (module, exports) {\n  // Generated by CoffeeScript 1.12.7\n  (function () {\n\n    var prefixMatch;\n    prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n    exports.normalize = function (str) {\n      return str.toLowerCase();\n    };\n\n    exports.firstCharLowerCase = function (str) {\n      return str.charAt(0).toLowerCase() + str.slice(1);\n    };\n\n    exports.stripPrefix = function (str) {\n      return str.replace(prefixMatch, '');\n    };\n\n    exports.parseNumbers = function (str) {\n      if (!isNaN(str)) {\n        str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n      }\n\n      return str;\n    };\n\n    exports.parseBooleans = function (str) {\n      if (/^(?:true|false)$/i.test(str)) {\n        str = str.toLowerCase() === 'true';\n      }\n\n      return str;\n    };\n  }).call(commonjsGlobal);\n});\nvar processors_1 = processors.normalize;\nvar processors_2 = processors.firstCharLowerCase;\nvar processors_3 = processors.stripPrefix;\nvar processors_4 = processors.parseNumbers;\nvar processors_5 = processors.parseBooleans;\n\nvar parser = createCommonjsModule(function (module, exports) {\n  // Generated by CoffeeScript 1.12.7\n  (function () {\n\n    var bom$1,\n        defaults$1,\n        events$1,\n        isEmpty,\n        processItem,\n        processors$1,\n        sax$1,\n        setImmediate,\n        bind = function bind(fn, me) {\n      return function () {\n        return fn.apply(me, arguments);\n      };\n    },\n        extend = function extend(child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n        hasProp = {}.hasOwnProperty;\n\n    sax$1 = sax;\n    events$1 = events;\n    bom$1 = bom;\n    processors$1 = processors;\n    setImmediate = timers.setImmediate;\n    defaults$1 = defaults.defaults;\n\n    isEmpty = function isEmpty(thing) {\n      return _typeof$1(thing) === \"object\" && thing != null && Object.keys(thing).length === 0;\n    };\n\n    processItem = function processItem(processors, item, key) {\n      var i, len, process;\n\n      for (i = 0, len = processors.length; i < len; i++) {\n        process = processors[i];\n        item = process(item, key);\n      }\n\n      return item;\n    };\n\n    exports.Parser = function (superClass) {\n      extend(Parser, superClass);\n\n      function Parser(opts) {\n        this.parseStringPromise = bind(this.parseStringPromise, this);\n        this.parseString = bind(this.parseString, this);\n        this.reset = bind(this.reset, this);\n        this.assignOrPush = bind(this.assignOrPush, this);\n        this.processAsync = bind(this.processAsync, this);\n        var key, ref, value;\n\n        if (!(this instanceof exports.Parser)) {\n          return new exports.Parser(opts);\n        }\n\n        this.options = {};\n        ref = defaults$1[\"0.2\"];\n\n        for (key in ref) {\n          if (!hasProp.call(ref, key)) continue;\n          value = ref[key];\n          this.options[key] = value;\n        }\n\n        for (key in opts) {\n          if (!hasProp.call(opts, key)) continue;\n          value = opts[key];\n          this.options[key] = value;\n        }\n\n        if (this.options.xmlns) {\n          this.options.xmlnskey = this.options.attrkey + \"ns\";\n        }\n\n        if (this.options.normalizeTags) {\n          if (!this.options.tagNameProcessors) {\n            this.options.tagNameProcessors = [];\n          }\n\n          this.options.tagNameProcessors.unshift(processors$1.normalize);\n        }\n\n        this.reset();\n      }\n\n      Parser.prototype.processAsync = function () {\n        var chunk, err;\n\n        try {\n          if (this.remaining.length <= this.options.chunkSize) {\n            chunk = this.remaining;\n            this.remaining = '';\n            this.saxParser = this.saxParser.write(chunk);\n            return this.saxParser.close();\n          } else {\n            chunk = this.remaining.substr(0, this.options.chunkSize);\n            this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n            this.saxParser = this.saxParser.write(chunk);\n            return setImmediate(this.processAsync);\n          }\n        } catch (error1) {\n          err = error1;\n\n          if (!this.saxParser.errThrown) {\n            this.saxParser.errThrown = true;\n            return this.emit(err);\n          }\n        }\n      };\n\n      Parser.prototype.assignOrPush = function (obj, key, newValue) {\n        if (!(key in obj)) {\n          if (!this.options.explicitArray) {\n            return obj[key] = newValue;\n          } else {\n            return obj[key] = [newValue];\n          }\n        } else {\n          if (!(obj[key] instanceof Array)) {\n            obj[key] = [obj[key]];\n          }\n\n          return obj[key].push(newValue);\n        }\n      };\n\n      Parser.prototype.reset = function () {\n        var attrkey, charkey, ontext, stack;\n        this.removeAllListeners();\n        this.saxParser = sax$1.parser(this.options.strict, {\n          trim: false,\n          normalize: false,\n          xmlns: this.options.xmlns\n        });\n        this.saxParser.errThrown = false;\n\n        this.saxParser.onerror = function (_this) {\n          return function (error) {\n            _this.saxParser.resume();\n\n            if (!_this.saxParser.errThrown) {\n              _this.saxParser.errThrown = true;\n              return _this.emit(\"error\", error);\n            }\n          };\n        }(this);\n\n        this.saxParser.onend = function (_this) {\n          return function () {\n            if (!_this.saxParser.ended) {\n              _this.saxParser.ended = true;\n              return _this.emit(\"end\", _this.resultObject);\n            }\n          };\n        }(this);\n\n        this.saxParser.ended = false;\n        this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n        this.resultObject = null;\n        stack = [];\n        attrkey = this.options.attrkey;\n        charkey = this.options.charkey;\n\n        this.saxParser.onopentag = function (_this) {\n          return function (node) {\n            var key, newValue, obj, processedKey, ref;\n            obj = {};\n            obj[charkey] = \"\";\n\n            if (!_this.options.ignoreAttrs) {\n              ref = node.attributes;\n\n              for (key in ref) {\n                if (!hasProp.call(ref, key)) continue;\n\n                if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                  obj[attrkey] = {};\n                }\n\n                newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n                processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n\n                if (_this.options.mergeAttrs) {\n                  _this.assignOrPush(obj, processedKey, newValue);\n                } else {\n                  obj[attrkey][processedKey] = newValue;\n                }\n              }\n            }\n\n            obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n\n            if (_this.options.xmlns) {\n              obj[_this.options.xmlnskey] = {\n                uri: node.uri,\n                local: node.local\n              };\n            }\n\n            return stack.push(obj);\n          };\n        }(this);\n\n        this.saxParser.onclosetag = function (_this) {\n          return function () {\n            var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n            obj = stack.pop();\n            nodeName = obj[\"#name\"];\n\n            if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n              delete obj[\"#name\"];\n            }\n\n            if (obj.cdata === true) {\n              cdata = obj.cdata;\n              delete obj.cdata;\n            }\n\n            s = stack[stack.length - 1];\n\n            if (obj[charkey].match(/^\\s*$/) && !cdata) {\n              emptyStr = obj[charkey];\n              delete obj[charkey];\n            } else {\n              if (_this.options.trim) {\n                obj[charkey] = obj[charkey].trim();\n              }\n\n              if (_this.options.normalize) {\n                obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n\n              obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n\n            if (isEmpty(obj)) {\n              obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n            }\n\n            if (_this.options.validator != null) {\n              xpath = \"/\" + function () {\n                var i, len, results;\n                results = [];\n\n                for (i = 0, len = stack.length; i < len; i++) {\n                  node = stack[i];\n                  results.push(node[\"#name\"]);\n                }\n\n                return results;\n              }().concat(nodeName).join(\"/\");\n\n              (function () {\n                var err;\n\n                try {\n                  return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n                } catch (error1) {\n                  err = error1;\n                  return _this.emit(\"error\", err);\n                }\n              })();\n            }\n\n            if (_this.options.explicitChildren && !_this.options.mergeAttrs && _typeof$1(obj) === 'object') {\n              if (!_this.options.preserveChildrenOrder) {\n                node = {};\n\n                if (_this.options.attrkey in obj) {\n                  node[_this.options.attrkey] = obj[_this.options.attrkey];\n                  delete obj[_this.options.attrkey];\n                }\n\n                if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                  node[_this.options.charkey] = obj[_this.options.charkey];\n                  delete obj[_this.options.charkey];\n                }\n\n                if (Object.getOwnPropertyNames(obj).length > 0) {\n                  node[_this.options.childkey] = obj;\n                }\n\n                obj = node;\n              } else if (s) {\n                s[_this.options.childkey] = s[_this.options.childkey] || [];\n                objClone = {};\n\n                for (key in obj) {\n                  if (!hasProp.call(obj, key)) continue;\n                  objClone[key] = obj[key];\n                }\n\n                s[_this.options.childkey].push(objClone);\n\n                delete obj[\"#name\"];\n\n                if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                  obj = obj[charkey];\n                }\n              }\n            }\n\n            if (stack.length > 0) {\n              return _this.assignOrPush(s, nodeName, obj);\n            } else {\n              if (_this.options.explicitRoot) {\n                old = obj;\n                obj = {};\n                obj[nodeName] = old;\n              }\n\n              _this.resultObject = obj;\n              _this.saxParser.ended = true;\n              return _this.emit(\"end\", _this.resultObject);\n            }\n          };\n        }(this);\n\n        ontext = function (_this) {\n          return function (text) {\n            var charChild, s;\n            s = stack[stack.length - 1];\n\n            if (s) {\n              s[charkey] += text;\n\n              if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n                s[_this.options.childkey] = s[_this.options.childkey] || [];\n                charChild = {\n                  '#name': '__text__'\n                };\n                charChild[charkey] = text;\n\n                if (_this.options.normalize) {\n                  charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n                }\n\n                s[_this.options.childkey].push(charChild);\n              }\n\n              return s;\n            }\n          };\n        }(this);\n\n        this.saxParser.ontext = ontext;\n        return this.saxParser.oncdata = function (_this) {\n          return function (text) {\n            var s;\n            s = ontext(text);\n\n            if (s) {\n              return s.cdata = true;\n            }\n          };\n        }();\n      };\n\n      Parser.prototype.parseString = function (str, cb) {\n        var err;\n\n        if (cb != null && typeof cb === \"function\") {\n          this.on(\"end\", function (result) {\n            this.reset();\n            return cb(null, result);\n          });\n          this.on(\"error\", function (err) {\n            this.reset();\n            return cb(err);\n          });\n        }\n\n        try {\n          str = str.toString();\n\n          if (str.trim() === '') {\n            this.emit(\"end\", null);\n            return true;\n          }\n\n          str = bom$1.stripBOM(str);\n\n          if (this.options.async) {\n            this.remaining = str;\n            setImmediate(this.processAsync);\n            return this.saxParser;\n          }\n\n          return this.saxParser.write(str).close();\n        } catch (error1) {\n          err = error1;\n\n          if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n            this.emit('error', err);\n            return this.saxParser.errThrown = true;\n          } else if (this.saxParser.ended) {\n            throw err;\n          }\n        }\n      };\n\n      Parser.prototype.parseStringPromise = function (str) {\n        return new Promise(function (_this) {\n          return function (resolve, reject) {\n            return _this.parseString(str, function (err, value) {\n              if (err) {\n                return reject(err);\n              } else {\n                return resolve(value);\n              }\n            });\n          };\n        }(this));\n      };\n\n      return Parser;\n    }(events$1);\n\n    exports.parseString = function (str, a, b) {\n      var cb, options, parser;\n\n      if (b != null) {\n        if (typeof b === 'function') {\n          cb = b;\n        }\n\n        if (_typeof$1(a) === 'object') {\n          options = a;\n        }\n      } else {\n        if (typeof a === 'function') {\n          cb = a;\n        }\n\n        options = {};\n      }\n\n      parser = new exports.Parser(options);\n      return parser.parseString(str, cb);\n    };\n\n    exports.parseStringPromise = function (str, a) {\n      var options, parser;\n\n      if (_typeof$1(a) === 'object') {\n        options = a;\n      }\n\n      parser = new exports.Parser(options);\n      return parser.parseStringPromise(str);\n    };\n  }).call(commonjsGlobal);\n});\nvar parser_1 = parser.Parser;\nvar parser_2 = parser.parseString;\nvar parser_3 = parser.parseStringPromise;\n\nvar xml2js = createCommonjsModule(function (module, exports) {\n  // Generated by CoffeeScript 1.12.7\n  (function () {\n\n    var builder$1,\n        defaults$1,\n        parser$1,\n        processors$1,\n        extend = function extend(child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n        hasProp = {}.hasOwnProperty;\n\n    defaults$1 = defaults;\n    builder$1 = builder;\n    parser$1 = parser;\n    processors$1 = processors;\n    exports.defaults = defaults$1.defaults;\n    exports.processors = processors$1;\n\n    exports.ValidationError = function (superClass) {\n      extend(ValidationError, superClass);\n\n      function ValidationError(message) {\n        this.message = message;\n      }\n\n      return ValidationError;\n    }(Error);\n\n    exports.Builder = builder$1.Builder;\n    exports.Parser = parser$1.Parser;\n    exports.parseString = parser$1.parseString;\n    exports.parseStringPromise = parser$1.parseStringPromise;\n  }).call(commonjsGlobal);\n});\nvar xml2js_1 = xml2js.defaults;\nvar xml2js_2 = xml2js.processors;\nvar xml2js_3 = xml2js.ValidationError;\nvar xml2js_4 = xml2js.Builder;\nvar xml2js_5 = xml2js.Parser;\nvar xml2js_6 = xml2js.parseString;\nvar xml2js_7 = xml2js.parseStringPromise;\n\nvar parser$1 = new xml2js.Parser();\n\nvar resx2jsClb = function resx2jsClb(str, withComments, cb) {\n  if (!cb && typeof withComments === 'function') {\n    cb = withComments;\n    withComments = false;\n  }\n\n  if (typeof str !== 'string') return cb(new Error('The first parameter was not a string'));\n  var result = {};\n  parser$1.parseString(str, function (err, data) {\n    if (err) return cb(err);\n\n    if (data && data.root && data.root.data && data.root.data.length > 0) {\n      data.root.data.forEach(function (d) {\n        if (d && d.$ && d.$.name && d.value && d.value.length > 0) {\n          var key = d.$.name;\n          var value = d.value[0];\n\n          if (!withComments) {\n            result[key] = value;\n          } else {\n            result[key] = {\n              value: value\n            };\n\n            if (d.comment) {\n              var comment = d.comment[0];\n              result[key].comment = comment;\n            }\n          }\n        }\n      });\n    }\n\n    cb(null, result);\n  });\n};\n\nfunction resx2js(str, withComments, cb) {\n  if (!cb && withComments === undefined) {\n    return new Promise(function (resolve, reject) {\n      return resx2jsClb(str, withComments, function (err, ret) {\n        return err ? reject(err) : resolve(ret);\n      });\n    });\n  }\n\n  if (!cb && typeof withComments !== 'function') {\n    return new Promise(function (resolve, reject) {\n      return resx2jsClb(str, withComments, function (err, ret) {\n        return err ? reject(err) : resolve(ret);\n      });\n    });\n  }\n\n  resx2jsClb(str, withComments, cb);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar js2resxClb = function js2resxClb(resources, opt, cb) {\n  if (!cb && typeof opt === 'function') {\n    cb = opt;\n    opt = {\n      pretty: true,\n      indent: '  ',\n      newline: '\\n'\n    };\n  }\n\n  opt = opt || {\n    pretty: true,\n    indent: '  ',\n    newline: '\\n'\n  };\n  var builder = new xml2js.Builder({\n    rootName: 'root',\n    headless: false,\n    renderOpts: {\n      pretty: opt.pretty !== false,\n      indent: opt.indent || '  ',\n      newline: opt.newline || '\\n'\n    },\n    xmldec: {\n      version: '1.0',\n      encoding: 'utf-8'\n    }\n  });\n  var resxJs = {\n    $: {},\n    'xsd:schema': {\n      $: {\n        id: 'root',\n        xmlns: '',\n        'xmlns:xsd': 'http://www.w3.org/2001/XMLSchema',\n        'xmlns:msdata': 'urn:schemas-microsoft-com:xml-msdata'\n      },\n      'xsd:import': {\n        $: {\n          namespace: 'http://www.w3.org/XML/1998/namespace'\n        }\n      },\n      'xsd:element': {\n        $: {\n          name: 'root',\n          'msdata:IsDataSet': 'true'\n        },\n        'xsd:complexType': {\n          'xsd:choice': {\n            $: {\n              maxOccurs: 'unbounded'\n            },\n            'xsd:element': [{\n              $: {\n                name: 'metadata'\n              },\n              'xsd:complexType': {\n                'xsd:sequence': {\n                  'xsd:element': {\n                    $: {\n                      name: 'value',\n                      type: 'xsd:string',\n                      minOccurs: '0'\n                    }\n                  }\n                },\n                'xsd:attribute': [{\n                  $: {\n                    name: 'name',\n                    use: 'required',\n                    type: 'xsd:string'\n                  }\n                }, {\n                  $: {\n                    name: 'type',\n                    type: 'xsd:string'\n                  }\n                }, {\n                  $: {\n                    name: 'mimetype',\n                    type: 'xsd:string'\n                  }\n                }, {\n                  $: {\n                    ref: 'xml:space'\n                  }\n                }]\n              }\n            }, {\n              $: {\n                name: 'assembly'\n              },\n              'xsd:complexType': {\n                'xsd:attribute': [{\n                  $: {\n                    name: 'alias',\n                    type: 'xsd:string'\n                  }\n                }, {\n                  $: {\n                    name: 'name',\n                    type: 'xsd:string'\n                  }\n                }]\n              }\n            }, {\n              $: {\n                name: 'data'\n              },\n              'xsd:complexType': {\n                'xsd:sequence': {\n                  'xsd:element': [{\n                    $: {\n                      name: 'value',\n                      type: 'xsd:string',\n                      minOccurs: '0',\n                      'msdata:Ordinal': '1'\n                    }\n                  }, {\n                    $: {\n                      name: 'comment',\n                      type: 'xsd:string',\n                      minOccurs: '0',\n                      'msdata:Ordinal': '2'\n                    }\n                  }]\n                },\n                'xsd:attribute': [{\n                  $: {\n                    name: 'name',\n                    type: 'xsd:string',\n                    use: 'required',\n                    'msdata:Ordinal': '1'\n                  }\n                }, {\n                  $: {\n                    name: 'type',\n                    type: 'xsd:string',\n                    'msdata:Ordinal': '3'\n                  }\n                }, {\n                  $: {\n                    name: 'mimetype',\n                    type: 'xsd:string',\n                    'msdata:Ordinal': '4'\n                  }\n                }, {\n                  $: {\n                    ref: 'xml:space'\n                  }\n                }]\n              }\n            }, {\n              $: {\n                name: 'resheader'\n              },\n              'xsd:complexType': {\n                'xsd:sequence': {\n                  'xsd:element': {\n                    $: {\n                      name: 'value',\n                      type: 'xsd:string',\n                      minOccurs: '0',\n                      'msdata:Ordinal': '1'\n                    }\n                  }\n                },\n                'xsd:attribute': {\n                  $: {\n                    name: 'name',\n                    type: 'xsd:string',\n                    use: 'required'\n                  }\n                }\n              }\n            }]\n          }\n        }\n      }\n    },\n    resheader: [{\n      $: {\n        name: 'resmimetype'\n      },\n      value: 'text/microsoft-resx'\n    }, {\n      $: {\n        name: 'version'\n      },\n      value: '2.0'\n    }, {\n      $: {\n        name: 'reader'\n      },\n      value: 'System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\n    }, {\n      $: {\n        name: 'writer'\n      },\n      value: 'System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\n    }],\n    data: []\n  };\n  Object.keys(resources).forEach(function (key) {\n    var str = {\n      $: {\n        name: key,\n        'xml:space': 'preserve'\n      },\n      value: resources[key]\n    };\n\n    if (_typeof(resources[key]) === 'object' && resources[key].value) {\n      str.value = resources[key].value;\n      str.comment = resources[key].comment;\n    }\n\n    resxJs.data.push(str);\n  });\n  var xml = builder.buildObject(resxJs);\n  xml = xml.replace('<root>', \"<root>\\n  <!--\\n    Microsoft ResX Schema\\n\\n    Version 2.0\\n\\n    The primary goals of this format is to allow a simple XML format\\n    that is mostly human readable. The generation and parsing of the\\n    various data types are done through the TypeConverter classes\\n    associated with the data types.\\n\\n    Example:\\n\\n    ... ado.net/XML headers & schema ...\\n    <resheader name=\\\"resmimetype\\\">text/microsoft-resx</resheader>\\n    <resheader name=\\\"version\\\">2.0</resheader>\\n    <resheader name=\\\"reader\\\">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>\\n    <resheader name=\\\"writer\\\">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>\\n    <data name=\\\"Name1\\\"><value>this is my long string</value><comment>this is a comment</comment></data>\\n    <data name=\\\"Color1\\\" type=\\\"System.Drawing.Color, System.Drawing\\\">Blue</data>\\n    <data name=\\\"Bitmap1\\\" mimetype=\\\"application/x-microsoft.net.object.binary.base64\\\">\\n        <value>[base64 mime encoded serialized .NET Framework object]</value>\\n    </data>\\n    <data name=\\\"Icon1\\\" type=\\\"System.Drawing.Icon, System.Drawing\\\" mimetype=\\\"application/x-microsoft.net.object.bytearray.base64\\\">\\n        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>\\n        <comment>This is a comment</comment>\\n    </data>\\n\\n    There are any number of \\\"resheader\\\" rows that contain simple\\n    name/value pairs.\\n\\n    Each data row contains a name, and value. The row also contains a\\n    type or mimetype. Type corresponds to a .NET class that support\\n    text/value conversion through the TypeConverter architecture.\\n    Classes that don't support this are serialized and stored with the\\n    mimetype set.\\n\\n    The mimetype is used for serialized objects, and tells the\\n    ResXResourceReader how to depersist the object. This is currently not\\n    extensible. For a given mimetype the value must be set accordingly:\\n\\n    Note - application/x-microsoft.net.object.binary.base64 is the format\\n    that the ResXResourceWriter will generate, however the reader can\\n    read any of the formats listed below.\\n\\n    mimetype: application/x-microsoft.net.object.binary.base64\\n    value   : The object must be serialized with\\n            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter\\n            : and then encoded with base64 encoding.\\n\\n    mimetype: application/x-microsoft.net.object.soap.base64\\n    value   : The object must be serialized with\\n            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter\\n            : and then encoded with base64 encoding.\\n\\n    mimetype: application/x-microsoft.net.object.bytearray.base64\\n    value   : The object must be serialized into a byte array\\n            : using a System.ComponentModel.TypeConverter\\n            : and then encoded with base64 encoding.\\n    -->\");\n  if (cb) cb(null, xml);\n  return xml;\n};\n\nfunction js2resx(resources, opt, cb) {\n  if (!cb && opt === undefined) {\n    return new Promise(function (resolve, reject) {\n      return js2resxClb(resources, opt, function (err, ret) {\n        return err ? reject(err) : resolve(ret);\n      });\n    });\n  }\n\n  if (!cb && typeof opt !== 'function') {\n    return new Promise(function (resolve, reject) {\n      return js2resxClb(resources, opt, function (err, ret) {\n        return err ? reject(err) : resolve(ret);\n      });\n    });\n  }\n\n  js2resxClb(resources, opt, cb);\n}\n\nvar index = {\n  resx2js: resx2js,\n  js2resx: js2resx\n};\n\nexport default index;\nexport { js2resx, resx2js };\n"],"sourceRoot":""}